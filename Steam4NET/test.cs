using System;
using System.Runtime.InteropServices;
using Steam4NET;

namespace Steam4NET
{
	public enum EServerMode
	{
		eServerModeInvalid = 0,
		eServerModeNoAuthentication = 1,
		eServerModeAuthentication = 2,
		eServerModeAuthenticationAndSecure = 3,
	}
	
	public enum k_EFriendFlags
	{
		k_EFriendFlagNone = 0,
		k_EFriendFlagBlocked = 1,
		k_EFriendFlagFriendshipRequested = 2,
		k_EFriendFlagImmediate = 4,
		k_EFriendFlagClanMember = 8,
		k_EFriendFlagOnGameServer = 16,
		k_EFriendFlagRequestingFriendship = 128,
		k_EFriendFlagRequestingInfo = 256,
		k_EFriendFlagIgnored = 512,
		k_EFriendFlagIgnoredFriend = 1024,
		k_EFriendFlagAll = 65535,
	}
	
	public enum ESNetSocketState
	{
		k_ESNetSocketStateInvalid = 0,
		k_ESNetSocketStateConnected = 1,
		k_ESNetSocketStateInitiated = 10,
		k_ESNetSocketStateLocalCandidatesFound = 11,
		k_ESNetSocketStateReceivedRemoteCandidates = 12,
		k_ESNetSocketStateChallengeHandshake = 15,
		k_ESNetSocketStateDisconnecting = 21,
		k_ESNetSocketStateLocalDisconnect = 22,
		k_ESNetSocketStateTimeoutDuringConnect = 23,
		k_ESNetSocketStateRemoteEndDisconnected = 24,
		k_ESNetSocketStateConnectionBroken = 25,
	}
	
	public enum ERegistrySubTree
	{
		k_ERegistrySubTreeNews = 0,
		k_ERegistrySubTreeApps = 1,
		k_ERegistrySubTreeSubscriptions = 2,
		k_ERegistrySubTreeGameServers = 3,
		k_ERegistrySubTreeFriends = 4,
		k_ERegistrySubTreeSystem = 5,
	}
	
	public enum ESteamBufferMethod
	{
		eSteamBufferMethodFBF = 0,
		eSteamBufferMethodNBF = 1,
	}
	
	public enum EPurchaseResultDetail
	{
		k_EPurchaseResultNoDetail = 0,
		k_EPurchaseResultAVSFailure = 1,
		k_EPurchaseResultInsufficientFunds = 2,
		k_EPurchaseResultContactSupport = 3,
		k_EPurchaseResultTimeout = 4,
		k_EPurchaseResultInvalidPackage = 5,
		k_EPurchaseResultInvalidPaymentMethod = 6,
		k_EPurchaseResultInvalidData = 7,
		k_EPurchaseResultOthersInProgress = 8,
		k_EPurchaseResultAlreadyPurchased = 9,
		k_EPurchaseResultWrongPrice = 10,
	}
	
	public enum EDenyReason
	{
		k_EDenyInvalidVersion = 1,
		k_EDenyGeneric = 2,
		k_EDenyNotLoggedOn = 3,
		k_EDenyNoLicense = 4,
		k_EDenyCheater = 5,
		k_EDenyLoggedInElseWhere = 6,
		k_EDenyUnknownText = 7,
		k_EDenyIncompatibleAnticheat = 8,
		k_EDenyMemoryCorruption = 9,
		k_EDenyIncompatibleSoftware = 10,
		k_EDenySteamConnectionLost = 11,
		k_EDenySteamConnectionError = 12,
		k_EDenySteamResponseTimedOut = 13,
		k_EDenySteamValidationStalled = 14,
		k_EDenySteamOwnerLeftGuestUser = 15,
	}
	
	public enum EUniverse
	{
		k_EUniverseInvalid = 0,
		k_EUniversePublic = 1,
		k_EUniverseBeta = 2,
		k_EUniverseInternal = 3,
		k_EUniverseDev = 4,
		k_EUniverseRC = 5,
		k_EUniverseMax = 6,
	}
	
	public enum ELeaderboardSortMethod
	{
		k_ELeaderboardSortMethodNone = 0,
		k_ELeaderboardSortMethodAscending = 1,
		k_ELeaderboardSortMethodDescending = 2,
	}
	
	public enum ESystemIMType
	{
		k_ESystemIMRawText = 0,
		k_ESystemIMInvalidCard = 1,
		k_ESystemIMRecurringPurchaseFailed = 2,
		k_ESystemIMCardWillExpire = 3,
		k_ESystemIMSubscriptionExpired = 4,
		k_ESystemIMTypeMax = 5,
	}
	
	public enum EBeginAuthSessionResult
	{
		k_EBeginAuthSessionResultOK = 0,
		k_EBeginAuthSessionResultInvalidTicket = 1,
		k_EBeginAuthSessionResultDuplicateRequest = 2,
		k_EBeginAuthSessionResultInvalidVersion = 3,
		k_EBeginAuthSessionResultGameMismatch = 4,
		k_EBeginAuthSessionResultExpiredTicket = 5,
	}
	
	public enum ESNetSocketConnectionType
	{
		k_ESNetSocketConnectionTypeNotConnected = 0,
		k_ESNetSocketConnectionTypeUDP = 1,
		k_ESNetSocketConnectionTypeUDPRelay = 2,
	}
	
	public enum ENotificationPosition
	{
		k_EPositionTopLeft = 0,
		k_EPositionTopRight = 1,
		k_EPositionBottomLeft = 2,
		k_EPositionBottomRight = 3,
	}
	
	public enum EAccountType
	{
		k_EAccountTypeInvalid = 0,
		k_EAccountTypeIndividual = 1,
		k_EAccountTypeMultiseat = 2,
		k_EAccountTypeGameServer = 3,
		k_EAccountTypeAnonGameServer = 4,
		k_EAccountTypePending = 5,
		k_EAccountTypeContentServer = 6,
		k_EAccountTypeClan = 7,
		k_EAccountTypeChat = 8,
		k_EAccountTypeP2PSuperSeeder = 9,
		k_EAccountTypeAnonUser = 10,
		k_EAccountTypeMax = 11,
	}
	
	public enum ESteamSubscriptionBillingInfoType
	{
		ePaymentCardInfo = 1,
		ePrepurchasedInfo = 2,
		eAccountBillingInfo = 3,
		eExternalBillingInfo = 4,
		ePaymentCardReceipt = 5,
		ePrepurchaseReceipt = 6,
		eEmptyReceipt = 7,
	}
	
	public enum EBillingType
	{
		eNoCost = 0,
		eBillOnceOnly = 1,
		eBillMonthly = 2,
		eProofOfPrepurchaseOnly = 3,
		eGuestPass = 4,
		eHardwarePromo = 5,
		eGift = 6,
		eAutoGrant = 7,
		eNumBillingTypes = 8,
	}
	
	public enum EChatSteamIDInstanceFlags
	{
		k_EChatAccountInstanceMask = 4095,
		k_EChatInstanceFlagClan = 524288,
		k_EChatInstanceFlagLobby = 262144,
	}
	
	public enum ESteamServerType
	{
		eSteamValveCDKeyValidationServer = 0,
		eSteamHalfLifeMasterServer = 1,
		eSteamFriendsServer = 2,
		eSteamCSERServer = 3,
		eSteamHalfLife2MasterServer = 4,
		eSteamRDKFMasterServer = 5,
		eMaxServerTypes = 6,
	}
	
	public enum EAppUsageEvent
	{
		k_EAppUsageEventGameLaunch = 1,
		k_EAppUsageEventGameLaunchTrial = 2,
		k_EAppUsageEventMedia = 3,
		k_EAppUsageEventPreloadStart = 4,
		k_EAppUsageEventPreloadFinish = 5,
		k_EAppUsageEventMarketingMessageView = 6,
		k_EAppUsageEventInGameAdViewed = 7,
		k_EAppUsageEventGameLaunchFreeWeekend = 8,
	}
	
	public enum ELeaderboardDisplayType
	{
		k_ELeaderboardDisplayTypeNone = 0,
		k_ELeaderboardDisplayTypeNumeric = 1,
		k_ELeaderboardDisplayTypeTimeSeconds = 2,
		k_ELeaderboardDisplayTypeTimeMilliSeconds = 3,
	}
	
	public enum ECurrencyCode
	{
		k_ECurrencyCodeInvalid = 0,
		k_ECurrencyCodeUSD = 1,
		k_ECurrencyCodeGBP = 2,
		k_ECurrencyCodeEUR = 3,
		k_ECurrencyCodeMax = 4,
	}
	
	public enum EGCMsgResponse
	{
		k_EGCMsgResponseOK = 0,
		k_EGCMsgResponseDenied = 1,
		k_EGCMsgResponseServerError = 2,
		k_EGCMsgResponseTimeout = 3,
		k_EGCMsgResponseInvalid = 4,
		k_EGCMsgResponseNoMatch = 5,
		k_EGCMsgResponseUnknownError = 6,
		k_EGCMsgResponseNotLoggedOn = 7,
	}
	
	public enum ESteamAPICallFailure
	{
		k_ESteamAPICallFailureNone = -1,
		k_ESteamAPICallFailureSteamGone = 0,
		k_ESteamAPICallFailureNetworkFailure = 1,
		k_ESteamAPICallFailureInvalidHandle = 2,
		k_ESteamAPICallFailureMismatchedCallback = 3,
	}
	
	public enum EPurchaseStatus
	{
		k_EPurchasePending = 0,
		k_EPurchaseSucceeded = 1,
		k_EPurchaseFailed = 2,
		k_EPurchaseRefunded = 3,
		k_EPurchaseInit = 4,
		k_EPurchaseChargedback = 5,
		k_EPurchaseRevoked = 6,
	}
	
	public enum ESteamUserStatType
	{
		k_ESteamUserStatTypeINVALID = 0,
		k_ESteamUserStatTypeINT = 1,
		k_ESteamUserStatTypeFLOAT = 2,
		k_ESteamUserStatTypeAVGRATE = 3,
		k_ESteamUserStatTypeACHIEVEMENTS = 4,
		k_ESteamUserStatTypeGROUPACHIEVEMENTS = 5,
	}
	
	public enum EDepotBuildStatus
	{
		k_EDepotBuildStatusInvalid = -1,
		k_EDepotBuildStatusFailed = 0,
		k_EDepotBuildStatusProcessingConfig = 1,
		k_EDepotBuildStatusProcessingData = 2,
		k_EDepotBuildStatusUploadingData = 3,
		k_EDepotBuildStatusCompleted = 4,
	}
	
	public enum ELicenseFlags
	{
		k_ELicenseFlagRenew = 1,
		k_ELicenseFlagRenewalFailed = 2,
		k_ELicenseFlagPending = 4,
		k_ELicenseFlagExpired = 8,
		k_ELicenseFlagCancelledByUser = 16,
		k_ELicenseFlagCancelledByAdmin = 32,
	}
	
	public enum EAppState
	{
		k_EAppStateDownloading = 0,
		k_EAppStatePaused = 1,
		k_EAppStateDownloadComplete = 2,
	}
	
	public enum ELobbyType
	{
		k_ELobbyTypeFriendsOnly = 1,
		k_ELobbyTypePublic = 2,
	}
	
	public enum EChatRoomType
	{
		k_EChatRoomTypeFriend = 1,
		k_EChatRoomTypeMUC = 2,
		k_EChatRoomTypeLobby = 3,
	}
	
	public enum EFriendMsgType
	{
		k_EFriendMsgTypeChat = 1,
		k_EFriendMsgTypeTyping = 2,
		k_EFriendMsgTypeInvite = 3,
		k_EFriendMsgTypeChatSent = 4,
	}
	
	public enum ESteamPaymentCardType
	{
		eVisa = 1,
		eMaster = 2,
		eAmericanExpress = 3,
		eDiscover = 4,
		eDinnersClub = 5,
		eJCB = 6,
	}
	
	public enum EIFaceResult
	{
		IFACE_OK = 0,
		IFACE_FAILED = 1,
	}
	
	public enum EFriendRelationship
	{
		k_EFriendRelationshipNone = 0,
		k_EFriendRelationshipBlocked = 1,
		k_EFriendRelationshipRequestRecipient = 2,
		k_EFriendRelationshipFriend = 3,
		k_EFriendRelationshipRequestInitiator = 4,
		k_EFriendRelationshipIgnored = 5,
		k_EFriendRelationshipIgnoredFriend = 6,
	}
	
	public enum EMatchMakingServerResponse
	{
		eServerResponded = 0,
		eServerFailedToRespond = 1,
		eNoServersListedOnMasterServer = 2,
	}
	
	public enum ELobbyComparison
	{
		k_ELobbyComparisonEqualToOrLessThan = -2,
		k_ELobbyComparisonLessThan = -1,
		k_ELobbyComparisonEqual = 0,
		k_ELobbyComparisonGreaterThan = 1,
		k_ELobbyComparisonEqualToOrGreaterThan = 2,
	}
	
	public enum ENewsUpdateType
	{
		k_EAppNews = 0,
		k_ESteamAds = 1,
		k_ESteamNews = 2,
		k_ECDDBUpdate = 3,
		k_EClientUpdate = 4,
	}
	
	public enum ELogonState
	{
		k_ELogonStateNotLoggedOn = 0,
		k_ELogonStateLoggingOn = 1,
		k_ELogonStateLoggingOff = 2,
		k_ELogonStateLoggedOn = 3,
	}
	
	public enum ESteamSubscriptionStatus
	{
		eSteamSubscriptionOK = 0,
		eSteamSubscriptionPending = 1,
		eSteamSubscriptionPreorder = 2,
		eSteamSubscriptionPrepurchaseTransferred = 3,
		eSteamSubscriptionPrepurchaseInvalid = 4,
		eSteamSubscriptionPrepurchaseRejected = 5,
		eSteamSubscriptionPrepurchaseRevoked = 6,
		eSteamSubscriptionPaymentCardDeclined = 7,
		eSteamSubscriptionCancelledByUser = 8,
		eSteamSubscriptionCancelledByVendor = 9,
		eSteamSubscriptionPaymentCardUseLimit = 10,
		eSteamSubscriptionPaymentCardAlert = 11,
		eSteamSubscriptionFailed = 12,
		eSteamSubscriptionPaymentCardAVSFailure = 13,
		eSteamSubscriptionPaymentCardInsufficientFunds = 14,
		eSteamSubscriptionRestrictedCountry = 15,
	}
	
	public enum EAvatarSize
	{
		k_EAvatarSize32x32 = 0,
		k_EAvatarSize64x64 = 1,
	}
	
	public enum ECallState
	{
		k_ECallStateUnknown = 0,
		k_ECallStateWaiting = 1,
		k_ECallStateDialing = 2,
		k_ECallStateRinging = 3,
		k_ECallStateInCall = 4,
	}
	
	public enum ESteamFindFilter
	{
		eSteamFindLocalOnly = 0,
		eSteamFindRemoteOnly = 1,
		eSteamFindAll = 2,
	}
	
	public enum ESteamSeekMethod
	{
		eSteamSeekMethodSet = 0,
		eSteamSeekMethodCur = 1,
		eSteamSeekMethodEnd = 2,
	}
	
	public enum EItemQuality
	{
		k_EItemQuality_Normal = 0,
		k_EItemQuality_Common = 1,
		k_EItemQuality_Rare = 2,
		k_EItemQuality_Unique = 3,
		k_EItemQuality_Count = 4,
		k_EItemQuality_Unk5 = 5,
		k_EItemQuality_Unk6 = 6,
		k_EItemQuality_Community = 7,
		k_EItemQuality_Valve = 8,
		k_EItemQuality_Max = 255,
	}
	
	public enum ESteamNotify
	{
		eSteamNotifyTicketsWillExpire = 0,
		eSteamNotifyAccountInfoChanged = 1,
		eSteamNotifyContentDescriptionChanged = 2,
		eSteamNotifyPleaseShutdown = 3,
		eSteamNotifyNewContentServer = 4,
		eSteamNotifySubscriptionStatusChanged = 5,
		eSteamNotifyContentServerConnectionLost = 6,
		eSteamNotifyCacheLoadingCompleted = 7,
		eSteamNotifyCacheNeedsDecryption = 8,
		eSteamNotifyCacheNeedsRepair = 9,
		eSteamNotifyAppDownloading = 10,
		eSteamNotifyAppDownloadingPaused = 11,
	}
	
	public enum EChatEntryType
	{
		k_EChatEntryTypeChatMsg = 1,
		k_EChatEntryTypeTyping = 2,
		k_EChatEntryTypeInviteGame = 3,
		k_EChatEntryTypeEmote = 4,
		k_EChatEntryTypeLobbyGameStart = 5,
	}
	
	public enum ECallbackType
	{
		k_iSteamUserCallbacks = 100,
		k_iSteamGameServerCallbacks = 200,
		k_iSteamFriendsCallbacks = 300,
		k_iSteamBillingCallbacks = 400,
		k_iSteamMatchmakingCallbacks = 500,
		k_iSteamContentServerCallbacks = 600,
		k_iSteamUtilsCallbacks = 700,
		k_iClientFriendsCallbacks = 800,
		k_iClientUserCallbacks = 900,
		k_iSteamAppsCallbacks = 1000,
		k_iSteamUserStatsCallbacks = 1100,
		k_iSteamNetworkingCallbacks = 1200,
		k_iClientRemoteStorageCallbacks = 1300,
		k_iSteamUserItemsCallbacks = 1400,
		k_iSteamGameServerItemsCallbacks = 1500,
		k_iClientUtilsCallbacks = 1600,
		k_iSteamGameCoordinatorCallbacks = 1700,
	}
	
	public enum EVACBan
	{
		k_EVACBanGoldsrc = 0,
		k_EVACBanSource = 1,
		k_EVACBanDayOfDefeatSource = 2,
	}
	
	public enum EClanRank
	{
		k_EClanRankNone = 0,
		k_EClanRankOwner = 1,
		k_EClanRankOfficer = 2,
		k_EClanRankMember = 3,
	}
	
	public enum EItemCriteriaOperator
	{
		k_EOperator_String_EQ = 0,
		k_EOperator_Not = 1,
		k_EOperator_String_Not_EQ = 1,
		k_EOperator_Float_EQ = 2,
		k_EOperator_Float_Not_EQ = 3,
		k_EOperator_Float_LT = 4,
		k_EOperator_Float_Not_LT = 5,
		k_EOperator_Float_LTE = 6,
		k_EOperator_Float_Not_LTE = 7,
		k_EOperator_Float_GT = 8,
		k_EOperator_Float_Not_GT = 9,
		k_EOperator_Float_GTE = 10,
		k_EOperator_Float_Not_GTE = 11,
		k_EOperator_Subkey_Contains = 12,
		k_EOperator_Subkey_Not_Contains = 13,
		k_EItemCriteriaOperator_Count = 14,
	}
	
	public enum EChatRoomVoiceStatus
	{
		eChatRoomVoiceStatusBad = 0,
		eChatRoomVoiceStatusUnknownRoom = 1,
		eChatRoomVoiceStatusUnknownUser = 2,
		eChatRoomVoiceStatusNotSpeaking = 3,
		eChatRoomVoiceStatusConnectedSpeaking = 4,
		eChatRoomVoiceStatusConnectedSpeakingData = 5,
		eChatRoomVoiceStatusNotConnectedSpeaking = 6,
		eChatRoomVoiceStatusConnecting = 7,
		eChatRoomVoiceStatusUnreachable = 8,
		eChatRoomVoiceStatusDisconnected = 9,
		eChatRoomVoiceStatusCount = 10,
	}
	
	public enum EGCMessages
	{
		k_ESOMsg_Create = 21,
		k_ESOMsg_Update = 22,
		k_ESOMsg_Destroy = 23,
		k_ESOMsg_CacheSubscribed = 24,
		k_ESOMsg_CacheUnsubscribed = 25,
		k_EGCMsgStartPlaying = 53,
		k_EGCMsgStopPlaying = 54,
		k_EGCMsgStartGameserver = 55,
		k_EGCMsgStopGameserver = 56,
		k_EMsgGCSetItemPosition = 1001,
		k_EMsgGCCraft = 1002,
		k_EMsgGCCraftResponse = 1003,
		k_EMsgGCDelete = 1004,
		k_EMsgGCDev_NewItemRequest = 2001,
		k_EMsgGCDev_NewItemRequestResponse = 2002,
	}
	
	public enum EPaymentMethod
	{
		k_EPaymentMethodNone = 0,
		k_EPaymentMethodCDKey = 1,
		k_EPaymentMethodCreditCard = 2,
		k_EPaymentMethodPayPal = 4,
		k_EPaymentMethodManual = 8,
	}
	
	public enum EPersonaState
	{
		k_EPersonaStateOffline = 0,
		k_EPersonaStateOnline = 1,
		k_EPersonaStateBusy = 2,
		k_EPersonaStateAway = 3,
		k_EPersonaStateSnooze = 4,
		k_EPersonaStateMax = 5,
	}
	
	public enum ESteamAppUpdateStatsQueryType
	{
		ePhysicalBytesReceivedThisSession = 1,
		eAppReadyToLaunchStatus = 2,
		eAppPreloadStatus = 3,
		eAppEntireDepot = 4,
		eCacheBytesPresent = 5,
	}
	
	public enum ELeaderboardDataRequest
	{
		k_ELeaderboardDataRequestGlobal = 0,
		k_ELeaderboardDataRequestGlobalAroundUser = 1,
		k_ELeaderboardDataRequestFriends = 2,
	}
	
	public enum EConnectionPriority
	{
		k_EConnectionPriorityLow = 0,
		k_EConnectionPriorityMedium = 1,
		k_EConnectionPriorityHigh = 2,
	}
	
	public enum EAuthSessionResponse
	{
		k_EAuthSessionResponseOK = 0,
		k_EAuthSessionResponseUserNotConnectedToSteam = 1,
		k_EAuthSessionResponseNoLicenseOrExpired = 2,
		k_EAuthSessionResponseVACBanned = 3,
		k_EAuthSessionResponseLoggedInElseWhere = 4,
		k_EAuthSessionResponseVACCheckTimedOut = 5,
		k_EAuthSessionResponseAuthTicketCanceled = 6,
		k_EAuthSessionResponseAuthTicketInvalidAlreadyUsed = 7,
		k_EAuthSessionResponseAuthTicketInvalid = 8,
	}
	
	public enum EItemRequestResult
	{
		k_EItemRequestResultOK = 0,
		k_EItemRequestResultDenied = 1,
		k_EItemRequestResultServerError = 2,
		k_EItemRequestResultTimeout = 3,
		k_EItemRequestResultInvalid = 4,
		k_EItemRequestResultNoMatch = 5,
		k_EItemRequestResultUnknownError = 6,
		k_EItemRequestResultNotLoggedOn = 7,
	}
	
	public enum EClanRelationship
	{
		eClanRelationshipNone = 0,
		eClanRelationshipBlocked = 1,
		eClanRelationshipInvited = 2,
		eClanRelationshipMember = 3,
		eClanRelationshipKicked = 4,
	}
	
	public enum EResult
	{
		k_EResultOK = 1,
		k_EResultFail = 2,
		k_EResultNoConnection = 3,
		k_EResultInvalidPassword = 5,
		k_EResultLoggedInElsewhere = 6,
		k_EResultInvalidProtocolVer = 7,
		k_EResultInvalidParam = 8,
		k_EResultFileNotFound = 9,
		k_EResultBusy = 10,
		k_EResultInvalidState = 11,
		k_EResultInvalidName = 12,
		k_EResultInvalidEmail = 13,
		k_EResultDuplicateName = 14,
		k_EResultAccessDenied = 15,
		k_EResultTimeout = 16,
		k_EResultBanned = 17,
		k_EResultAccountNotFound = 18,
		k_EResultInvalidSteamID = 19,
		k_EResultServiceUnavailable = 20,
		k_EResultNotLoggedOn = 21,
		k_EResultPending = 22,
		k_EResultEncryptionFailure = 23,
		k_EResultInsufficientPrivilege = 24,
		k_EResultLimitExceeded = 25,
		k_EResultRevoked = 26,
		k_EResultExpired = 27,
		k_EResultAlreadyRedeemed = 28,
		k_EResultDuplicateRequest = 29,
		k_EResultAlreadyOwned = 30,
		k_EResultIPNotFound = 31,
		k_EResultPersistFailed = 32,
		k_EResultLockingFailed = 33,
		k_EResultLogonSessionReplaced = 34,
		k_EResultConnectFailed = 35,
		k_EResultHandshakeFailed = 36,
		k_EResultIOFailure = 37,
		k_EResultRemoteDisconnect = 38,
		k_EResultShoppingCartNotFound = 39,
		k_EResultBlocked = 40,
		k_EResultIgnored = 41,
		k_EResultNoMatch = 42,
		k_EResultAccountDisabled = 43,
		k_EResultServiceReadOnly = 44,
	}
	
	public enum EPersonaChange
	{
		k_EPersonaChangeName = 1,
		k_EPersonaChangeStatus = 2,
		k_EPersonaChangeComeOnline = 4,
		k_EPersonaChangeGoneOffline = 8,
		k_EPersonaChangeGamePlayed = 16,
		k_EPersonaChangeGameServer = 32,
		k_EPersonaChangeAvatar = 64,
		k_EPersonaChangeJoinedSource = 128,
		k_EPersonaChangeLeftSource = 256,
		k_EPersonaChangeRelationshipChanged = 512,
		k_EPersonaChangeNameFirstSet = 1024,
	}
	
	public enum EDetailedPlatformErrorType
	{
		eNoDetailedErrorAvailable = 0,
		eStandardCerrno = 1,
		eWin32LastError = 2,
		eWinSockLastError = 3,
		eDetailedPlatformErrorCount = 4,
	}
	
	public enum EVoiceResult
	{
		k_EVoiceResultOK = 0,
		k_EVoiceResultNotInitialized = 1,
		k_EVoiceResultNotRecording = 2,
		k_EVoiceResultNoData = 3,
		k_EVoiceResultBufferTooSmall = 4,
		k_EVoiceResultDataCorrupted = 5,
	}
	
	public enum ESteamError
	{
		eSteamErrorNone = 0,
		eSteamErrorUnknown = 1,
		eSteamErrorLibraryNotInitialized = 2,
		eSteamErrorLibraryAlreadyInitialized = 3,
		eSteamErrorConfig = 4,
		eSteamErrorContentServerConnect = 5,
		eSteamErrorBadHandle = 6,
		eSteamErrorHandlesExhausted = 7,
		eSteamErrorBadArg = 8,
		eSteamErrorNotFound = 9,
		eSteamErrorRead = 10,
		eSteamErrorEOF = 11,
		eSteamErrorSeek = 12,
		eSteamErrorCannotWriteNonUserConfigFile = 13,
		eSteamErrorCacheOpen = 14,
		eSteamErrorCacheRead = 15,
		eSteamErrorCacheCorrupted = 16,
		eSteamErrorCacheWrite = 17,
		eSteamErrorCacheSession = 18,
		eSteamErrorCacheInternal = 19,
		eSteamErrorCacheBadApp = 20,
		eSteamErrorCacheVersion = 21,
		eSteamErrorCacheBadFingerPrint = 22,
		eSteamErrorNotFinishedProcessing = 23,
		eSteamErrorNothingToDo = 24,
		eSteamErrorCorruptEncryptedUserIDTicket = 25,
		eSteamErrorSocketLibraryNotInitialized = 26,
		eSteamErrorFailedToConnectToUserIDTicketValidationServer = 27,
		eSteamErrorBadProtocolVersion = 28,
		eSteamErrorReplayedUserIDTicketFromClient = 29,
		eSteamErrorReceiveResultBufferTooSmall = 30,
		eSteamErrorSendFailed = 31,
		eSteamErrorReceiveFailed = 32,
		eSteamErrorReplayedReplyFromUserIDTicketValidationServer = 33,
		eSteamErrorBadSignatureFromUserIDTicketValidationServer = 34,
		eSteamErrorValidationStalledSoAborted = 35,
		eSteamErrorInvalidUserIDTicket = 36,
		eSteamErrorClientLoginRateTooHigh = 37,
		eSteamErrorClientWasNeverValidated = 38,
		eSteamErrorInternalSendBufferTooSmall = 39,
		eSteamErrorInternalReceiveBufferTooSmall = 40,
		eSteamErrorUserTicketExpired = 41,
		eSteamErrorCDKeyAlreadyInUseOnAnotherClient = 42,
		eSteamErrorNotLoggedIn = 101,
		eSteamErrorAlreadyExists = 102,
		eSteamErrorAlreadySubscribed = 103,
		eSteamErrorNotSubscribed = 104,
		eSteamErrorAccessDenied = 105,
		eSteamErrorFailedToCreateCacheFile = 106,
		eSteamErrorCallStalledSoAborted = 107,
		eSteamErrorEngineNotRunning = 108,
		eSteamErrorEngineConnectionLost = 109,
		eSteamErrorLoginFailed = 110,
		eSteamErrorAccountPending = 111,
		eSteamErrorCacheWasMissingRetry = 112,
		eSteamErrorLocalTimeIncorrect = 113,
		eSteamErrorCacheNeedsDecryption = 114,
		eSteamErrorAccountDisabled = 115,
		eSteamErrorCacheNeedsRepair = 116,
		eSteamErrorRebootRequired = 117,
		eSteamErrorNetwork = 200,
		eSteamErrorOffline = 201,
	}
	
	public enum EMatchMakingType
	{
		eInternetServer = 0,
		eLANServer = 1,
		eFriendsServer = 2,
		eFavoritesServer = 3,
		eHistoryServer = 4,
		eSpectatorServer = 5,
		eInvalidServer = 6,
	}
	
	public enum EChatRoomEnterResponse
	{
		k_EChatRoomEnterResponseSuccess = 1,
		k_EChatRoomEnterResponseDoesntExist = 2,
		k_EChatRoomEnterResponseNotAllowed = 3,
		k_EChatRoomEnterResponseFull = 4,
		k_EChatRoomEnterResponseError = 5,
		k_EChatRoomEnterResponseBanned = 6,
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=272)]
	public struct GCSetItemPosition_t
	{
		public UInt16 id;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
		public SByte[] garbage;
		public UInt64 itemID;
		public UInt32 position;
		public UInt32 unk1;
		public const int k_iMessage = 1001;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=96)]
	public struct ClientAppNewsItemUpdate_t
	{
		public Byte m_eNewsUpdateType;
		public UInt32 m_uNewsID;
		public UInt32 m_uAppID;
		public const int k_iCallback = 110;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct SteamIDComponent_t
	{
		public UInt32 m_unAccountID;
		public UInt32 m_unAccountInstance;
		public UInt32 m_EAccountType;
		public EUniverse m_EUniverse;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct TSteamSplitLocalUserID
	{
		public UInt32 Low32bits;
		public UInt32 High32bits;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct TSteamGlobalUserID
	{
		public UInt16 m_SteamInstanceID;

		[StructLayout(LayoutKind.Explicit,CharSet=CharSet.Ansi,Pack=1,Size=64)]
		public struct Unionm_SteamLocalUserID
		{
			[FieldOffset(0)]
			public UInt64 As64bits;
			[FieldOffset(0)]
			public TSteamSplitLocalUserID Split;
		}
		public Unionm_SteamLocalUserID m_SteamLocalUserID;

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=160)]
	public struct SocketStatusCallback_t
	{
		public UInt32 m_hSocket;
		public UInt32 m_hListenSocket;
		public UInt64 m_steamIDRemote;
		public Int32 m_eSNetSocketState;
		public const int k_iCallback = 1201;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct GSItemGranted_t
	{
		public UInt64 m_steamID;
		public UInt64 m_itemID;
		public const int k_iCallback = 1507;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=208)]
	public struct SOMsgCacheUnsubscribed_t
	{
		public UInt16 id;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
		public SByte[] garbage;
		public UInt64 steamid;
		public const int k_iMessage = 25;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct GSPolicyResponse_t
	{
		public Byte m_bSecure;
		public const int k_iCallback = 115;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct PurchaseMsg_t
	{
		public UInt32 m_bSuccess;
		public EPurchaseResultDetail m_EPurchaseResultDetail;
		public const int k_iCallback = 402;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=448)]
	public struct SOMsgCreate_t
	{
		public UInt16 id;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
		public SByte[] garbage;
		public UInt64 steamid;
		public UInt32 unknown;
		public UInt64 itemid;
		public UInt32 accountid;
		public UInt16 itemtype;
		public Byte itemlevel;
		public Byte itemquality;
		public UInt32 position;
		public UInt32 itemcount;
		public UInt16 attribcount;
		public const int k_iMessage = 21;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=72)]
	public struct GSClientKick_t
	{
		public UInt64 m_SteamID;
		public EDenyReason m_eDenyReason;
		public const int k_iCallback = 203;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct UserItemDeleted_t
	{
		public UInt64 m_itemID;
		public UInt32 Unk0;
		public UInt32 Unk1;
		public const int k_iCallback = 1402;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=192)]
	public struct PersonaStateChangeOld_t
	{
		public UInt64 m_ulSteamID;
		public Int32 m_ePersonaStatePrevious;
		public Int32 m_nGameIDPrevious;
		public UInt32 m_unGameServerIPPrevious;
		public UInt16 m_usGameServerPortPrevious;
		public const int k_iCallback = 303;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=1096)]
	public struct GSClientDeny_t
	{
		public UInt64 m_SteamID;
		public EDenyReason m_eDenyReason;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_pchOptionalText;
		public const int k_iCallback = 202;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=288)]
	public struct GCCraftResponse_t
	{
		public UInt16 id;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
		public SByte[] garbage;
		public UInt16 blueprint;
		public UInt64 unk1;
		public UInt64 itemid;
		public const int k_iMessage = 1003;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct AppDataChanged_t
	{
		public UInt32 m_Sequence;
		public UInt32 m_Unknown;
		public const int k_iCallback = 1001;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct LobbyDataUpdate_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDMember;
		public const int k_iCallback = 505;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=1024)]
	public struct GameServerChangeRequested_t
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
		public SByte[] m_rgchServer;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
		public SByte[] m_rgchPassword;
		public const int k_iCallback = 332;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=160)]
	public struct FinalPriceMsg_t
	{
		public UInt32 m_bSuccess;
		public UInt32 m_nBaseCost;
		public UInt32 m_nTotalDiscount;
		public UInt32 m_nTax;
		public UInt32 m_nShippingCost;
		public const int k_iCallback = 401;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=192)]
	public struct LobbyGameCreated_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDGameServer;
		public UInt32 m_unIP;
		public UInt16 m_usPort;
		public const int k_iCallback = 509;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct GameID_t
	{
		public UInt32 m_nAppID;
		public UInt32 m_nType;
		public UInt32 m_nModID;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct CGameID
	{

		[StructLayout(LayoutKind.Explicit,CharSet=CharSet.Ansi,Pack=1,Size=64)]
		public struct Unionvalue
		{
			[FieldOffset(0)]
			public UInt64 m_ulGameID;
			[FieldOffset(0)]
			public GameID_t m_gameID;
		}
		public Unionvalue value;

		public const int k_EGameIDTypeApp = 0;
		public const int k_EGameIDTypeGameMod = 1;
		public const int k_EGameIDTypeShortcut = 2;
		public const int k_EGameIDTypeP2P = 3;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct SteamShutdown_t
	{
		public const int k_iCallback = 704;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=272)]
	public struct SOMsgCacheSubscribed_t
	{
		public UInt16 id;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
		public SByte[] garbage;
		public UInt64 steamid;
		public UInt32 unknown;
		public UInt16 padding;
		public UInt16 itemcount;
		public const int k_iMessage = 24;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=96)]
	public struct ClientSteamNewsClientUpdate_t
	{
		public Byte m_eNewsUpdateType;
		public Byte m_bReloadCDDB;
		public UInt32 m_unCurrentBootstrapperVersion;
		public UInt32 m_unCurrentClientVersion;
		public const int k_iCallback = 116;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct GSClientApprove_t
	{
		public UInt64 m_SteamID;
		public const int k_iCallback = 201;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct GSGameplayStats_t
	{
		public EResult m_eResult;
		public Int32 m_nRank;
		public UInt32 m_unTotalConnects;
		public UInt32 m_unTotalMinutesPlayed;
		public const int k_iCallback = 207;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=256)]
	public struct LobbyChatUpdate_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDUserChanged;
		public UInt64 m_ulSteamIDMakingChange;
		public UInt32 m_rgfChatMemberStateChange;
		public const int k_iCallback = 506;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct PrimaryChatDestinationSet_t
	{
		public Byte m_bIsPrimary;
		public const int k_iCallback = 114;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=1216)]
	public struct UserAchievementStored_t
	{
		public UInt64 m_nGameID;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bGroupAchievement;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_rgchAchievementName;
		public UInt32 m_nCurProgress;
		public UInt32 m_nMaxProgress;
		public const int k_iCallback = 1103;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=1152)]
	public struct GSClientAchievementStatus_t
	{
		public UInt64 m_SteamID;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_pchAchievement;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bUnlocked;
		public const int k_iCallback = 206;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=304)]
	public struct SOMsgDeleted_t
	{
		public UInt16 id;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
		public SByte[] garbage;
		public UInt64 steamid;
		public UInt32 unk1;
		public UInt64 itemid;
		public const int k_iMessage = 23;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=72)]
	public struct ValidateAuthTicketResponse_t
	{
		public UInt64 m_SteamID;
		public EAuthSessionResponse m_eAuthSessionResponse;
		public const int k_iCallback = 143;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct BeginLogonRetry_t
	{
		public const int k_iCallback = 104;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct GSClientSteam2Accept_t
	{
		public UInt32 m_UserID;
		public UInt64 m_SteamID;
		public const int k_iCallback = 205;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=96)]
	public struct CCallbackBase
	{
		public Byte m_nCallbackFlags;
		public Int32 m_iCallback;
		public const int k_ECallbackFlagsRegistered = 1;
		public const int k_ECallbackFlagsGameServer = 2;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct LobbyInvite_t
	{
		public UInt64 m_ulSteamIDUser;
		public UInt64 m_ulSteamIDLobby;
		public const int k_iCallback = 503;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=192)]
	public struct GSItemRequest_t
	{
		public UInt64 m_steamID;
		public EItemRequestResult m_eResult;
		public UInt64 m_itemID;
		public const int k_iCallback = 1501;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct LobbyClosing_t
	{
		public UInt64 m_ulSteamIDLobby;
		public const int k_iCallback = 511;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=176)]
	public struct GCCraft_t
	{
		public UInt16 id;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
		public SByte[] garbage;
		public UInt16 blueprint;
		public UInt16 itemcount;
		public const int k_iMessage = 1002;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct SteamServerConnectFailure_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 102;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct FriendEndChatSession_t
	{
		public UInt64 m_SteamID;
		public const int k_iCallback = 312;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct LogonFailure_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 102;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct LowBatteryPower_t
	{
		public Byte m_nMinutesBatteryLeft;
		public const int k_iCallback = 702;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct LobbyEnter_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt32 m_rgfChatPermissions;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bLocked;
		public EChatRoomEnterResponse m_EChatRoomEnterResponse;
		public const int k_iCallback = 504;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct GameLobbyJoinRequested_t
	{
		public UInt64 m_steamIDLobby;
		public UInt64 m_steamIDFriend;
		public const int k_iCallback = 333;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct SteamServersDisconnected_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 103;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct GSClientSteam2Deny_t
	{
		public UInt32 m_UserID;
		public UInt32 m_eSteamError;
		public const int k_iCallback = 204;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=256)]
	public struct ClientSteamNewsItemUpdate_t
	{
		public Byte m_eNewsUpdateType;
		public UInt32 m_uNewsID;
		public UInt32 m_uHaveSubID;
		public UInt32 m_uNotHaveSubID;
		public UInt32 m_uHaveAppID;
		public UInt32 m_uNotHaveAppID;
		public UInt32 m_uHaveAppIDInstalled;
		public UInt32 m_uHavePlayedAppID;
		public const int k_iCallback = 112;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct SteamAPICallCompleted_t
	{
		public UInt64 m_hAsyncCall;
		public const int k_iCallback = 703;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct CallbackPipeFailure_t
	{
		public const int k_iCallback = 117;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=192)]
	public struct LeaderboardScoresDownloaded_t
	{
		public UInt64 m_hSteamLeaderboard;
		public UInt64 m_hSteamLeaderboardEntries;
		public Int32 m_cEntryCount;
		public const int k_iCallback = 1105;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct UserRequestingFriendship_t
	{
		public UInt64 m_ulSteamID;
		public const int k_iCallback = 302;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=192)]
	public struct FavoritesListChanged_t
	{
		public UInt32 m_nIP;
		public UInt32 m_nQueryPort;
		public UInt32 m_nConnPort;
		public UInt32 m_nAppID;
		public UInt32 m_nFlags;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bAdd;
		public const int k_iCallback = 502;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8264)]
	public struct GSItemGetBlob_t
	{
		public UInt64 m_itemID;
		public EItemRequestResult m_eResult;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 1024)]
		public Byte[] m_itemBlob;
		public const int k_iCallback = 1508;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct GSItemCount_t
	{
		public UInt64 m_steamID;
		public EItemRequestResult m_eResult;
		public UInt32 m_unCount;
		public const int k_iCallback = 1500;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=208)]
	public struct GCDelete_t
	{
		public UInt16 id;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
		public SByte[] garbage;
		public UInt64 itemID;
		public const int k_iMessage = 1004;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=144)]
	public struct GSClientGroupStatus_t
	{
		public UInt64 m_SteamIDUser;
		public UInt64 m_SteamIDGroup;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bMember;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bOfficer;
		public const int k_iCallback = 208;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct IPCFailure_t
	{
		public Byte m_eFailureType;
		public const int k_iCallback = 117;
		public const int k_EFailureFlushedCallbackQueue = 0;
		public const int k_EFailurePipeFail = 1;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct LobbyKicked_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDAdmin;
		public const int k_iCallback = 512;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=32800)]
	public struct SystemIM_t
	{
		public UInt32 m_ESystemIMType;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 4096)]
		public SByte[] m_rgchMsgBody;
		public const int k_iCallback = 305;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=192)]
	public struct LobbyChatMsg_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDUser;
		public EChatEntryType m_eChatEntryType;
		public UInt32 m_iChatID;
		public const int k_iCallback = 507;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct UserItemGranted_t
	{
		public UInt64 m_itemID;
		public CGameID m_gameID;
		public const int k_iCallback = 1403;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=104)]
	public struct UserItemSetBlob_t
	{
		public UInt64 m_itemID;
		public EItemRequestResult m_eResult;
		public UInt32 Unk;
		public const int k_iCallback = 1405;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct LeaderboardFindResult_t
	{
		public UInt64 m_hSteamLeaderboard;
		public Byte m_bLeaderboardFound;
		public const int k_iCallback = 1104;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct UserStatsStored_t
	{
		public UInt64 m_nGameID;
		public EResult m_eResult;
		public const int k_iCallback = 1102;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct ClientGameServerDeny_t
	{
		public UInt32 m_uAppID;
		public UInt32 m_unGameServerIP;
		public UInt16 m_usGameServerPort;
		public UInt16 m_bSecure;
		public UInt32 m_uReason;
		public const int k_iCallback = 113;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct IPCountry_t
	{
		public const int k_iCallback = 701;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=192)]
	public struct FriendChatMsg_t
	{
		public UInt64 m_ulReceiver;
		public UInt64 m_ulSender;
		public UInt32 m_iUnknown1;
		public UInt32 m_iChatID;
		public const int k_iCallback = 306;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=256)]
	public struct LeaderboardScoreUploaded_t
	{
		public Byte m_bSuccess;
		public UInt64 m_hSteamLeaderboard;
		public Int32 m_nScore;
		public Byte m_bScoreChanged;
		public Int32 m_nGlobalRankNew;
		public Int32 m_nGlobalRankPrevious;
		public const int k_iCallback = 1106;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct LobbyCreated_t
	{
		public EResult m_eResult;
		public UInt64 m_ulSteamIDLobby;
		public const int k_iCallback = 513;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct LoggedOff_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 103;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct SteamServersConnected_t
	{
		public const int k_iCallback = 101;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct LobbyAdminChange_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDNewAdmin;
		public const int k_iCallback = 508;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct Steam2TicketChanged_t
	{
		public const int k_iCallback = 106;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=32)]
	public struct LobbyMatchList_t
	{
		public UInt32 m_nLobbiesMatching;
		public const int k_iCallback = 510;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8264)]
	public struct UserItemGetBlob_t
	{
		public UInt64 m_itemID;
		public EItemRequestResult m_eResult;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 1024)]
		public Byte[] itemBlob;
		public const int k_iCallback = 1404;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct GameOverlayActivated_t
	{
		public Byte m_bActive;
		public const int k_iCallback = 331;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=32)]
	public struct GameCoordinatorMessageAvailable_t
	{
		public UInt32 messageLength;
		public const int k_iCallback = 1701;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct UserItemMoved_t
	{
		public UInt64 m_itemID;
		public UInt32 Unk0;
		public UInt32 Unk1;
		public const int k_iCallback = 1401;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct PersonaStateChange_t
	{
		public UInt64 m_ulSteamID;
		public Int32 m_nChangeFlags;
		public const int k_iCallback = 304;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct UserItemCount_t
	{
		public CGameID m_gameID;
		public EItemRequestResult m_eResult;
		public UInt32 m_unCount;
		public const int k_iCallback = 1400;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=352)]
	public struct SOMsgUpdate_t
	{
		public UInt16 id;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
		public SByte[] garbage;
		public UInt64 steamid;
		public UInt32 unk1;
		public UInt64 itemID;
		public UInt16 unk2;
		public UInt32 position;
		public const int k_iMessage = 22;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct LogonSuccess_t
	{
		public const int k_iCallback = 101;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=192)]
	public struct UserStatsReceived_t
	{
		public UInt64 m_nGameID;
		public EResult m_eResult;
		public UInt64 m_steamIDUser;
		public const int k_iCallback = 1101;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=8)]
	public struct UserPolicyResponse_t
	{
		public Byte m_bSecure;
		public const int k_iCallback = 115;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=32)]
	public struct DlcInstalled_t
	{
		public UInt32 m_nAppID;
		public const int k_iCallback = 1005;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=192)]
	public struct GroupChatMsg_t
	{
		public UInt64 m_GroupID;
		public UInt64 m_SenderID;
		public UInt32 m_iUnknown;
		public UInt32 m_iChatID;
		public const int k_iCallback = 311;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=104)]
	public struct GSItemSetBlob_t
	{
		public UInt64 m_itemID;
		public EItemRequestResult m_eResult;
		public UInt32 Unk;
		public const int k_iCallback = 1509;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct FriendAdded_t
	{
		public Byte m_bSuccess;
		public UInt64 m_ulSteamID;
		public const int k_iCallback = 301;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct IClientRemoteStorage
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=320)]
	public struct TSteamAppStats
	{
		public UInt32 uNumApps;
		public UInt32 uMaxNameChars;
		public UInt32 uMaxInstallDirNameChars;
		public UInt32 uMaxVersionLabelChars;
		public UInt32 uMaxLaunchOptions;
		public UInt32 uMaxLaunchOptionDescChars;
		public UInt32 uMaxLaunchOptionCmdLineChars;
		public UInt32 uMaxNumIcons;
		public UInt32 uMaxIconSize;
		public UInt32 uMaxDependencies;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=2112)]
	public struct TSteamProgress
	{
		public Int32 bValid;
		public UInt32 uPercentDone;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szProgress;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=9408)]
	public struct TSteamPaymentCardInfo
	{
		public ESteamPaymentCardType eCardType;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 18)]
		public SByte[] szCardNumber;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szCardHolderName;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 5)]
		public SByte[] szCardExpYear;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 3)]
		public SByte[] szCardExpMonth;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 6)]
		public SByte[] szCardCVV2;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szBillingAddress1;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szBillingAddress2;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 51)]
		public SByte[] szBillingCity;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 17)]
		public SByte[] szBillingZip;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szBillingState;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szBillingCountry;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 21)]
		public SByte[] szBillingPhone;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szBillingEmailAddress;
		public UInt32 uExpectedCostInCents;
		public UInt32 uExpectedTaxInCents;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szShippingName;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szShippingAddress1;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szShippingAddress2;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 51)]
		public SByte[] szShippingCity;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 17)]
		public SByte[] szShippingZip;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szShippingState;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szShippingCountry;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 21)]
		public SByte[] szShippingPhone;
		public UInt32 uExpectedShippingCostInCents;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamUser
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamMatchmakingServers
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=192)]
	public struct FriendGameInfo_t
	{
		public CGameID m_gameID;
		public UInt32 m_unGameIP;
		public UInt16 m_usGamePort;
		public UInt16 m_usQueryPort;
		public UInt64 m_steamIDLobby;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=2112)]
	public struct TSteamAppDependencyInfo
	{
		public UInt32 AppId;
		public UInt32 IsRequired;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szMountName;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=2240)]
	public struct TSteamElemInfo
	{
		public Int32 bIsDir;
		public UInt32 uSizeOrCount;
		public Int32 bIsLocal;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] cszName;
		public Int32 lLastAccessTime;
		public Int32 lLastModificationTime;
		public Int32 lCreationTime;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct IClientNetworking
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=1456)]
	public struct TSteamExternalBillingInfo
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szAccountName;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 81)]
		public SByte[] szPassword;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=1856)]
	public struct TSteamPrepurchaseInfo
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 21)]
		public SByte[] szTypeOfProofOfPurchase;
		public UInt32 uLengthOfBinaryProofOfPurchaseToken;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 201)]
		public SByte[] cBinaryProofOfPurchaseToken;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=9440)]
	public struct TSteamSubscriptionBillingInfo
	{
		public ESteamSubscriptionBillingInfoType eBillingInfoType;

		[StructLayout(LayoutKind.Explicit,CharSet=CharSet.Ansi,Pack=1,Size=9408)]
		public struct Unionvalue
		{
			[FieldOffset(0)]
			public TSteamPaymentCardInfo PaymentCardInfo;
			[FieldOffset(0)]
			public TSteamPrepurchaseInfo PrepurchaseInfo;
			[FieldOffset(0)]
			public TSteamExternalBillingInfo ExternalBillingInfo;
			[FieldOffset(0)]
			public SByte bUseAccountBillingInfo;
		}
		public Unionvalue value;

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=2112)]
	public struct TSTeamError
	{
		public ESteamError eSteamError;
		public EDetailedPlatformErrorType eDetailedErrorType;
		public Int32 nDetailedErrorCode;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szDesc;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct CCallbackMgr
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct CallbackMsg_t
	{
		public Int32 m_hSteamUser;
		public Int32 m_iCallback;
		public IntPtr m_pubParam;
		public Int32 m_cubParam;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=576)]
	public struct TSteamApp
	{
		public IntPtr szName;
		public UInt32 uMaxNameChars;
		public IntPtr szLatestVersionLabel;
		public UInt32 uMaxLatestVersionLabelChars;
		public IntPtr szCurrentVersionLabel;
		public UInt32 uMaxCurrentVersionLabelChars;
		public IntPtr szInstallDirName;
		public UInt32 uMaxInstallDirNameChars;
		public UInt32 uId;
		public UInt32 uLatestVersionId;
		public UInt32 uCurrentVersionId;
		public UInt32 uMinCacheFileSizeMB;
		public UInt32 uMaxCacheFileSizeMB;
		public UInt32 uNumLaunchOptions;
		public UInt32 uNumIcons;
		public UInt32 uNumVersions;
		public UInt32 uNumDependencies;
		public IntPtr szUnkString;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ConnectedUserInfo_t
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamApps
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=96)]
	public struct TSteamSubscriptionStats
	{
		public UInt32 uNumSubscriptions;
		public UInt32 uMaxNameChars;
		public UInt32 uMaxApps;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamFriends
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=2112)]
	public struct TSteamDiscountQualifier
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szName;
		public UInt32 uRequiredSubscription;
		public Int32 bIsDisqualifier;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct TSteamUpdateStats
	{
		public UInt64 uBytesTotal;
		public UInt64 uBytesPresent;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=168)]
	public struct TSteamPrepurchaseReceiptInfo
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 21)]
		public SByte[] szTypeOfProofOfPurchase;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamContentServer
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=32)]
	public struct castable_string_t
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=5056)]
	public struct TSteamPaymentCardReceiptInfo
	{
		public ESteamPaymentCardType eCardType;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 5)]
		public SByte[] szCardLastFourDigits;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szCardHolderName;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szBillingAddress1;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szBillingAddress2;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 51)]
		public SByte[] szBillingCity;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 17)]
		public SByte[] szBillingZip;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szBillingState;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szBillingCountry;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szCardApprovalCode;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 10)]
		public SByte[] szTransDate;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 10)]
		public SByte[] szTransTime;
		public UInt32 uPriceWithoutTax;
		public UInt32 uTaxAmount;
		public UInt32 uShippingCost;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct IClientUserStats
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamGameServer
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamUserStats
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamMatchmaking
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct IClientGameServerItems
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=32)]
	public struct string_t
	{
		public IntPtr pszValue;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct TSteamAppVersion
	{
		public IntPtr szLabel;
		public UInt32 uMaxLabelChars;
		public UInt32 uVersionId;
		public Int32 bIsNotAvailable;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=4096)]
	public struct MatchMakingKeyValuePair_t
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 256)]
		public SByte[] m_szKey;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 256)]
		public SByte[] m_szValue;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=48)]
	public struct SOMsgCacheSubscribed_Item_Attrib_t
	{
		public UInt16 attribindex;
		public float value;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct CSysModule
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct CallbackManager
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamGameServerItems
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct IConCommandBaseAccessor
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamRemoteStorage
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamUtils
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamClient
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=208)]
	public struct SOMsgCacheSubscribed_Item_t
	{
		public UInt64 itemid;
		public UInt32 accountid;
		public UInt16 itemdefindex;
		public Byte itemlevel;
		public Byte itemquality;
		public UInt32 position;
		public UInt32 itemcount;
		public UInt16 attribcount;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct IVAC
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct SteamSalt
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 8)]
		public Byte[] uchSalt;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteam2Bridge
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct IClientUserItems
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=288)]
	public struct TSteamAppLaunchOption
	{
		public IntPtr szDesc;
		public UInt32 uMaxDescChars;
		public IntPtr szCmdLine;
		public UInt32 uMaxCmdLineChars;
		public UInt32 uIndex;
		public UInt32 uIconIndex;
		public Int32 bNoDesktopShortcut;
		public Int32 bNoStartMenuShortcut;
		public Int32 bIsLongRunningUnattended;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=160)]
	public struct LeaderboardEntry_t
	{
		public UInt64 m_steamIDUser;
		public Int32 m_nGlobalRank;
		public Int32 m_nScore;
		public Int32 m_cDetails;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=2624)]
	public struct TSteamSubscription
	{
		public IntPtr szName;
		public UInt32 uMaxNameChars;
		public IntPtr puAppIds;
		public UInt32 uMaxAppIds;
		public UInt32 uId;
		public UInt32 uNumApps;
		public EBillingType eBillingType;
		public UInt32 uCostInCents;
		public UInt32 uNumDiscounts;
		public Int32 bIsPreorder;
		public Int32 bRequiresShippingAddress;
		public UInt32 uDomesticShippingCostInCents;
		public UInt32 uInternationalShippingCostInCents;
		[MarshalAs(UnmanagedType.I1)]
		public bool bIsCyberCafeSubscription;
		public UInt32 uGameCode;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szGameCodeDesc;
		[MarshalAs(UnmanagedType.I1)]
		public bool bIsDisabled;
		[MarshalAs(UnmanagedType.I1)]
		public bool bRequiresCD;
		public UInt32 uTerritoryCode;
		[MarshalAs(UnmanagedType.I1)]
		public bool bIsSteam3Subscription;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamMasterServerUpdater
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamBilling
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=5216)]
	public struct TSteamSubscriptionReceipt
	{
		public ESteamSubscriptionStatus eStatus;
		public ESteamSubscriptionStatus ePreviousStatus;
		public ESteamSubscriptionBillingInfoType eReceiptInfoType;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 17)]
		public SByte[] szConfirmationCode;

		[StructLayout(LayoutKind.Explicit,CharSet=CharSet.Ansi,Pack=1,Size=5056)]
		public struct Unionvalue
		{
			[FieldOffset(0)]
			public TSteamPaymentCardReceiptInfo PaymentCardReceiptInfo;
			[FieldOffset(0)]
			public TSteamPrepurchaseReceiptInfo PrepurchaseReceiptInfo;
		}
		public Unionvalue value;

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct IClientMasterServerUpdater
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct IClientMatchmakingServers
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=2112)]
	public struct TSteamSubscriptionDiscount
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szName;
		public UInt32 uDiscountInCents;
		public UInt32 uNumQualifiers;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct CNatTraversalStat
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=0)]
	public struct ISteamNetworking
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct TSteamOfflineStatus
	{
		public Int32 eOfflineNow;
		public Int32 eOfflineNextSession;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientAppManagerVTable
	{
		public IntPtr LaunchApp;
		public IntPtr ShutdownApp;
		public IntPtr GetAppState;
		public IntPtr InstallApp;
		public IntPtr GetAppDir;
		public IntPtr UninstallApp;
		public IntPtr StartDownloadingUpdate;
		public IntPtr StopDownloadingUpdate;
		public IntPtr ApplyUpdate;
		public IntPtr VerifyApp;
		public IntPtr GetFileInfo;
		public IntPtr SetAppConfig;
	}
	
	public class IClientAppManager : NativeWrapper<IClientAppManagerVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLaunchApp(IntPtr thisobj, UInt32 arg1, UInt32 arg2, string arg3);
		public Int32 LaunchApp(UInt32 arg1, UInt32 arg2, string arg3) { var call = this.GetFunction<NativeLaunchApp>(this.Functions.LaunchApp); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeShutdownApp(IntPtr thisobj, UInt32 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2);
		public Int32 ShutdownApp(UInt32 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeShutdownApp>(this.Functions.ShutdownApp); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppState(IntPtr thisobj, UInt32 arg1);
		public Int32 GetAppState(UInt32 arg1) { var call = this.GetFunction<NativeGetAppState>(this.Functions.GetAppState); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInstallApp(IntPtr thisobj, UInt32 arg1, string arg2);
		public Int32 InstallApp(UInt32 arg1, string arg2) { var call = this.GetFunction<NativeInstallApp>(this.Functions.InstallApp); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDir(IntPtr thisobj, UInt32 arg1, string arg2, UInt32 arg3);
		public Int32 GetAppDir(UInt32 arg1, string arg2, UInt32 arg3) { var call = this.GetFunction<NativeGetAppDir>(this.Functions.GetAppDir); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUninstallApp(IntPtr thisobj, UInt32 arg1);
		public Int32 UninstallApp(UInt32 arg1) { var call = this.GetFunction<NativeUninstallApp>(this.Functions.UninstallApp); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartDownloadingUpdate(IntPtr thisobj, UInt32 arg1);
		public Int32 StartDownloadingUpdate(UInt32 arg1) { var call = this.GetFunction<NativeStartDownloadingUpdate>(this.Functions.StartDownloadingUpdate); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStopDownloadingUpdate(IntPtr thisobj, UInt32 arg1);
		public Int32 StopDownloadingUpdate(UInt32 arg1) { var call = this.GetFunction<NativeStopDownloadingUpdate>(this.Functions.StopDownloadingUpdate); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeApplyUpdate(IntPtr thisobj, UInt32 arg1);
		public Int32 ApplyUpdate(UInt32 arg1) { var call = this.GetFunction<NativeApplyUpdate>(this.Functions.ApplyUpdate); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeVerifyApp(IntPtr thisobj, UInt32 arg1);
		public Int32 VerifyApp(UInt32 arg1) { var call = this.GetFunction<NativeVerifyApp>(this.Functions.VerifyApp); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileInfo(IntPtr thisobj, UInt32 arg1, string arg2, ref UInt64 arg3, ref UInt32 arg4);
		public Int32 GetFileInfo(UInt32 arg1, string arg2, ref UInt64 arg3, ref UInt32 arg4) { var call = this.GetFunction<NativeGetFileInfo>(this.Functions.GetFileInfo); return call(this.ObjectAddress, arg1, arg2, ref arg3, ref arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetAppConfig(IntPtr thisobj, UInt32 arg1, byte[] arg2, Int32 arg3);
		public Int32 SetAppConfig(UInt32 arg1, byte[] arg2, Int32 arg3) { var call = this.GetFunction<NativeSetAppConfig>(this.Functions.SetAppConfig); return call(this.ObjectAddress, arg1, arg2, arg3); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamApps002VTable
	{
		public IntPtr IsSubscribed;
		public IntPtr IsLowViolence;
		public IntPtr IsCybercafe;
		public IntPtr IsVACBanned;
		public IntPtr GetCurrentGameLanguage;
		public IntPtr GetAvailableGameLanguages;
		public IntPtr IsSubscribedApp;
	}
	
	public class ISteamApps002 : NativeWrapper<ISteamApps002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribed(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribed() { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsLowViolence(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsLowViolence() { var call = this.GetFunction<NativeIsLowViolence>(this.Functions.IsLowViolence); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCybercafe(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCybercafe() { var call = this.GetFunction<NativeIsCybercafe>(this.Functions.IsCybercafe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned() { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetCurrentGameLanguage(IntPtr thisobj);
		public string GetCurrentGameLanguage() { var call = this.GetFunction<NativeGetCurrentGameLanguage>(this.Functions.GetCurrentGameLanguage); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAvailableGameLanguages(IntPtr thisobj);
		public string GetAvailableGameLanguages() { var call = this.GetFunction<NativeGetAvailableGameLanguages>(this.Functions.GetAvailableGameLanguages); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribedApp(IntPtr thisobj, UInt32 appID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribedApp(UInt32 appID) { var call = this.GetFunction<NativeIsSubscribedApp>(this.Functions.IsSubscribedApp); return call(this.ObjectAddress, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMasterServerUpdater001VTable
	{
		public IntPtr SetActive;
		public IntPtr SetHeartbeatInterval;
		public IntPtr HandleIncomingPacket;
		public IntPtr GetNextOutgoingPacket;
		public IntPtr SetBasicServerData;
		public IntPtr ClearAllKeyValues;
		public IntPtr SetKeyValue;
		public IntPtr NotifyShutdown;
		public IntPtr WasRestartRequested;
		public IntPtr ForceHeartbeat;
		public IntPtr AddMasterServer;
		public IntPtr RemoveMasterServer;
		public IntPtr GetNumMasterServers;
		public IntPtr GetMasterServerAddress;
		public IntPtr SetPortA;
		public IntPtr DontUseMe;
		public IntPtr OnUDPFatalError;
	}
	
	public class ISteamMasterServerUpdater001 : NativeWrapper<ISteamMasterServerUpdater001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetActive(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bActive);
		public void SetActive([MarshalAs(UnmanagedType.I1)] bool bActive) { var call = this.GetFunction<NativeSetActive>(this.Functions.SetActive); call(this.ObjectAddress, bActive); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetHeartbeatInterval(IntPtr thisobj, Int32 iHeartbeatInterval);
		public void SetHeartbeatInterval(Int32 iHeartbeatInterval) { var call = this.GetFunction<NativeSetHeartbeatInterval>(this.Functions.SetHeartbeatInterval); call(this.ObjectAddress, iHeartbeatInterval); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHandleIncomingPacket(IntPtr thisobj, IntPtr pData, Int32 cbData, UInt32 srcIP, UInt16 srcPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool HandleIncomingPacket(IntPtr pData, Int32 cbData, UInt32 srcIP, UInt16 srcPort) { var call = this.GetFunction<NativeHandleIncomingPacket>(this.Functions.HandleIncomingPacket); return call(this.ObjectAddress, pData, cbData, srcIP, srcPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNextOutgoingPacket(IntPtr thisobj, IntPtr pOut, Int32 cbMaxOut, ref UInt32 pNetAdr, ref UInt16 pPort);
		public Int32 GetNextOutgoingPacket(IntPtr pOut, Int32 cbMaxOut, ref UInt32 pNetAdr, ref UInt16 pPort) { var call = this.GetFunction<NativeGetNextOutgoingPacket>(this.Functions.GetNextOutgoingPacket); return call(this.ObjectAddress, pOut, cbMaxOut, ref pNetAdr, ref pPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetBasicServerData(IntPtr thisobj, UInt16 nProtocolVersion, [MarshalAs(UnmanagedType.I1)] bool bDedicatedServer, string pRegionName, string pProductName, UInt16 nMaxReportedClients, [MarshalAs(UnmanagedType.I1)] bool bPasswordProtected, string pGameDescription);
		public void SetBasicServerData(UInt16 nProtocolVersion, [MarshalAs(UnmanagedType.I1)] bool bDedicatedServer, string pRegionName, string pProductName, UInt16 nMaxReportedClients, [MarshalAs(UnmanagedType.I1)] bool bPasswordProtected, string pGameDescription) { var call = this.GetFunction<NativeSetBasicServerData>(this.Functions.SetBasicServerData); call(this.ObjectAddress, nProtocolVersion, bDedicatedServer, pRegionName, pProductName, nMaxReportedClients, bPasswordProtected, pGameDescription); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearAllKeyValues(IntPtr thisobj);
		public void ClearAllKeyValues() { var call = this.GetFunction<NativeClearAllKeyValues>(this.Functions.ClearAllKeyValues); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetKeyValue(IntPtr thisobj, string pKey, string pValue);
		public void SetKeyValue(string pKey, string pValue) { var call = this.GetFunction<NativeSetKeyValue>(this.Functions.SetKeyValue); call(this.ObjectAddress, pKey, pValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeNotifyShutdown(IntPtr thisobj);
		public void NotifyShutdown() { var call = this.GetFunction<NativeNotifyShutdown>(this.Functions.NotifyShutdown); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeWasRestartRequested(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool WasRestartRequested() { var call = this.GetFunction<NativeWasRestartRequested>(this.Functions.WasRestartRequested); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeForceHeartbeat(IntPtr thisobj);
		public void ForceHeartbeat() { var call = this.GetFunction<NativeForceHeartbeat>(this.Functions.ForceHeartbeat); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddMasterServer(IntPtr thisobj, string pServerAddress);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddMasterServer(string pServerAddress) { var call = this.GetFunction<NativeAddMasterServer>(this.Functions.AddMasterServer); return call(this.ObjectAddress, pServerAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveMasterServer(IntPtr thisobj, string pServerAddress);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveMasterServer(string pServerAddress) { var call = this.GetFunction<NativeRemoveMasterServer>(this.Functions.RemoveMasterServer); return call(this.ObjectAddress, pServerAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumMasterServers(IntPtr thisobj);
		public Int32 GetNumMasterServers() { var call = this.GetFunction<NativeGetNumMasterServers>(this.Functions.GetNumMasterServers); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMasterServerAddress(IntPtr thisobj, Int32 iServer, string pOut, Int32 outBufferSize);
		public Int32 GetMasterServerAddress(Int32 iServer, string pOut, Int32 outBufferSize) { var call = this.GetFunction<NativeGetMasterServerAddress>(this.Functions.GetMasterServerAddress); return call(this.ObjectAddress, iServer, pOut, outBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetPortA(IntPtr thisobj, UInt16 uint16);
		public Int32 SetPortA(UInt16 uint16) { var call = this.GetFunction<NativeSetPortA>(this.Functions.SetPortA); return call(this.ObjectAddress, uint16); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDontUseMe(IntPtr thisobj);
		public Int32 DontUseMe() { var call = this.GetFunction<NativeDontUseMe>(this.Functions.DontUseMe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeOnUDPFatalError(IntPtr thisobj, UInt32 arg1, UInt32 arg2);
		public Int32 OnUDPFatalError(UInt32 arg1, UInt32 arg2) { var call = this.GetFunction<NativeOnUDPFatalError>(this.Functions.OnUDPFatalError); return call(this.ObjectAddress, arg1, arg2); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUtils001VTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
	}
	
	public class ISteamUtils001 : NativeWrapper<ISteamUtils001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUtils003VTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
		public IntPtr GetIPCountry;
		public IntPtr GetImageSize;
		public IntPtr GetImageRGBA;
		public IntPtr GetCSERIPPort;
		public IntPtr GetCurrentBatteryPower;
		public IntPtr GetAppID;
		public IntPtr SetOverlayNotificationPosition;
		public IntPtr IsAPICallCompleted;
		public IntPtr GetAPICallFailureReason;
		public IntPtr GetAPICallResult;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr SetWarningMessageHook;
	}
	
	public class ISteamUtils003 : NativeWrapper<ISteamUtils003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSize(IntPtr thisobj, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageSize(Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight) { var call = this.GetFunction<NativeGetImageSize>(this.Functions.GetImageSize); return call(this.ObjectAddress, iImage, ref pnWidth, ref pnHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBA(IntPtr thisobj, Int32 iImage, byte[] pubDest, Int32 nDestBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageRGBA(Int32 iImage, byte[] pubDest, Int32 nDestBufferSize) { var call = this.GetFunction<NativeGetImageRGBA>(this.Functions.GetImageRGBA); return call(this.ObjectAddress, iImage, pubDest, nDestBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPort(IntPtr thisobj, ref UInt32 unIP, ref UInt16 usPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCSERIPPort(ref UInt32 unIP, ref UInt16 usPort) { var call = this.GetFunction<NativeGetCSERIPPort>(this.Functions.GetCSERIPPort); return call(this.ObjectAddress, ref unIP, ref usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower(IntPtr thisobj);
		public Byte GetCurrentBatteryPower() { var call = this.GetFunction<NativeGetCurrentBatteryPower>(this.Functions.GetCurrentBatteryPower); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppID(IntPtr thisobj);
		public UInt32 GetAppID() { var call = this.GetFunction<NativeGetAppID>(this.Functions.GetAppID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOverlayNotificationPosition(IntPtr thisobj, ENotificationPosition eNotificationPosition);
		public void SetOverlayNotificationPosition(ENotificationPosition eNotificationPosition) { var call = this.GetFunction<NativeSetOverlayNotificationPosition>(this.Functions.SetOverlayNotificationPosition); call(this.ObjectAddress, eNotificationPosition); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAPICallCompleted(IntPtr thisobj, UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAPICallCompleted(UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeIsAPICallCompleted>(this.Functions.IsAPICallCompleted); return call(this.ObjectAddress, hSteamAPICall, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamAPICallFailure NativeGetAPICallFailureReason(IntPtr thisobj, UInt64 hSteamAPICall);
		public ESteamAPICallFailure GetAPICallFailureReason(UInt64 hSteamAPICall) { var call = this.GetFunction<NativeGetAPICallFailureReason>(this.Functions.GetAPICallFailureReason); return call(this.ObjectAddress, hSteamAPICall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAPICallResult(IntPtr thisobj, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAPICallResult(UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeGetAPICallResult>(this.Functions.GetAPICallResult); return call(this.ObjectAddress, hSteamAPICall, pCallback, cubCallback, iCallbackExpected, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamNetworking001VTable
	{
		public IntPtr CreateListenSocket;
		public IntPtr CreateP2PConnectionSocket;
		public IntPtr CreateConnectionSocket;
		public IntPtr DestroySocket;
		public IntPtr DestroyListenSocket;
		public IntPtr SendDataOnSocket;
		public IntPtr IsDataAvailableOnSocket;
		public IntPtr RetrieveDataFromSocket;
		public IntPtr IsDataAvailable;
		public IntPtr RetrieveData;
		public IntPtr GetSocketInfo;
		public IntPtr GetListenSocketInfo;
	}
	
	public class ISteamNetworking001 : NativeWrapper<ISteamNetworking001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateListenSocket(IntPtr thisobj, Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort);
		public UInt32 CreateListenSocket(Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort) { var call = this.GetFunction<NativeCreateListenSocket>(this.Functions.CreateListenSocket); return call(this.ObjectAddress, nVirtualP2PPort, nIP, nPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateP2PConnectionSocket(IntPtr thisobj, UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec);
		public UInt32 CreateP2PConnectionSocket(UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateP2PConnectionSocket>(this.Functions.CreateP2PConnectionSocket); return call(this.ObjectAddress, steamIDTarget, nVirtualPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateConnectionSocket(IntPtr thisobj, UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec);
		public UInt32 CreateConnectionSocket(UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateConnectionSocket>(this.Functions.CreateConnectionSocket); return call(this.ObjectAddress, nIP, nPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroySocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroySocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroySocket>(this.Functions.DestroySocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroyListenSocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroyListenSocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroyListenSocket>(this.Functions.DestroyListenSocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendDataOnSocket(IntPtr thisobj, UInt32 hSocket, IntPtr pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendDataOnSocket(UInt32 hSocket, IntPtr pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable) { var call = this.GetFunction<NativeSendDataOnSocket>(this.Functions.SendDataOnSocket); return call(this.ObjectAddress, hSocket, pubData, cubData, bReliable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailableOnSocket(IntPtr thisobj, UInt32 hSocket, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailableOnSocket(UInt32 hSocket, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsDataAvailableOnSocket>(this.Functions.IsDataAvailableOnSocket); return call(this.ObjectAddress, hSocket, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveDataFromSocket(IntPtr thisobj, UInt32 hSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveDataFromSocket(UInt32 hSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveDataFromSocket>(this.Functions.RetrieveDataFromSocket); return call(this.ObjectAddress, hSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailable(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailable(UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeIsDataAvailable>(this.Functions.IsDataAvailable); return call(this.ObjectAddress, hListenSocket, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveData(IntPtr thisobj, UInt32 hListenSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveData(UInt32 hListenSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveData>(this.Functions.RetrieveData); return call(this.ObjectAddress, hListenSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSocketInfo(IntPtr thisobj, UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSocketInfo(UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote) { var call = this.GetFunction<NativeGetSocketInfo>(this.Functions.GetSocketInfo); return call(this.ObjectAddress, hSocket, ref pSteamIDRemote, ref peSocketStatus, ref punIPRemote, ref punPortRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetListenSocketInfo(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetListenSocketInfo(UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort) { var call = this.GetFunction<NativeGetListenSocketInfo>(this.Functions.GetListenSocketInfo); return call(this.ObjectAddress, hListenSocket, ref pnIP, ref pnPort); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam003VTable
	{
		public IntPtr ChangePassword;
		public IntPtr GetCurrentEmailAddress;
		public IntPtr ChangePersonalQA;
		public IntPtr ChangeEmailAddress;
		public IntPtr VerifyEmailAddress;
		public IntPtr RequestEmailAddressVerificationEmail;
		public IntPtr ChangeAccountName;
		public IntPtr MountAppFilesystem;
		public IntPtr UnmountAppFilesystem;
		public IntPtr MountFilesystem;
		public IntPtr UnmountFilesystem;
		public IntPtr Stat;
		public IntPtr SetvBuf;
		public IntPtr FlushFile;
		public IntPtr OpenFile;
		public IntPtr OpenFileEx;
		public IntPtr OpenTmpFile;
		public IntPtr ClearError;
		public IntPtr GetVersion;
		public IntPtr GetOfflineStatus;
		public IntPtr ChangeOfflineStatus;
		public IntPtr ProcessCall;
		public IntPtr AbortCall;
		public IntPtr BlockingCall;
		public IntPtr SetMaxStallCount;
		public IntPtr CloseFile;
		public IntPtr ReadFile;
		public IntPtr WriteFile;
		public IntPtr Getc;
		public IntPtr Putc;
		public IntPtr SeekFile;
		public IntPtr TellFile;
		public IntPtr SizeFile;
		public IntPtr FindFirst;
		public IntPtr FindNext;
		public IntPtr FindClose;
		public IntPtr GetLocalFileCopy;
		public IntPtr IsFileImmediatelyAvailable;
		public IntPtr HintResourceNeed;
		public IntPtr ForgetAllHints;
		public IntPtr PauseCachePreloading;
		public IntPtr ResumeCachePreloading;
		public IntPtr WaitForResources;
		public IntPtr StartEngine;
		public IntPtr ShutdownEngine;
		public IntPtr Startup;
		public IntPtr Cleanup;
		public IntPtr NumAppsRunning;
		public IntPtr CreateAccount;
		public IntPtr GenerateSuggestedAccountNames;
		public IntPtr IsLoggedIn;
		public IntPtr Logout;
		public IntPtr IsSecureComputer;
		public IntPtr CreateLogContext;
		public IntPtr Log;
		public IntPtr LogResourceLoadStarted;
		public IntPtr LogResourceLoadFinished;
		public IntPtr RefreshLogin;
		public IntPtr VerifyPassword;
		public IntPtr GetUserType;
		public IntPtr GetAppStats;
		public IntPtr IsAccountNameInUse;
		public IntPtr GetAppIds;
		public IntPtr GetSubscriptionStats;
		public IntPtr RefreshAccountInfo;
		public IntPtr Subscribe;
		public IntPtr Unsubscribe;
		public IntPtr GetSubscriptionReceipt;
		public IntPtr GetAccountStatus;
		public IntPtr SetUser;
		public IntPtr GetUser;
		public IntPtr Login;
		public IntPtr AckSubscriptionReceipt;
		public IntPtr IsAppSubscribed;
		public IntPtr GetSubscriptionIds;
		public IntPtr EnumerateSubscription;
		public IntPtr EnumerateSubscriptionDiscount;
		public IntPtr EnumerateSubscriptionDiscountQualifier;
		public IntPtr EnumerateApp;
		public IntPtr EnumerateAppLaunchOption;
		public IntPtr DeleteAccount;
		public IntPtr EnumerateAppIcon;
		public IntPtr LaunchApp;
		public IntPtr GetCacheFilePath;
		public IntPtr EnumerateAppVersion;
		public IntPtr EnumerateAppDependency;
		public IntPtr StartLoadingCache;
		public IntPtr InsertAppDependency;
		public IntPtr RemoveAppDependency;
		public IntPtr FindApp;
		public IntPtr GetAppDependencies;
		public IntPtr IsSubscribed;
		public IntPtr GetAppUserDefinedInfo;
		public IntPtr WaitForAppReadyToLaunch;
		public IntPtr IsCacheLoadingEnabled;
		public IntPtr StopLoadingCache;
		public IntPtr GetEncryptedUserIDTicket;
		public IntPtr FlushCache;
		public IntPtr RepairOrDecryptCaches;
		public IntPtr LoadCacheFromDir;
		public IntPtr GetCacheDefaultDirectory;
		public IntPtr SetCacheDefaultDirectory;
		public IntPtr GetAppDir;
		public IntPtr MoveApp;
		public IntPtr GetAppCacheSize;
		public IntPtr SetAppCacheSize;
		public IntPtr SetAppVersion;
		public IntPtr Uninstall;
		public IntPtr SetNotificationCallback;
		public IntPtr ChangeForgottenPassword;
		public IntPtr RequestForgottenPasswordEmail;
		public IntPtr RequestAccountsByEmailAddressEmail;
		public IntPtr RequestAccountsByCdKeyEmail;
		public IntPtr GetNumAccountsWithEmailAddress;
		public IntPtr UpdateAccountBillingInfo;
		public IntPtr UpdateSubscriptionBillingInfo;
		public IntPtr GetSponsorUrl;
		public IntPtr GetContentServerInfo;
		public IntPtr GetAppUpdateStats;
		public IntPtr GetTotalUpdateStats;
		public IntPtr CreateCachePreloaders;
	}
	
	public class ISteam003 : NativeWrapper<ISteam003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePassword(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPassphrase, ref TSTeamError pError);
		public UInt32 ChangePassword(string cszCurrentPassphrase, string cszNewPassphrase, ref TSTeamError pError) { var call = this.GetFunction<NativeChangePassword>(this.Functions.ChangePassword); return call(this.ObjectAddress, cszCurrentPassphrase, cszNewPassphrase, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentEmailAddress(IntPtr thisobj, string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSTeamError pError);
		public Int32 GetCurrentEmailAddress(string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCurrentEmailAddress>(this.Functions.GetCurrentEmailAddress); return call(this.ObjectAddress, szEmailaddress, uBufSize, ref puEmailaddressChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePersonalQA(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSTeamError pError);
		public UInt32 ChangePersonalQA(string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSTeamError pError) { var call = this.GetFunction<NativeChangePersonalQA>(this.Functions.ChangePersonalQA); return call(this.ObjectAddress, cszCurrentPassphrase, cszNewPersonalQuestion, cszNewAnswerToQuestion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeEmailAddress(IntPtr thisobj, string cszNewEmailAddress, ref TSTeamError pError);
		public UInt32 ChangeEmailAddress(string cszNewEmailAddress, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeEmailAddress>(this.Functions.ChangeEmailAddress); return call(this.ObjectAddress, cszNewEmailAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeVerifyEmailAddress(IntPtr thisobj, string cszEmailAddress, ref TSTeamError pError);
		public UInt32 VerifyEmailAddress(string cszEmailAddress, ref TSTeamError pError) { var call = this.GetFunction<NativeVerifyEmailAddress>(this.Functions.VerifyEmailAddress); return call(this.ObjectAddress, cszEmailAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestEmailAddressVerificationEmail(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 RequestEmailAddressVerificationEmail(ref TSTeamError pError) { var call = this.GetFunction<NativeRequestEmailAddressVerificationEmail>(this.Functions.RequestEmailAddressVerificationEmail); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeAccountName(IntPtr thisobj, string cszCurrentAccountName, string cszNewAccountName, ref TSTeamError pError);
		public UInt32 ChangeAccountName(string cszCurrentAccountName, string cszNewAccountName, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeAccountName>(this.Functions.ChangeAccountName); return call(this.ObjectAddress, cszCurrentAccountName, cszNewAccountName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountAppFilesystem(IntPtr thisobj, ref TSTeamError pError);
		public Int32 MountAppFilesystem(ref TSTeamError pError) { var call = this.GetFunction<NativeMountAppFilesystem>(this.Functions.MountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountAppFilesystem(IntPtr thisobj, ref TSTeamError pError);
		public Int32 UnmountAppFilesystem(ref TSTeamError pError) { var call = this.GetFunction<NativeUnmountAppFilesystem>(this.Functions.UnmountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountFilesystem(IntPtr thisobj, UInt32 uAppId, string szMountPath, ref TSTeamError pError);
		public Int32 MountFilesystem(UInt32 uAppId, string szMountPath, ref TSTeamError pError) { var call = this.GetFunction<NativeMountFilesystem>(this.Functions.MountFilesystem); return call(this.ObjectAddress, uAppId, szMountPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountFilesystem(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public Int32 UnmountFilesystem(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeUnmountFilesystem>(this.Functions.UnmountFilesystem); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStat(IntPtr thisobj, string cszName, ref TSteamElemInfo pInfo, ref TSTeamError pError);
		public Int32 Stat(string cszName, ref TSteamElemInfo pInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeStat>(this.Functions.Stat); return call(this.ObjectAddress, cszName, ref pInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetvBuf(IntPtr thisobj, UInt32 hFile, IntPtr pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSTeamError pError);
		public Int32 SetvBuf(UInt32 hFile, IntPtr pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSTeamError pError) { var call = this.GetFunction<NativeSetvBuf>(this.Functions.SetvBuf); return call(this.ObjectAddress, hFile, pBuf, eMethod, uBytes, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFlushFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 FlushFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeFlushFile>(this.Functions.FlushFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFile(IntPtr thisobj, string cszName, string cszMode, ref TSTeamError pError);
		public UInt32 OpenFile(string cszName, string cszMode, ref TSTeamError pError) { var call = this.GetFunction<NativeOpenFile>(this.Functions.OpenFile); return call(this.ObjectAddress, cszName, cszMode, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFileEx(IntPtr thisobj, string cszFileName, string cszMode, ref UInt32 puSize, ref TSTeamError pError);
		public UInt32 OpenFileEx(string cszFileName, string cszMode, ref UInt32 puSize, ref TSTeamError pError) { var call = this.GetFunction<NativeOpenFileEx>(this.Functions.OpenFileEx); return call(this.ObjectAddress, cszFileName, cszMode, ref puSize, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenTmpFile(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 OpenTmpFile(ref TSTeamError pError) { var call = this.GetFunction<NativeOpenTmpFile>(this.Functions.OpenTmpFile); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearError(IntPtr thisobj, ref TSTeamError pError);
		public void ClearError(ref TSTeamError pError) { var call = this.GetFunction<NativeClearError>(this.Functions.ClearError); call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetVersion(IntPtr thisobj, string szVersion, UInt32 uVersionBufSize);
		public Int32 GetVersion(string szVersion, UInt32 uVersionBufSize) { var call = this.GetFunction<NativeGetVersion>(this.Functions.GetVersion); return call(this.ObjectAddress, szVersion, uVersionBufSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError);
		public Int32 GetOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError) { var call = this.GetFunction<NativeGetOfflineStatus>(this.Functions.GetOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeChangeOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError);
		public Int32 ChangeOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeOfflineStatus>(this.Functions.ChangeOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeProcessCall(IntPtr thisobj, UInt32 handle, ref TSteamProgress pProgress, ref TSTeamError pError);
		public Int32 ProcessCall(UInt32 handle, ref TSteamProgress pProgress, ref TSTeamError pError) { var call = this.GetFunction<NativeProcessCall>(this.Functions.ProcessCall); return call(this.ObjectAddress, handle, ref pProgress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAbortCall(IntPtr thisobj, UInt32 handle, ref TSTeamError pError);
		public Int32 AbortCall(UInt32 handle, ref TSTeamError pError) { var call = this.GetFunction<NativeAbortCall>(this.Functions.AbortCall); return call(this.ObjectAddress, handle, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeBlockingCall(IntPtr thisobj, UInt32 handle, UInt32 uiProcessTickMS, ref TSTeamError pError);
		public Int32 BlockingCall(UInt32 handle, UInt32 uiProcessTickMS, ref TSTeamError pError) { var call = this.GetFunction<NativeBlockingCall>(this.Functions.BlockingCall); return call(this.ObjectAddress, handle, uiProcessTickMS, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetMaxStallCount(IntPtr thisobj, UInt32 uNumStalls, ref TSTeamError pError);
		public Int32 SetMaxStallCount(UInt32 uNumStalls, ref TSTeamError pError) { var call = this.GetFunction<NativeSetMaxStallCount>(this.Functions.SetMaxStallCount); return call(this.ObjectAddress, uNumStalls, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCloseFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 CloseFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeCloseFile>(this.Functions.CloseFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeReadFile(IntPtr thisobj, IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError);
		public UInt32 ReadFile(IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeReadFile>(this.Functions.ReadFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWriteFile(IntPtr thisobj, IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError);
		public UInt32 WriteFile(IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeWriteFile>(this.Functions.WriteFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetc(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 Getc(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeGetc>(this.Functions.Getc); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePutc(IntPtr thisobj, Int32 cChar, UInt32 hFile, ref TSTeamError pError);
		public Int32 Putc(Int32 cChar, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativePutc>(this.Functions.Putc); return call(this.ObjectAddress, cChar, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSeekFile(IntPtr thisobj, UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSTeamError pError);
		public Int32 SeekFile(UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSTeamError pError) { var call = this.GetFunction<NativeSeekFile>(this.Functions.SeekFile); return call(this.ObjectAddress, hFile, lOffset, sm, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeTellFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 TellFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeTellFile>(this.Functions.TellFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSizeFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 SizeFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeSizeFile>(this.Functions.SizeFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFindFirst(IntPtr thisobj, string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSTeamError pError);
		public UInt32 FindFirst(string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeFindFirst>(this.Functions.FindFirst); return call(this.ObjectAddress, cszPattern, eFilter, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindNext(IntPtr thisobj, UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSTeamError pError);
		public Int32 FindNext(UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeFindNext>(this.Functions.FindNext); return call(this.ObjectAddress, hFind, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindClose(IntPtr thisobj, UInt32 hFind, ref TSTeamError pError);
		public Int32 FindClose(UInt32 hFind, ref TSTeamError pError) { var call = this.GetFunction<NativeFindClose>(this.Functions.FindClose); return call(this.ObjectAddress, hFind, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalFileCopy(IntPtr thisobj, string cszName, ref TSTeamError pError);
		public Int32 GetLocalFileCopy(string cszName, ref TSTeamError pError) { var call = this.GetFunction<NativeGetLocalFileCopy>(this.Functions.GetLocalFileCopy); return call(this.ObjectAddress, cszName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileImmediatelyAvailable(IntPtr thisobj, string cszName, ref TSTeamError pError);
		public Int32 IsFileImmediatelyAvailable(string cszName, ref TSTeamError pError) { var call = this.GetFunction<NativeIsFileImmediatelyAvailable>(this.Functions.IsFileImmediatelyAvailable); return call(this.ObjectAddress, cszName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeHintResourceNeed(IntPtr thisobj, string cszHintList, Int32 bForgetEverything, ref TSTeamError pError);
		public Int32 HintResourceNeed(string cszHintList, Int32 bForgetEverything, ref TSTeamError pError) { var call = this.GetFunction<NativeHintResourceNeed>(this.Functions.HintResourceNeed); return call(this.ObjectAddress, cszHintList, bForgetEverything, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeForgetAllHints(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ForgetAllHints(ref TSTeamError pError) { var call = this.GetFunction<NativeForgetAllHints>(this.Functions.ForgetAllHints); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePauseCachePreloading(IntPtr thisobj, ref TSTeamError pError);
		public Int32 PauseCachePreloading(ref TSTeamError pError) { var call = this.GetFunction<NativePauseCachePreloading>(this.Functions.PauseCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResumeCachePreloading(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ResumeCachePreloading(ref TSTeamError pError) { var call = this.GetFunction<NativeResumeCachePreloading>(this.Functions.ResumeCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForResources(IntPtr thisobj, string cszMasterList, ref TSTeamError pError);
		public UInt32 WaitForResources(string cszMasterList, ref TSTeamError pError) { var call = this.GetFunction<NativeWaitForResources>(this.Functions.WaitForResources); return call(this.ObjectAddress, cszMasterList, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartEngine(IntPtr thisobj, ref TSTeamError pError);
		public Int32 StartEngine(ref TSTeamError pError) { var call = this.GetFunction<NativeStartEngine>(this.Functions.StartEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeShutdownEngine(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ShutdownEngine(ref TSTeamError pError) { var call = this.GetFunction<NativeShutdownEngine>(this.Functions.ShutdownEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartup(IntPtr thisobj, UInt32 uUsingMask, ref TSTeamError pError);
		public Int32 Startup(UInt32 uUsingMask, ref TSTeamError pError) { var call = this.GetFunction<NativeStartup>(this.Functions.Startup); return call(this.ObjectAddress, uUsingMask, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCleanup(IntPtr thisobj, ref TSTeamError pError);
		public Int32 Cleanup(ref TSTeamError pError) { var call = this.GetFunction<NativeCleanup>(this.Functions.Cleanup); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNumAppsRunning(IntPtr thisobj, ref TSTeamError pError);
		public Int32 NumAppsRunning(ref TSTeamError pError) { var call = this.GetFunction<NativeNumAppsRunning>(this.Functions.NumAppsRunning); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateAccount(IntPtr thisobj, string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSTeamError pError);
		public UInt32 CreateAccount(string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSTeamError pError) { var call = this.GetFunction<NativeCreateAccount>(this.Functions.CreateAccount); return call(this.ObjectAddress, cszUser, cszPassphrase, cszCreationKey, cszPersonalQuestion, cszAnswerToQuestion, cszArg6, ref pbCreated, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGenerateSuggestedAccountNames(IntPtr thisobj, string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSTeamError pError);
		public UInt32 GenerateSuggestedAccountNames(string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeGenerateSuggestedAccountNames>(this.Functions.GenerateSuggestedAccountNames); return call(this.ObjectAddress, cszArg1, cszArg2, szArg3, uArg4, ref puArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsLoggedIn(IntPtr thisobj, ref Int32 pbIsLoggedIn, ref TSTeamError pError);
		public Int32 IsLoggedIn(ref Int32 pbIsLoggedIn, ref TSTeamError pError) { var call = this.GetFunction<NativeIsLoggedIn>(this.Functions.IsLoggedIn); return call(this.ObjectAddress, ref pbIsLoggedIn, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogout(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 Logout(ref TSTeamError pError) { var call = this.GetFunction<NativeLogout>(this.Functions.Logout); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSecureComputer(IntPtr thisobj, ref Int32 pbIsSecure, ref TSTeamError pError);
		public Int32 IsSecureComputer(ref Int32 pbIsSecure, ref TSTeamError pError) { var call = this.GetFunction<NativeIsSecureComputer>(this.Functions.IsSecureComputer); return call(this.ObjectAddress, ref pbIsSecure, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateLogContext(IntPtr thisobj, string cszName);
		public UInt32 CreateLogContext(string cszName) { var call = this.GetFunction<NativeCreateLogContext>(this.Functions.CreateLogContext); return call(this.ObjectAddress, cszName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLog(IntPtr thisobj, UInt32 hContext, string cszMsg);
		public Int32 Log(UInt32 hContext, string cszMsg) { var call = this.GetFunction<NativeLog>(this.Functions.Log); return call(this.ObjectAddress, hContext, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadStarted(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadStarted(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadStarted>(this.Functions.LogResourceLoadStarted); call(this.ObjectAddress, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadFinished(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadFinished(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadFinished>(this.Functions.LogResourceLoadFinished); call(this.ObjectAddress, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshLogin(IntPtr thisobj, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError);
		public UInt32 RefreshLogin(string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError) { var call = this.GetFunction<NativeRefreshLogin>(this.Functions.RefreshLogin); return call(this.ObjectAddress, cszPassphrase, bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeVerifyPassword(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSTeamError pError);
		public Int32 VerifyPassword(string cszArg1, ref Int32 piArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeVerifyPassword>(this.Functions.VerifyPassword); return call(this.ObjectAddress, cszArg1, ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserType(IntPtr thisobj, ref UInt32 puArg1, ref TSTeamError pError);
		public Int32 GetUserType(ref UInt32 puArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeGetUserType>(this.Functions.GetUserType); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppStats(IntPtr thisobj, ref TSteamAppStats pAppStats, ref TSTeamError pError);
		public Int32 GetAppStats(ref TSteamAppStats pAppStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppStats>(this.Functions.GetAppStats); return call(this.ObjectAddress, ref pAppStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeIsAccountNameInUse(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSTeamError pError);
		public UInt32 IsAccountNameInUse(string cszArg1, ref Int32 piArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeIsAccountNameInUse>(this.Functions.IsAccountNameInUse); return call(this.ObjectAddress, cszArg1, ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError);
		public Int32 GetAppIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppIds>(this.Functions.GetAppIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionStats(IntPtr thisobj, ref TSteamSubscriptionStats pSubscriptionStats, ref TSTeamError pError);
		public Int32 GetSubscriptionStats(ref TSteamSubscriptionStats pSubscriptionStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionStats>(this.Functions.GetSubscriptionStats); return call(this.ObjectAddress, ref pSubscriptionStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshAccountInfo(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 RefreshAccountInfo(ref TSTeamError pError) { var call = this.GetFunction<NativeRefreshAccountInfo>(this.Functions.RefreshAccountInfo); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError);
		public UInt32 Subscribe(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeSubscribe>(this.Functions.Subscribe); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUnsubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSTeamError pError);
		public UInt32 Unsubscribe(UInt32 uSubscriptionId, ref TSTeamError pError) { var call = this.GetFunction<NativeUnsubscribe>(this.Functions.Unsubscribe); return call(this.ObjectAddress, uSubscriptionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionReceipt(IntPtr thisobj, UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSTeamError pError);
		public Int32 GetSubscriptionReceipt(UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionReceipt>(this.Functions.GetSubscriptionReceipt); return call(this.ObjectAddress, arg1, ref pSteamSubscriptionReceipt, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAccountStatus(IntPtr thisobj, ref UInt32 puArg1, ref TSTeamError pError);
		public Int32 GetAccountStatus(ref UInt32 puArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAccountStatus>(this.Functions.GetAccountStatus); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetUser(IntPtr thisobj, string cszUser, ref Int32 pbUserSet, ref TSTeamError pError);
		public UInt32 SetUser(string cszUser, ref Int32 pbUserSet, ref TSTeamError pError) { var call = this.GetFunction<NativeSetUser>(this.Functions.SetUser); return call(this.ObjectAddress, cszUser, ref pbUserSet, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUser(IntPtr thisobj, string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSTeamError pError);
		public Int32 GetUser(string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSTeamError pError) { var call = this.GetFunction<NativeGetUser>(this.Functions.GetUser); return call(this.ObjectAddress, szUser, uBufSize, ref puUserChars, ref pSteamGlobalUserID, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogin(IntPtr thisobj, string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError);
		public UInt32 Login(string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError) { var call = this.GetFunction<NativeLogin>(this.Functions.Login); return call(this.ObjectAddress, cszUser, cszPassphrase, bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeAckSubscriptionReceipt(IntPtr thisobj, UInt32 uArg1, ref TSTeamError pError);
		public UInt32 AckSubscriptionReceipt(UInt32 uArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeAckSubscriptionReceipt>(this.Functions.AckSubscriptionReceipt); return call(this.ObjectAddress, uArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsAppSubscribed(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSTeamError pError);
		public Int32 IsAppSubscribed(UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSTeamError pError) { var call = this.GetFunction<NativeIsAppSubscribed>(this.Functions.IsAppSubscribed); return call(this.ObjectAddress, uAppId, ref pbIsAppSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError);
		public Int32 GetSubscriptionIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionIds>(this.Functions.GetSubscriptionIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscription(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSTeamError pError);
		public Int32 EnumerateSubscription(UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscription>(this.Functions.EnumerateSubscription); return call(this.ObjectAddress, uSubscriptionId, ref pSubscription, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscount(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSTeamError pError);
		public Int32 EnumerateSubscriptionDiscount(UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscount>(this.Functions.EnumerateSubscriptionDiscount); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, ref pSteamSubscriptionDiscount, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscountQualifier(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSTeamError pError);
		public Int32 EnumerateSubscriptionDiscountQualifier(UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscountQualifier>(this.Functions.EnumerateSubscriptionDiscountQualifier); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, uQualifierIdx, ref pSteamDiscountQualifier, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateApp(IntPtr thisobj, UInt32 uAppId, ref TSteamApp pApp, ref TSTeamError pError);
		public Int32 EnumerateApp(UInt32 uAppId, ref TSteamApp pApp, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateApp>(this.Functions.EnumerateApp); return call(this.ObjectAddress, uAppId, ref pApp, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppLaunchOption(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSTeamError pError);
		public Int32 EnumerateAppLaunchOption(UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppLaunchOption>(this.Functions.EnumerateAppLaunchOption); return call(this.ObjectAddress, uAppId, uLaunchOptionIndex, ref pLaunchOption, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeDeleteAccount(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 DeleteAccount(ref TSTeamError pError) { var call = this.GetFunction<NativeDeleteAccount>(this.Functions.DeleteAccount); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppIcon(IntPtr thisobj, UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSTeamError pError);
		public Int32 EnumerateAppIcon(UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppIcon>(this.Functions.EnumerateAppIcon); return call(this.ObjectAddress, uAppId, uIconIndex, pIconData, uIconDataBufSize, ref puSizeOfIconData, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLaunchApp(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSTeamError pError);
		public UInt32 LaunchApp(UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSTeamError pError) { var call = this.GetFunction<NativeLaunchApp>(this.Functions.LaunchApp); return call(this.ObjectAddress, uAppId, uLaunchOption, cszArgs, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheFilePath(IntPtr thisobj, UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetCacheFilePath(UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCacheFilePath>(this.Functions.GetCacheFilePath); return call(this.ObjectAddress, uAppId, szFilePath, uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSTeamError pError);
		public Int32 EnumerateAppVersion(UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppVersion>(this.Functions.EnumerateAppVersion); return call(this.ObjectAddress, uAppId, uVersionIndex, ref pAppVersion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppDependency(IntPtr thisobj, UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError);
		public Int32 EnumerateAppDependency(UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppDependency>(this.Functions.EnumerateAppDependency); return call(this.ObjectAddress, AppId, uDependency, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStartLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 StartLoadingCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeStartLoadingCache>(this.Functions.StartLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInsertAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError);
		public Int32 InsertAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeInsertAppDependency>(this.Functions.InsertAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRemoveAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSTeamError pError);
		public Int32 RemoveAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSTeamError pError) { var call = this.GetFunction<NativeRemoveAppDependency>(this.Functions.RemoveAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindApp(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public Int32 FindApp(string cszArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeFindApp>(this.Functions.FindApp); return call(this.ObjectAddress, cszArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDependencies(IntPtr thisobj, UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSTeamError pError);
		public Int32 GetAppDependencies(UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppDependencies>(this.Functions.GetAppDependencies); return call(this.ObjectAddress, uAppId, ref puDependecies, uBufferLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSubscribed(IntPtr thisobj, UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSTeamError pError);
		public Int32 IsSubscribed(UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSTeamError pError) { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress, uSubscriptionId, ref pbIsSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedInfo(IntPtr thisobj, UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSTeamError pError);
		public Int32 GetAppUserDefinedInfo(UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedInfo>(this.Functions.GetAppUserDefinedInfo); return call(this.ObjectAddress, uAppId, cszPropertyName, szPropertyValue, uBufSize, ref puPropertyValueLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForAppReadyToLaunch(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 WaitForAppReadyToLaunch(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeWaitForAppReadyToLaunch>(this.Functions.WaitForAppReadyToLaunch); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsCacheLoadingEnabled(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsLoading, ref TSTeamError pError);
		public Int32 IsCacheLoadingEnabled(UInt32 uAppId, ref Int32 pbIsLoading, ref TSTeamError pError) { var call = this.GetFunction<NativeIsCacheLoadingEnabled>(this.Functions.IsCacheLoadingEnabled); return call(this.ObjectAddress, uAppId, ref pbIsLoading, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStopLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 StopLoadingCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeStopLoadingCache>(this.Functions.StopLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamError NativeGetEncryptedUserIDTicket(IntPtr thisobj, IntPtr pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, IntPtr pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSTeamError pError);
		public ESteamError GetEncryptedUserIDTicket(IntPtr pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, IntPtr pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSTeamError pError) { var call = this.GetFunction<NativeGetEncryptedUserIDTicket>(this.Functions.GetEncryptedUserIDTicket); return call(this.ObjectAddress, pEncryptionKeyReceivedFromAppServer, uEncryptionKeyLength, pOutputBuffer, uSizeOfOutputBuffer, ref pReceiveSizeOfEncryptedTicket, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFlushCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 FlushCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeFlushCache>(this.Functions.FlushCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRepairOrDecryptCaches(IntPtr thisobj, UInt32 uAppId, Int32 iArg2, ref TSTeamError pError);
		public UInt32 RepairOrDecryptCaches(UInt32 uAppId, Int32 iArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeRepairOrDecryptCaches>(this.Functions.RepairOrDecryptCaches); return call(this.ObjectAddress, uAppId, iArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLoadCacheFromDir(IntPtr thisobj, UInt32 uAppId, string cszPath, ref TSTeamError pError);
		public UInt32 LoadCacheFromDir(UInt32 uAppId, string cszPath, ref TSTeamError pError) { var call = this.GetFunction<NativeLoadCacheFromDir>(this.Functions.LoadCacheFromDir); return call(this.ObjectAddress, uAppId, cszPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDefaultDirectory(IntPtr thisobj, string szPath, ref TSTeamError pError);
		public Int32 GetCacheDefaultDirectory(string szPath, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCacheDefaultDirectory>(this.Functions.GetCacheDefaultDirectory); return call(this.ObjectAddress, szPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCacheDefaultDirectory(IntPtr thisobj, string cszPath, ref TSTeamError pError);
		public Int32 SetCacheDefaultDirectory(string cszPath, ref TSTeamError pError) { var call = this.GetFunction<NativeSetCacheDefaultDirectory>(this.Functions.SetCacheDefaultDirectory); return call(this.ObjectAddress, cszPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDir(IntPtr thisobj, UInt32 uAppId, string szAppDir, ref TSTeamError pError);
		public Int32 GetAppDir(UInt32 uAppId, string szAppDir, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppDir>(this.Functions.GetAppDir); return call(this.ObjectAddress, uAppId, szAppDir, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeMoveApp(IntPtr thisobj, UInt32 uAppId, string szPath, ref TSTeamError pError);
		public UInt32 MoveApp(UInt32 uAppId, string szPath, ref TSTeamError pError) { var call = this.GetFunction<NativeMoveApp>(this.Functions.MoveApp); return call(this.ObjectAddress, uAppId, szPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppCacheSize(IntPtr thisobj, UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSTeamError pError);
		public UInt32 GetAppCacheSize(UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppCacheSize>(this.Functions.GetAppCacheSize); return call(this.ObjectAddress, uAppId, ref puCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppCacheSize(IntPtr thisobj, UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSTeamError pError);
		public UInt32 SetAppCacheSize(UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSTeamError pError) { var call = this.GetFunction<NativeSetAppCacheSize>(this.Functions.SetAppCacheSize); return call(this.ObjectAddress, uAppId, uCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uAppVersionId, ref TSTeamError pError);
		public UInt32 SetAppVersion(UInt32 uAppId, UInt32 uAppVersionId, ref TSTeamError pError) { var call = this.GetFunction<NativeSetAppVersion>(this.Functions.SetAppVersion); return call(this.ObjectAddress, uAppId, uAppVersionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUninstall(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 Uninstall(ref TSTeamError pError) { var call = this.GetFunction<NativeUninstall>(this.Functions.Uninstall); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetNotificationCallback(IntPtr thisobj, ref IntPtr pCallbackFunction, ref TSTeamError pError);
		public Int32 SetNotificationCallback(ref IntPtr pCallbackFunction, ref TSTeamError pError) { var call = this.GetFunction<NativeSetNotificationCallback>(this.Functions.SetNotificationCallback); return call(this.ObjectAddress, ref pCallbackFunction, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeForgottenPassword(IntPtr thisobj, string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSTeamError pError);
		public UInt32 ChangeForgottenPassword(string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeForgottenPassword>(this.Functions.ChangeForgottenPassword); return call(this.ObjectAddress, cszArg1, cszArg2, cszArg3, cszArg4, ref piArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestForgottenPasswordEmail(IntPtr thisobj, string cszArg1, string szArg2, ref TSTeamError pError);
		public UInt32 RequestForgottenPasswordEmail(string cszArg1, string szArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestForgottenPasswordEmail>(this.Functions.RequestForgottenPasswordEmail); return call(this.ObjectAddress, cszArg1, szArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByEmailAddressEmail(IntPtr thisobj, string cszArg1, ref TSTeamError pError);
		public UInt32 RequestAccountsByEmailAddressEmail(string cszArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestAccountsByEmailAddressEmail>(this.Functions.RequestAccountsByEmailAddressEmail); return call(this.ObjectAddress, cszArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByCdKeyEmail(IntPtr thisobj, string cszArg1, ref TSTeamError pError);
		public UInt32 RequestAccountsByCdKeyEmail(string cszArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestAccountsByCdKeyEmail>(this.Functions.RequestAccountsByCdKeyEmail); return call(this.ObjectAddress, cszArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAccountsWithEmailAddress(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public UInt32 GetNumAccountsWithEmailAddress(string cszArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeGetNumAccountsWithEmailAddress>(this.Functions.GetNumAccountsWithEmailAddress); return call(this.ObjectAddress, cszArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateAccountBillingInfo(IntPtr thisobj, ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSTeamError pError);
		public UInt32 UpdateAccountBillingInfo(ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeUpdateAccountBillingInfo>(this.Functions.UpdateAccountBillingInfo); return call(this.ObjectAddress, ref pPaymentCardInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateSubscriptionBillingInfo(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError);
		public UInt32 UpdateSubscriptionBillingInfo(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeUpdateSubscriptionBillingInfo>(this.Functions.UpdateSubscriptionBillingInfo); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSponsorUrl(IntPtr thisobj, UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSTeamError pError);
		public Int32 GetSponsorUrl(UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSponsorUrl>(this.Functions.GetSponsorUrl); return call(this.ObjectAddress, uAppId, szUrl, uBufSize, ref pUrlChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetContentServerInfo(IntPtr thisobj, UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSTeamError pError);
		public Int32 GetContentServerInfo(UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSTeamError pError) { var call = this.GetFunction<NativeGetContentServerInfo>(this.Functions.GetContentServerInfo); return call(this.ObjectAddress, uArg1, ref puArg2, ref puArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppUpdateStats(IntPtr thisobj, UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError);
		public UInt32 GetAppUpdateStats(UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppUpdateStats>(this.Functions.GetAppUpdateStats); return call(this.ObjectAddress, uAppId, eSteamAppUpdateStatsQueryType, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetTotalUpdateStats(IntPtr thisobj, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError);
		public Int32 GetTotalUpdateStats(ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetTotalUpdateStats>(this.Functions.GetTotalUpdateStats); return call(this.ObjectAddress, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateCachePreloaders(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 CreateCachePreloaders(ref TSTeamError pError) { var call = this.GetFunction<NativeCreateCachePreloaders>(this.Functions.CreateCachePreloaders); return call(this.ObjectAddress, ref pError); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam005VTable
	{
		public IntPtr ChangePassword;
		public IntPtr GetCurrentEmailAddress;
		public IntPtr ChangePersonalQA;
		public IntPtr ChangeEmailAddress;
		public IntPtr VerifyEmailAddress;
		public IntPtr RequestEmailAddressVerificationEmail;
		public IntPtr ChangeAccountName;
		public IntPtr MountAppFilesystem;
		public IntPtr UnmountAppFilesystem;
		public IntPtr MountFilesystem;
		public IntPtr UnmountFilesystem;
		public IntPtr Stat;
		public IntPtr SetvBuf;
		public IntPtr FlushFile;
		public IntPtr OpenFile;
		public IntPtr OpenFileEx;
		public IntPtr OpenTmpFile;
		public IntPtr ClearError;
		public IntPtr GetVersion;
		public IntPtr GetOfflineStatus;
		public IntPtr ChangeOfflineStatus;
		public IntPtr ProcessCall;
		public IntPtr AbortCall;
		public IntPtr BlockingCall;
		public IntPtr SetMaxStallCount;
		public IntPtr CloseFile;
		public IntPtr ReadFile;
		public IntPtr WriteFile;
		public IntPtr Getc;
		public IntPtr Putc;
		public IntPtr SeekFile;
		public IntPtr TellFile;
		public IntPtr SizeFile;
		public IntPtr FindFirst;
		public IntPtr FindNext;
		public IntPtr FindClose;
		public IntPtr GetLocalFileCopy;
		public IntPtr IsFileImmediatelyAvailable;
		public IntPtr HintResourceNeed;
		public IntPtr ForgetAllHints;
		public IntPtr PauseCachePreloading;
		public IntPtr ResumeCachePreloading;
		public IntPtr WaitForResources;
		public IntPtr StartEngine;
		public IntPtr ShutdownEngine;
		public IntPtr Startup;
		public IntPtr Cleanup;
		public IntPtr NumAppsRunning;
		public IntPtr CreateAccount;
		public IntPtr GenerateSuggestedAccountNames;
		public IntPtr IsLoggedIn;
		public IntPtr Logout;
		public IntPtr IsSecureComputer;
		public IntPtr CreateLogContext;
		public IntPtr Log;
		public IntPtr LogResourceLoadStarted;
		public IntPtr LogResourceLoadFinished;
		public IntPtr RefreshLogin;
		public IntPtr VerifyPassword;
		public IntPtr GetUserType;
		public IntPtr GetAppStats;
		public IntPtr IsAccountNameInUse;
		public IntPtr GetAppIds;
		public IntPtr GetSubscriptionStats;
		public IntPtr RefreshAccountInfo;
		public IntPtr Subscribe;
		public IntPtr Unsubscribe;
		public IntPtr GetSubscriptionReceipt;
		public IntPtr GetAccountStatus;
		public IntPtr SetUser;
		public IntPtr GetUser;
		public IntPtr Login;
		public IntPtr AckSubscriptionReceipt;
		public IntPtr IsAppSubscribed;
		public IntPtr GetSubscriptionIds;
		public IntPtr EnumerateSubscription;
		public IntPtr EnumerateSubscriptionDiscount;
		public IntPtr EnumerateSubscriptionDiscountQualifier;
		public IntPtr EnumerateApp;
		public IntPtr EnumerateAppLaunchOption;
		public IntPtr DeleteAccount;
		public IntPtr EnumerateAppIcon;
		public IntPtr LaunchApp;
		public IntPtr GetCacheFilePath;
		public IntPtr EnumerateAppVersion;
		public IntPtr EnumerateAppDependency;
		public IntPtr StartLoadingCache;
		public IntPtr InsertAppDependency;
		public IntPtr RemoveAppDependency;
		public IntPtr FindApp;
		public IntPtr GetAppDependencies;
		public IntPtr IsSubscribed;
		public IntPtr GetAppUserDefinedInfo;
		public IntPtr WaitForAppReadyToLaunch;
		public IntPtr IsCacheLoadingEnabled;
		public IntPtr StopLoadingCache;
		public IntPtr GetEncryptedUserIDTicket;
		public IntPtr FlushCache;
		public IntPtr RepairOrDecryptCaches;
		public IntPtr LoadCacheFromDir;
		public IntPtr GetCacheDefaultDirectory;
		public IntPtr SetCacheDefaultDirectory;
		public IntPtr GetAppDir;
		public IntPtr MoveApp;
		public IntPtr GetAppCacheSize;
		public IntPtr SetAppCacheSize;
		public IntPtr SetAppVersion;
		public IntPtr Uninstall;
		public IntPtr SetNotificationCallback;
		public IntPtr ChangeForgottenPassword;
		public IntPtr RequestForgottenPasswordEmail;
		public IntPtr RequestAccountsByEmailAddressEmail;
		public IntPtr RequestAccountsByCdKeyEmail;
		public IntPtr GetNumAccountsWithEmailAddress;
		public IntPtr UpdateAccountBillingInfo;
		public IntPtr UpdateSubscriptionBillingInfo;
		public IntPtr GetSponsorUrl;
		public IntPtr GetContentServerInfo;
		public IntPtr GetAppUpdateStats;
		public IntPtr GetTotalUpdateStats;
		public IntPtr CreateCachePreloaders;
		public IntPtr Win32SetMiniDumpComment;
		public IntPtr Win32SetMiniDumpSourceControlId;
		public IntPtr Win32SetMiniDumpEnableFullMemory;
		public IntPtr Win32WriteMiniDump;
		public IntPtr GetCurrentAppId;
		public IntPtr GetAppPurchaseCountry;
		public IntPtr GetLocalClientVersion;
		public IntPtr IsFileNeededByCache;
		public IntPtr LoadFileToCache;
		public IntPtr GetCacheDecryptionKey;
		public IntPtr GetSubscriptionExtendedInfo;
		public IntPtr GetSubscriptionPurchaseCountry;
		public IntPtr GetAppUserDefinedRecord;
	}
	
	public class ISteam005 : NativeWrapper<ISteam005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePassword(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPassphrase, ref TSTeamError pError);
		public UInt32 ChangePassword(string cszCurrentPassphrase, string cszNewPassphrase, ref TSTeamError pError) { var call = this.GetFunction<NativeChangePassword>(this.Functions.ChangePassword); return call(this.ObjectAddress, cszCurrentPassphrase, cszNewPassphrase, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentEmailAddress(IntPtr thisobj, string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSTeamError pError);
		public Int32 GetCurrentEmailAddress(string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCurrentEmailAddress>(this.Functions.GetCurrentEmailAddress); return call(this.ObjectAddress, szEmailaddress, uBufSize, ref puEmailaddressChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePersonalQA(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSTeamError pError);
		public UInt32 ChangePersonalQA(string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSTeamError pError) { var call = this.GetFunction<NativeChangePersonalQA>(this.Functions.ChangePersonalQA); return call(this.ObjectAddress, cszCurrentPassphrase, cszNewPersonalQuestion, cszNewAnswerToQuestion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeEmailAddress(IntPtr thisobj, string cszNewEmailAddress, ref TSTeamError pError);
		public UInt32 ChangeEmailAddress(string cszNewEmailAddress, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeEmailAddress>(this.Functions.ChangeEmailAddress); return call(this.ObjectAddress, cszNewEmailAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeVerifyEmailAddress(IntPtr thisobj, string cszEmailAddress, ref TSTeamError pError);
		public UInt32 VerifyEmailAddress(string cszEmailAddress, ref TSTeamError pError) { var call = this.GetFunction<NativeVerifyEmailAddress>(this.Functions.VerifyEmailAddress); return call(this.ObjectAddress, cszEmailAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestEmailAddressVerificationEmail(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 RequestEmailAddressVerificationEmail(ref TSTeamError pError) { var call = this.GetFunction<NativeRequestEmailAddressVerificationEmail>(this.Functions.RequestEmailAddressVerificationEmail); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeAccountName(IntPtr thisobj, string cszCurrentAccountName, string cszNewAccountName, ref TSTeamError pError);
		public UInt32 ChangeAccountName(string cszCurrentAccountName, string cszNewAccountName, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeAccountName>(this.Functions.ChangeAccountName); return call(this.ObjectAddress, cszCurrentAccountName, cszNewAccountName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountAppFilesystem(IntPtr thisobj, ref TSTeamError pError);
		public Int32 MountAppFilesystem(ref TSTeamError pError) { var call = this.GetFunction<NativeMountAppFilesystem>(this.Functions.MountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountAppFilesystem(IntPtr thisobj, ref TSTeamError pError);
		public Int32 UnmountAppFilesystem(ref TSTeamError pError) { var call = this.GetFunction<NativeUnmountAppFilesystem>(this.Functions.UnmountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountFilesystem(IntPtr thisobj, UInt32 uAppId, string szMountPath, ref TSTeamError pError);
		public Int32 MountFilesystem(UInt32 uAppId, string szMountPath, ref TSTeamError pError) { var call = this.GetFunction<NativeMountFilesystem>(this.Functions.MountFilesystem); return call(this.ObjectAddress, uAppId, szMountPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountFilesystem(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public Int32 UnmountFilesystem(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeUnmountFilesystem>(this.Functions.UnmountFilesystem); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStat(IntPtr thisobj, string cszName, ref TSteamElemInfo pInfo, ref TSTeamError pError);
		public Int32 Stat(string cszName, ref TSteamElemInfo pInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeStat>(this.Functions.Stat); return call(this.ObjectAddress, cszName, ref pInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetvBuf(IntPtr thisobj, UInt32 hFile, IntPtr pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSTeamError pError);
		public Int32 SetvBuf(UInt32 hFile, IntPtr pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSTeamError pError) { var call = this.GetFunction<NativeSetvBuf>(this.Functions.SetvBuf); return call(this.ObjectAddress, hFile, pBuf, eMethod, uBytes, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFlushFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 FlushFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeFlushFile>(this.Functions.FlushFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFile(IntPtr thisobj, string cszName, string cszMode, ref TSTeamError pError);
		public UInt32 OpenFile(string cszName, string cszMode, ref TSTeamError pError) { var call = this.GetFunction<NativeOpenFile>(this.Functions.OpenFile); return call(this.ObjectAddress, cszName, cszMode, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFileEx(IntPtr thisobj, string cszFileName, string cszMode, ref UInt32 puSize, ref TSTeamError pError);
		public UInt32 OpenFileEx(string cszFileName, string cszMode, ref UInt32 puSize, ref TSTeamError pError) { var call = this.GetFunction<NativeOpenFileEx>(this.Functions.OpenFileEx); return call(this.ObjectAddress, cszFileName, cszMode, ref puSize, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenTmpFile(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 OpenTmpFile(ref TSTeamError pError) { var call = this.GetFunction<NativeOpenTmpFile>(this.Functions.OpenTmpFile); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearError(IntPtr thisobj, ref TSTeamError pError);
		public void ClearError(ref TSTeamError pError) { var call = this.GetFunction<NativeClearError>(this.Functions.ClearError); call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetVersion(IntPtr thisobj, string szVersion, UInt32 uVersionBufSize);
		public Int32 GetVersion(string szVersion, UInt32 uVersionBufSize) { var call = this.GetFunction<NativeGetVersion>(this.Functions.GetVersion); return call(this.ObjectAddress, szVersion, uVersionBufSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError);
		public Int32 GetOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError) { var call = this.GetFunction<NativeGetOfflineStatus>(this.Functions.GetOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeChangeOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError);
		public Int32 ChangeOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeOfflineStatus>(this.Functions.ChangeOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeProcessCall(IntPtr thisobj, UInt32 handle, ref TSteamProgress pProgress, ref TSTeamError pError);
		public Int32 ProcessCall(UInt32 handle, ref TSteamProgress pProgress, ref TSTeamError pError) { var call = this.GetFunction<NativeProcessCall>(this.Functions.ProcessCall); return call(this.ObjectAddress, handle, ref pProgress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAbortCall(IntPtr thisobj, UInt32 handle, ref TSTeamError pError);
		public Int32 AbortCall(UInt32 handle, ref TSTeamError pError) { var call = this.GetFunction<NativeAbortCall>(this.Functions.AbortCall); return call(this.ObjectAddress, handle, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeBlockingCall(IntPtr thisobj, UInt32 handle, UInt32 uiProcessTickMS, ref TSTeamError pError);
		public Int32 BlockingCall(UInt32 handle, UInt32 uiProcessTickMS, ref TSTeamError pError) { var call = this.GetFunction<NativeBlockingCall>(this.Functions.BlockingCall); return call(this.ObjectAddress, handle, uiProcessTickMS, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetMaxStallCount(IntPtr thisobj, UInt32 uNumStalls, ref TSTeamError pError);
		public Int32 SetMaxStallCount(UInt32 uNumStalls, ref TSTeamError pError) { var call = this.GetFunction<NativeSetMaxStallCount>(this.Functions.SetMaxStallCount); return call(this.ObjectAddress, uNumStalls, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCloseFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 CloseFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeCloseFile>(this.Functions.CloseFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeReadFile(IntPtr thisobj, IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError);
		public UInt32 ReadFile(IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeReadFile>(this.Functions.ReadFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWriteFile(IntPtr thisobj, IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError);
		public UInt32 WriteFile(IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeWriteFile>(this.Functions.WriteFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetc(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 Getc(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeGetc>(this.Functions.Getc); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePutc(IntPtr thisobj, Int32 cChar, UInt32 hFile, ref TSTeamError pError);
		public Int32 Putc(Int32 cChar, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativePutc>(this.Functions.Putc); return call(this.ObjectAddress, cChar, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSeekFile(IntPtr thisobj, UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSTeamError pError);
		public Int32 SeekFile(UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSTeamError pError) { var call = this.GetFunction<NativeSeekFile>(this.Functions.SeekFile); return call(this.ObjectAddress, hFile, lOffset, sm, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeTellFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 TellFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeTellFile>(this.Functions.TellFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSizeFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 SizeFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeSizeFile>(this.Functions.SizeFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFindFirst(IntPtr thisobj, string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSTeamError pError);
		public UInt32 FindFirst(string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeFindFirst>(this.Functions.FindFirst); return call(this.ObjectAddress, cszPattern, eFilter, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindNext(IntPtr thisobj, UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSTeamError pError);
		public Int32 FindNext(UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeFindNext>(this.Functions.FindNext); return call(this.ObjectAddress, hFind, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindClose(IntPtr thisobj, UInt32 hFind, ref TSTeamError pError);
		public Int32 FindClose(UInt32 hFind, ref TSTeamError pError) { var call = this.GetFunction<NativeFindClose>(this.Functions.FindClose); return call(this.ObjectAddress, hFind, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalFileCopy(IntPtr thisobj, string cszName, ref TSTeamError pError);
		public Int32 GetLocalFileCopy(string cszName, ref TSTeamError pError) { var call = this.GetFunction<NativeGetLocalFileCopy>(this.Functions.GetLocalFileCopy); return call(this.ObjectAddress, cszName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileImmediatelyAvailable(IntPtr thisobj, string cszName, ref TSTeamError pError);
		public Int32 IsFileImmediatelyAvailable(string cszName, ref TSTeamError pError) { var call = this.GetFunction<NativeIsFileImmediatelyAvailable>(this.Functions.IsFileImmediatelyAvailable); return call(this.ObjectAddress, cszName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeHintResourceNeed(IntPtr thisobj, string cszHintList, Int32 bForgetEverything, ref TSTeamError pError);
		public Int32 HintResourceNeed(string cszHintList, Int32 bForgetEverything, ref TSTeamError pError) { var call = this.GetFunction<NativeHintResourceNeed>(this.Functions.HintResourceNeed); return call(this.ObjectAddress, cszHintList, bForgetEverything, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeForgetAllHints(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ForgetAllHints(ref TSTeamError pError) { var call = this.GetFunction<NativeForgetAllHints>(this.Functions.ForgetAllHints); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePauseCachePreloading(IntPtr thisobj, ref TSTeamError pError);
		public Int32 PauseCachePreloading(ref TSTeamError pError) { var call = this.GetFunction<NativePauseCachePreloading>(this.Functions.PauseCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResumeCachePreloading(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ResumeCachePreloading(ref TSTeamError pError) { var call = this.GetFunction<NativeResumeCachePreloading>(this.Functions.ResumeCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForResources(IntPtr thisobj, string cszMasterList, ref TSTeamError pError);
		public UInt32 WaitForResources(string cszMasterList, ref TSTeamError pError) { var call = this.GetFunction<NativeWaitForResources>(this.Functions.WaitForResources); return call(this.ObjectAddress, cszMasterList, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartEngine(IntPtr thisobj, ref TSTeamError pError);
		public Int32 StartEngine(ref TSTeamError pError) { var call = this.GetFunction<NativeStartEngine>(this.Functions.StartEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeShutdownEngine(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ShutdownEngine(ref TSTeamError pError) { var call = this.GetFunction<NativeShutdownEngine>(this.Functions.ShutdownEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartup(IntPtr thisobj, UInt32 uUsingMask, ref TSTeamError pError);
		public Int32 Startup(UInt32 uUsingMask, ref TSTeamError pError) { var call = this.GetFunction<NativeStartup>(this.Functions.Startup); return call(this.ObjectAddress, uUsingMask, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCleanup(IntPtr thisobj, ref TSTeamError pError);
		public Int32 Cleanup(ref TSTeamError pError) { var call = this.GetFunction<NativeCleanup>(this.Functions.Cleanup); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNumAppsRunning(IntPtr thisobj, ref TSTeamError pError);
		public Int32 NumAppsRunning(ref TSTeamError pError) { var call = this.GetFunction<NativeNumAppsRunning>(this.Functions.NumAppsRunning); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateAccount(IntPtr thisobj, string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSTeamError pError);
		public UInt32 CreateAccount(string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSTeamError pError) { var call = this.GetFunction<NativeCreateAccount>(this.Functions.CreateAccount); return call(this.ObjectAddress, cszUser, cszPassphrase, cszCreationKey, cszPersonalQuestion, cszAnswerToQuestion, cszArg6, ref pbCreated, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGenerateSuggestedAccountNames(IntPtr thisobj, string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSTeamError pError);
		public UInt32 GenerateSuggestedAccountNames(string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeGenerateSuggestedAccountNames>(this.Functions.GenerateSuggestedAccountNames); return call(this.ObjectAddress, cszArg1, cszArg2, szArg3, uArg4, ref puArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsLoggedIn(IntPtr thisobj, ref Int32 pbIsLoggedIn, ref TSTeamError pError);
		public Int32 IsLoggedIn(ref Int32 pbIsLoggedIn, ref TSTeamError pError) { var call = this.GetFunction<NativeIsLoggedIn>(this.Functions.IsLoggedIn); return call(this.ObjectAddress, ref pbIsLoggedIn, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogout(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 Logout(ref TSTeamError pError) { var call = this.GetFunction<NativeLogout>(this.Functions.Logout); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSecureComputer(IntPtr thisobj, ref Int32 pbIsSecure, ref TSTeamError pError);
		public Int32 IsSecureComputer(ref Int32 pbIsSecure, ref TSTeamError pError) { var call = this.GetFunction<NativeIsSecureComputer>(this.Functions.IsSecureComputer); return call(this.ObjectAddress, ref pbIsSecure, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateLogContext(IntPtr thisobj, string cszName);
		public UInt32 CreateLogContext(string cszName) { var call = this.GetFunction<NativeCreateLogContext>(this.Functions.CreateLogContext); return call(this.ObjectAddress, cszName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLog(IntPtr thisobj, UInt32 hContext, string cszMsg);
		public Int32 Log(UInt32 hContext, string cszMsg) { var call = this.GetFunction<NativeLog>(this.Functions.Log); return call(this.ObjectAddress, hContext, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadStarted(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadStarted(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadStarted>(this.Functions.LogResourceLoadStarted); call(this.ObjectAddress, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadFinished(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadFinished(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadFinished>(this.Functions.LogResourceLoadFinished); call(this.ObjectAddress, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshLogin(IntPtr thisobj, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError);
		public UInt32 RefreshLogin(string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError) { var call = this.GetFunction<NativeRefreshLogin>(this.Functions.RefreshLogin); return call(this.ObjectAddress, cszPassphrase, bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeVerifyPassword(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSTeamError pError);
		public Int32 VerifyPassword(string cszArg1, ref Int32 piArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeVerifyPassword>(this.Functions.VerifyPassword); return call(this.ObjectAddress, cszArg1, ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserType(IntPtr thisobj, ref UInt32 puArg1, ref TSTeamError pError);
		public Int32 GetUserType(ref UInt32 puArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeGetUserType>(this.Functions.GetUserType); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppStats(IntPtr thisobj, ref TSteamAppStats pAppStats, ref TSTeamError pError);
		public Int32 GetAppStats(ref TSteamAppStats pAppStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppStats>(this.Functions.GetAppStats); return call(this.ObjectAddress, ref pAppStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeIsAccountNameInUse(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSTeamError pError);
		public UInt32 IsAccountNameInUse(string cszArg1, ref Int32 piArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeIsAccountNameInUse>(this.Functions.IsAccountNameInUse); return call(this.ObjectAddress, cszArg1, ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError);
		public Int32 GetAppIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppIds>(this.Functions.GetAppIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionStats(IntPtr thisobj, ref TSteamSubscriptionStats pSubscriptionStats, ref TSTeamError pError);
		public Int32 GetSubscriptionStats(ref TSteamSubscriptionStats pSubscriptionStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionStats>(this.Functions.GetSubscriptionStats); return call(this.ObjectAddress, ref pSubscriptionStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshAccountInfo(IntPtr thisobj, Int32 arg1, ref TSTeamError pError);
		public UInt32 RefreshAccountInfo(Int32 arg1, ref TSTeamError pError) { var call = this.GetFunction<NativeRefreshAccountInfo>(this.Functions.RefreshAccountInfo); return call(this.ObjectAddress, arg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError);
		public UInt32 Subscribe(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeSubscribe>(this.Functions.Subscribe); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUnsubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSTeamError pError);
		public UInt32 Unsubscribe(UInt32 uSubscriptionId, ref TSTeamError pError) { var call = this.GetFunction<NativeUnsubscribe>(this.Functions.Unsubscribe); return call(this.ObjectAddress, uSubscriptionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionReceipt(IntPtr thisobj, UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSTeamError pError);
		public Int32 GetSubscriptionReceipt(UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionReceipt>(this.Functions.GetSubscriptionReceipt); return call(this.ObjectAddress, arg1, ref pSteamSubscriptionReceipt, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAccountStatus(IntPtr thisobj, ref UInt32 puArg1, ref TSTeamError pError);
		public Int32 GetAccountStatus(ref UInt32 puArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAccountStatus>(this.Functions.GetAccountStatus); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetUser(IntPtr thisobj, string cszUser, ref Int32 pbUserSet, ref TSTeamError pError);
		public UInt32 SetUser(string cszUser, ref Int32 pbUserSet, ref TSTeamError pError) { var call = this.GetFunction<NativeSetUser>(this.Functions.SetUser); return call(this.ObjectAddress, cszUser, ref pbUserSet, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUser(IntPtr thisobj, string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSTeamError pError);
		public Int32 GetUser(string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSTeamError pError) { var call = this.GetFunction<NativeGetUser>(this.Functions.GetUser); return call(this.ObjectAddress, szUser, uBufSize, ref puUserChars, ref pSteamGlobalUserID, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogin(IntPtr thisobj, string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError);
		public UInt32 Login(string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError) { var call = this.GetFunction<NativeLogin>(this.Functions.Login); return call(this.ObjectAddress, cszUser, cszPassphrase, bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeAckSubscriptionReceipt(IntPtr thisobj, UInt32 uArg1, ref TSTeamError pError);
		public UInt32 AckSubscriptionReceipt(UInt32 uArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeAckSubscriptionReceipt>(this.Functions.AckSubscriptionReceipt); return call(this.ObjectAddress, uArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsAppSubscribed(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSTeamError pError);
		public Int32 IsAppSubscribed(UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSTeamError pError) { var call = this.GetFunction<NativeIsAppSubscribed>(this.Functions.IsAppSubscribed); return call(this.ObjectAddress, uAppId, ref pbIsAppSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError);
		public Int32 GetSubscriptionIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionIds>(this.Functions.GetSubscriptionIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscription(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSTeamError pError);
		public Int32 EnumerateSubscription(UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscription>(this.Functions.EnumerateSubscription); return call(this.ObjectAddress, uSubscriptionId, ref pSubscription, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscount(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSTeamError pError);
		public Int32 EnumerateSubscriptionDiscount(UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscount>(this.Functions.EnumerateSubscriptionDiscount); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, ref pSteamSubscriptionDiscount, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscountQualifier(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSTeamError pError);
		public Int32 EnumerateSubscriptionDiscountQualifier(UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscountQualifier>(this.Functions.EnumerateSubscriptionDiscountQualifier); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, uQualifierIdx, ref pSteamDiscountQualifier, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateApp(IntPtr thisobj, UInt32 uAppId, ref TSteamApp pApp, ref TSTeamError pError);
		public Int32 EnumerateApp(UInt32 uAppId, ref TSteamApp pApp, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateApp>(this.Functions.EnumerateApp); return call(this.ObjectAddress, uAppId, ref pApp, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppLaunchOption(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSTeamError pError);
		public Int32 EnumerateAppLaunchOption(UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppLaunchOption>(this.Functions.EnumerateAppLaunchOption); return call(this.ObjectAddress, uAppId, uLaunchOptionIndex, ref pLaunchOption, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeDeleteAccount(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 DeleteAccount(ref TSTeamError pError) { var call = this.GetFunction<NativeDeleteAccount>(this.Functions.DeleteAccount); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppIcon(IntPtr thisobj, UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSTeamError pError);
		public Int32 EnumerateAppIcon(UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppIcon>(this.Functions.EnumerateAppIcon); return call(this.ObjectAddress, uAppId, uIconIndex, pIconData, uIconDataBufSize, ref puSizeOfIconData, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLaunchApp(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSTeamError pError);
		public UInt32 LaunchApp(UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSTeamError pError) { var call = this.GetFunction<NativeLaunchApp>(this.Functions.LaunchApp); return call(this.ObjectAddress, uAppId, uLaunchOption, cszArgs, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheFilePath(IntPtr thisobj, UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetCacheFilePath(UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCacheFilePath>(this.Functions.GetCacheFilePath); return call(this.ObjectAddress, uAppId, szFilePath, uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSTeamError pError);
		public Int32 EnumerateAppVersion(UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppVersion>(this.Functions.EnumerateAppVersion); return call(this.ObjectAddress, uAppId, uVersionIndex, ref pAppVersion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppDependency(IntPtr thisobj, UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError);
		public Int32 EnumerateAppDependency(UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppDependency>(this.Functions.EnumerateAppDependency); return call(this.ObjectAddress, AppId, uDependency, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStartLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 StartLoadingCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeStartLoadingCache>(this.Functions.StartLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInsertAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError);
		public Int32 InsertAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeInsertAppDependency>(this.Functions.InsertAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRemoveAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSTeamError pError);
		public Int32 RemoveAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSTeamError pError) { var call = this.GetFunction<NativeRemoveAppDependency>(this.Functions.RemoveAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindApp(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public Int32 FindApp(string cszArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeFindApp>(this.Functions.FindApp); return call(this.ObjectAddress, cszArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDependencies(IntPtr thisobj, UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSTeamError pError);
		public Int32 GetAppDependencies(UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppDependencies>(this.Functions.GetAppDependencies); return call(this.ObjectAddress, uAppId, ref puDependecies, uBufferLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSubscribed(IntPtr thisobj, UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSTeamError pError);
		public Int32 IsSubscribed(UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSTeamError pError) { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress, uSubscriptionId, ref pbIsSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedInfo(IntPtr thisobj, UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSTeamError pError);
		public Int32 GetAppUserDefinedInfo(UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedInfo>(this.Functions.GetAppUserDefinedInfo); return call(this.ObjectAddress, uAppId, cszPropertyName, szPropertyValue, uBufSize, ref puPropertyValueLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForAppReadyToLaunch(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 WaitForAppReadyToLaunch(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeWaitForAppReadyToLaunch>(this.Functions.WaitForAppReadyToLaunch); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsCacheLoadingEnabled(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsLoading, ref TSTeamError pError);
		public Int32 IsCacheLoadingEnabled(UInt32 uAppId, ref Int32 pbIsLoading, ref TSTeamError pError) { var call = this.GetFunction<NativeIsCacheLoadingEnabled>(this.Functions.IsCacheLoadingEnabled); return call(this.ObjectAddress, uAppId, ref pbIsLoading, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStopLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 StopLoadingCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeStopLoadingCache>(this.Functions.StopLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamError NativeGetEncryptedUserIDTicket(IntPtr thisobj, IntPtr pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, IntPtr pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSTeamError pError);
		public ESteamError GetEncryptedUserIDTicket(IntPtr pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, IntPtr pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSTeamError pError) { var call = this.GetFunction<NativeGetEncryptedUserIDTicket>(this.Functions.GetEncryptedUserIDTicket); return call(this.ObjectAddress, pEncryptionKeyReceivedFromAppServer, uEncryptionKeyLength, pOutputBuffer, uSizeOfOutputBuffer, ref pReceiveSizeOfEncryptedTicket, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFlushCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 FlushCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeFlushCache>(this.Functions.FlushCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRepairOrDecryptCaches(IntPtr thisobj, UInt32 uAppId, Int32 iArg2, ref TSTeamError pError);
		public UInt32 RepairOrDecryptCaches(UInt32 uAppId, Int32 iArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeRepairOrDecryptCaches>(this.Functions.RepairOrDecryptCaches); return call(this.ObjectAddress, uAppId, iArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLoadCacheFromDir(IntPtr thisobj, UInt32 uAppId, string cszPath, ref TSTeamError pError);
		public UInt32 LoadCacheFromDir(UInt32 uAppId, string cszPath, ref TSTeamError pError) { var call = this.GetFunction<NativeLoadCacheFromDir>(this.Functions.LoadCacheFromDir); return call(this.ObjectAddress, uAppId, cszPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDefaultDirectory(IntPtr thisobj, string szPath, ref TSTeamError pError);
		public Int32 GetCacheDefaultDirectory(string szPath, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCacheDefaultDirectory>(this.Functions.GetCacheDefaultDirectory); return call(this.ObjectAddress, szPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCacheDefaultDirectory(IntPtr thisobj, string cszPath, ref TSTeamError pError);
		public Int32 SetCacheDefaultDirectory(string cszPath, ref TSTeamError pError) { var call = this.GetFunction<NativeSetCacheDefaultDirectory>(this.Functions.SetCacheDefaultDirectory); return call(this.ObjectAddress, cszPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDir(IntPtr thisobj, UInt32 uAppId, string szAppDir, ref TSTeamError pError);
		public Int32 GetAppDir(UInt32 uAppId, string szAppDir, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppDir>(this.Functions.GetAppDir); return call(this.ObjectAddress, uAppId, szAppDir, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeMoveApp(IntPtr thisobj, UInt32 uAppId, string szPath, ref TSTeamError pError);
		public UInt32 MoveApp(UInt32 uAppId, string szPath, ref TSTeamError pError) { var call = this.GetFunction<NativeMoveApp>(this.Functions.MoveApp); return call(this.ObjectAddress, uAppId, szPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppCacheSize(IntPtr thisobj, UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSTeamError pError);
		public UInt32 GetAppCacheSize(UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppCacheSize>(this.Functions.GetAppCacheSize); return call(this.ObjectAddress, uAppId, ref puCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppCacheSize(IntPtr thisobj, UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSTeamError pError);
		public UInt32 SetAppCacheSize(UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSTeamError pError) { var call = this.GetFunction<NativeSetAppCacheSize>(this.Functions.SetAppCacheSize); return call(this.ObjectAddress, uAppId, uCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uAppVersionId, ref TSTeamError pError);
		public UInt32 SetAppVersion(UInt32 uAppId, UInt32 uAppVersionId, ref TSTeamError pError) { var call = this.GetFunction<NativeSetAppVersion>(this.Functions.SetAppVersion); return call(this.ObjectAddress, uAppId, uAppVersionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUninstall(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 Uninstall(ref TSTeamError pError) { var call = this.GetFunction<NativeUninstall>(this.Functions.Uninstall); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetNotificationCallback(IntPtr thisobj, ref IntPtr pCallbackFunction, ref TSTeamError pError);
		public Int32 SetNotificationCallback(ref IntPtr pCallbackFunction, ref TSTeamError pError) { var call = this.GetFunction<NativeSetNotificationCallback>(this.Functions.SetNotificationCallback); return call(this.ObjectAddress, ref pCallbackFunction, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeForgottenPassword(IntPtr thisobj, string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSTeamError pError);
		public UInt32 ChangeForgottenPassword(string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeForgottenPassword>(this.Functions.ChangeForgottenPassword); return call(this.ObjectAddress, cszArg1, cszArg2, cszArg3, cszArg4, ref piArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestForgottenPasswordEmail(IntPtr thisobj, string cszArg1, string szArg2, ref TSTeamError pError);
		public UInt32 RequestForgottenPasswordEmail(string cszArg1, string szArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestForgottenPasswordEmail>(this.Functions.RequestForgottenPasswordEmail); return call(this.ObjectAddress, cszArg1, szArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByEmailAddressEmail(IntPtr thisobj, string cszArg1, ref TSTeamError pError);
		public UInt32 RequestAccountsByEmailAddressEmail(string cszArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestAccountsByEmailAddressEmail>(this.Functions.RequestAccountsByEmailAddressEmail); return call(this.ObjectAddress, cszArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByCdKeyEmail(IntPtr thisobj, string cszArg1, ref TSTeamError pError);
		public UInt32 RequestAccountsByCdKeyEmail(string cszArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestAccountsByCdKeyEmail>(this.Functions.RequestAccountsByCdKeyEmail); return call(this.ObjectAddress, cszArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAccountsWithEmailAddress(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public UInt32 GetNumAccountsWithEmailAddress(string cszArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeGetNumAccountsWithEmailAddress>(this.Functions.GetNumAccountsWithEmailAddress); return call(this.ObjectAddress, cszArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateAccountBillingInfo(IntPtr thisobj, ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSTeamError pError);
		public UInt32 UpdateAccountBillingInfo(ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeUpdateAccountBillingInfo>(this.Functions.UpdateAccountBillingInfo); return call(this.ObjectAddress, ref pPaymentCardInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateSubscriptionBillingInfo(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError);
		public UInt32 UpdateSubscriptionBillingInfo(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeUpdateSubscriptionBillingInfo>(this.Functions.UpdateSubscriptionBillingInfo); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSponsorUrl(IntPtr thisobj, UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSTeamError pError);
		public Int32 GetSponsorUrl(UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSponsorUrl>(this.Functions.GetSponsorUrl); return call(this.ObjectAddress, uAppId, szUrl, uBufSize, ref pUrlChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetContentServerInfo(IntPtr thisobj, UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSTeamError pError);
		public Int32 GetContentServerInfo(UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSTeamError pError) { var call = this.GetFunction<NativeGetContentServerInfo>(this.Functions.GetContentServerInfo); return call(this.ObjectAddress, uArg1, ref puArg2, ref puArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppUpdateStats(IntPtr thisobj, UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError);
		public UInt32 GetAppUpdateStats(UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppUpdateStats>(this.Functions.GetAppUpdateStats); return call(this.ObjectAddress, uAppId, eSteamAppUpdateStatsQueryType, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetTotalUpdateStats(IntPtr thisobj, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError);
		public Int32 GetTotalUpdateStats(ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetTotalUpdateStats>(this.Functions.GetTotalUpdateStats); return call(this.ObjectAddress, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateCachePreloaders(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 CreateCachePreloaders(ref TSTeamError pError) { var call = this.GetFunction<NativeCreateCachePreloaders>(this.Functions.CreateCachePreloaders); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpComment(IntPtr thisobj, string cszComment);
		public void Win32SetMiniDumpComment(string cszComment) { var call = this.GetFunction<NativeWin32SetMiniDumpComment>(this.Functions.Win32SetMiniDumpComment); call(this.ObjectAddress, cszComment); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpSourceControlId(IntPtr thisobj, UInt32 uSourceControlId);
		public void Win32SetMiniDumpSourceControlId(UInt32 uSourceControlId) { var call = this.GetFunction<NativeWin32SetMiniDumpSourceControlId>(this.Functions.Win32SetMiniDumpSourceControlId); call(this.ObjectAddress, uSourceControlId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpEnableFullMemory(IntPtr thisobj);
		public void Win32SetMiniDumpEnableFullMemory() { var call = this.GetFunction<NativeWin32SetMiniDumpEnableFullMemory>(this.Functions.Win32SetMiniDumpEnableFullMemory); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32WriteMiniDump(IntPtr thisobj, string arg1, string arg2, string arg3, string arg4, UInt32 arg5);
		public void Win32WriteMiniDump(string arg1, string arg2, string arg3, string arg4, UInt32 arg5) { var call = this.GetFunction<NativeWin32WriteMiniDump>(this.Functions.Win32WriteMiniDump); call(this.ObjectAddress, arg1, arg2, arg3, arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentAppId(IntPtr thisobj, ref UInt32 puAppId, ref TSTeamError pError);
		public Int32 GetCurrentAppId(ref UInt32 puAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCurrentAppId>(this.Functions.GetCurrentAppId); return call(this.ObjectAddress, ref puAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppPurchaseCountry(IntPtr thisobj, UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetAppPurchaseCountry(UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppPurchaseCountry>(this.Functions.GetAppPurchaseCountry); return call(this.ObjectAddress, uAppId, szCountryCode, uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalClientVersion(IntPtr thisobj, ref UInt32 puArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public Int32 GetLocalClientVersion(ref UInt32 puArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeGetLocalClientVersion>(this.Functions.GetLocalClientVersion); return call(this.ObjectAddress, ref puArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileNeededByCache(IntPtr thisobj, UInt32 uArg1, string cszFileName, UInt32 uArg3, ref TSTeamError pError);
		public Int32 IsFileNeededByCache(UInt32 uArg1, string cszFileName, UInt32 uArg3, ref TSTeamError pError) { var call = this.GetFunction<NativeIsFileNeededByCache>(this.Functions.IsFileNeededByCache); return call(this.ObjectAddress, uArg1, cszFileName, uArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLoadFileToCache(IntPtr thisobj, UInt32 uArg1, string cszArg2, IntPtr pcvArg3, UInt32 uArg4, UInt32 uArg5, ref TSTeamError pError);
		public Int32 LoadFileToCache(UInt32 uArg1, string cszArg2, IntPtr pcvArg3, UInt32 uArg4, UInt32 uArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeLoadFileToCache>(this.Functions.LoadFileToCache); return call(this.ObjectAddress, uArg1, cszArg2, pcvArg3, uArg4, uArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDecryptionKey(IntPtr thisobj, UInt32 uAppId, string szCacheDecryptionKey, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetCacheDecryptionKey(UInt32 uAppId, string szCacheDecryptionKey, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCacheDecryptionKey>(this.Functions.GetCacheDecryptionKey); return call(this.ObjectAddress, uAppId, szCacheDecryptionKey, uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionExtendedInfo(IntPtr thisobj, UInt32 uSubscritptionId, string cszKeyName, string szKeyValue, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetSubscriptionExtendedInfo(UInt32 uSubscritptionId, string cszKeyName, string szKeyValue, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionExtendedInfo>(this.Functions.GetSubscriptionExtendedInfo); return call(this.ObjectAddress, uSubscritptionId, cszKeyName, szKeyValue, uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionPurchaseCountry(IntPtr thisobj, UInt32 uSubscritptionId, string szCountry, UInt32 arg3, ref Int32 piRecievedLength, ref TSTeamError pError);
		public Int32 GetSubscriptionPurchaseCountry(UInt32 uSubscritptionId, string szCountry, UInt32 arg3, ref Int32 piRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionPurchaseCountry>(this.Functions.GetSubscriptionPurchaseCountry); return call(this.ObjectAddress, uSubscritptionId, szCountry, arg3, ref piRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedRecord(IntPtr thisobj, UInt32 uAppId, ref IntPtr AddEntryToKeyValueFunc, IntPtr pvCKeyValue, ref TSTeamError pError);
		public Int32 GetAppUserDefinedRecord(UInt32 uAppId, ref IntPtr AddEntryToKeyValueFunc, IntPtr pvCKeyValue, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedRecord>(this.Functions.GetAppUserDefinedRecord); return call(this.ObjectAddress, uAppId, ref AddEntryToKeyValueFunc, pvCKeyValue, ref pError); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam2Bridge002VTable
	{
		public IntPtr SetSteam2Ticket;
		public IntPtr SetAccountName;
		public IntPtr SetPassword;
		public IntPtr SetAccountCreationTime;
		public IntPtr CreateProcess;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetIPCountry;
		public IntPtr GetNumLicenses;
		public IntPtr GetLicensePackageID;
		public IntPtr GetLicenseTimeCreated;
		public IntPtr GetLicenseTimeNextProcess;
		public IntPtr GetLicenseMinuteLimit;
		public IntPtr GetLicenseMinutesUsed;
		public IntPtr GetLicensePaymentMethod;
		public IntPtr GetLicenseFlags;
		public IntPtr GetLicensePurchaseCountryCode;
		public IntPtr SetOfflineMode;
		public IntPtr GetCurrentSessionToken;
		public IntPtr SetCellID;
		public IntPtr SetSteam2FullASTicket;
		public IntPtr UpdateAppOwnershipTicket;
		public IntPtr GetAppOwnershipTicketLength;
		public IntPtr GetAppOwnershipTicketData;
		public IntPtr GetAppDecryptionKey;
	}
	
	public class ISteam2Bridge002 : NativeWrapper<ISteam2Bridge002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetSteam2Ticket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public Int32 SetSteam2Ticket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2Ticket>(this.Functions.SetSteam2Ticket); return call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAccountName(IntPtr thisobj, string szName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAccountName(string szName) { var call = this.GetFunction<NativeSetAccountName>(this.Functions.SetAccountName); return call(this.ObjectAddress, szName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetPassword(IntPtr thisobj, string szPassword);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetPassword(string szPassword) { var call = this.GetFunction<NativeSetPassword>(this.Functions.SetPassword); return call(this.ObjectAddress, szPassword); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAccountCreationTime(IntPtr thisobj, UInt32 creationTime);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAccountCreationTime(UInt32 creationTime) { var call = this.GetFunction<NativeSetAccountCreationTime>(this.Functions.SetAccountCreationTime); return call(this.ObjectAddress, creationTime); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateProcess(IntPtr thisobj, IntPtr lpVACBlob, UInt32 cbVACBlob, string arg3, string arg4, UInt32 arg5, IntPtr arg6, string arg7, UInt32 arg8);
		public Int32 CreateProcess(IntPtr lpVACBlob, UInt32 cbVACBlob, string arg3, string arg4, UInt32 arg5, IntPtr arg6, string arg7, UInt32 arg8) { var call = this.GetFunction<NativeCreateProcess>(this.Functions.CreateProcess); return call(this.ObjectAddress, lpVACBlob, cbVACBlob, arg3, arg4, arg5, arg6, arg7, arg8); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumLicenses(IntPtr thisobj);
		public UInt32 GetNumLicenses() { var call = this.GetFunction<NativeGetNumLicenses>(this.Functions.GetNumLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicensePackageID(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicensePackageID(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePackageID>(this.Functions.GetLicensePackageID); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseTimeCreated(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseTimeCreated(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeCreated>(this.Functions.GetLicenseTimeCreated); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseTimeNextProcess(IntPtr thisobj, UInt32 licenseId);
		public Int32 GetLicenseTimeNextProcess(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeNextProcess>(this.Functions.GetLicenseTimeNextProcess); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinuteLimit(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinuteLimit(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinuteLimit>(this.Functions.GetLicenseMinuteLimit); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinutesUsed(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinutesUsed(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinutesUsed>(this.Functions.GetLicenseMinutesUsed); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetLicensePaymentMethod(IntPtr thisobj, UInt32 licenseId);
		public EPaymentMethod GetLicensePaymentMethod(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePaymentMethod>(this.Functions.GetLicensePaymentMethod); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELicenseFlags NativeGetLicenseFlags(IntPtr thisobj, UInt32 licenseId);
		public ELicenseFlags GetLicenseFlags(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseFlags>(this.Functions.GetLicenseFlags); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLicensePurchaseCountryCode(IntPtr thisobj, UInt32 licenseId);
		public string GetLicensePurchaseCountryCode(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePurchaseCountryCode>(this.Functions.GetLicensePurchaseCountryCode); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetOfflineMode(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool offlineMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetOfflineMode([MarshalAs(UnmanagedType.I1)] bool offlineMode) { var call = this.GetFunction<NativeSetOfflineMode>(this.Functions.SetOfflineMode); return call(this.ObjectAddress, offlineMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentSessionToken(IntPtr thisobj);
		public Int32 GetCurrentSessionToken() { var call = this.GetFunction<NativeGetCurrentSessionToken>(this.Functions.GetCurrentSessionToken); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCellID(IntPtr thisobj, UInt32 cellId);
		public Int32 SetCellID(UInt32 cellId) { var call = this.GetFunction<NativeSetCellID>(this.Functions.SetCellID); return call(this.ObjectAddress, cellId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetSteam2FullASTicket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public Int32 SetSteam2FullASTicket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2FullASTicket>(this.Functions.SetSteam2FullASTicket); return call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAppOwnershipTicket(IntPtr thisobj, UInt32 appId, [MarshalAs(UnmanagedType.I1)] bool arg2);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAppOwnershipTicket(UInt32 appId, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeUpdateAppOwnershipTicket>(this.Functions.UpdateAppOwnershipTicket); return call(this.ObjectAddress, appId, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppOwnershipTicketLength(IntPtr thisobj, UInt32 appId);
		public UInt32 GetAppOwnershipTicketLength(UInt32 appId) { var call = this.GetFunction<NativeGetAppOwnershipTicketLength>(this.Functions.GetAppOwnershipTicketLength); return call(this.ObjectAddress, appId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppOwnershipTicketData(IntPtr thisobj, UInt32 appId, IntPtr lpTicketData, UInt32 cubTicketData);
		public UInt32 GetAppOwnershipTicketData(UInt32 appId, IntPtr lpTicketData, UInt32 cubTicketData) { var call = this.GetFunction<NativeGetAppOwnershipTicketData>(this.Functions.GetAppOwnershipTicketData); return call(this.ObjectAddress, appId, lpTicketData, cubTicketData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDecryptionKey(IntPtr thisobj, UInt32 appId, IntPtr lpDecryptionKey, UInt32 cubDecryptionKey);
		public Int32 GetAppDecryptionKey(UInt32 appId, IntPtr lpDecryptionKey, UInt32 cubDecryptionKey) { var call = this.GetFunction<NativeGetAppDecryptionKey>(this.Functions.GetAppDecryptionKey); return call(this.ObjectAddress, appId, lpDecryptionKey, cubDecryptionKey); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer003VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr GetSteam2GetEncryptionKeyToSendToNewClient;
		public IntPtr SendUserConnect;
		public IntPtr RemoveUserConnect;
		public IntPtr SendUserDisconnect;
		public IntPtr SetSpawnCount;
		public IntPtr SetServerType;
		public IntPtr UpdateStatus;
		public IntPtr CreateUnauthenticatedUser;
		public IntPtr SetUserData;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
	}
	
	public class ISteamGameServer003 : NativeWrapper<ISteamGameServer003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSteam2GetEncryptionKeyToSendToNewClient(IntPtr thisobj, IntPtr pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSteam2GetEncryptionKeyToSendToNewClient(IntPtr pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey) { var call = this.GetFunction<NativeGetSteam2GetEncryptionKeyToSendToNewClient>(this.Functions.GetSteam2GetEncryptionKeyToSendToNewClient); return call(this.ObjectAddress, pvEncryptionKey, ref pcbEncryptionKey, cbMaxEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnect(IntPtr thisobj, UInt32 arg1, UInt32 arg2, UInt16 uint16, IntPtr arg4, UInt32 arg5);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnect(UInt32 arg1, UInt32 arg2, UInt16 uint16, IntPtr arg4, UInt32 arg5) { var call = this.GetFunction<NativeSendUserConnect>(this.Functions.SendUserConnect); return call(this.ObjectAddress, arg1, arg2, uint16, arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveUserConnect(IntPtr thisobj, UInt32 unUserID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveUserConnect(UInt32 unUserID) { var call = this.GetFunction<NativeRemoveUserConnect>(this.Functions.RemoveUserConnect); return call(this.ObjectAddress, unUserID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamID, UInt32 unUserID);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserDisconnect(UInt64 steamID, UInt32 unUserID) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); return call(this.ObjectAddress, steamID, unUserID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSpawnCount(IntPtr thisobj, UInt32 ucSpawn);
		public void SetSpawnCount(UInt32 ucSpawn) { var call = this.GetFunction<NativeSetSpawnCount>(this.Functions.SetSpawnCount); call(this.ObjectAddress, ucSpawn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, nGameAppId, unServerFlags, unGameIP, unGamePort, usSpectatorPort, usQueryPort, pchGameDir, pchVersion, bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateStatus>(this.Functions.UpdateStatus); return call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pSpectatorServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateUnauthenticatedUser(IntPtr thisobj, ref UInt64 pSteamID);
		public Int32 CreateUnauthenticatedUser(ref UInt64 pSteamID) { var call = this.GetFunction<NativeCreateUnauthenticatedUser>(this.Functions.CreateUnauthenticatedUser); return call(this.ObjectAddress, ref pSteamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeSetUserData>(this.Functions.SetUserData); return call(this.ObjectAddress, steamIDUser, pchPlayerName, uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, pchGameType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, pchAchievementName); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer004VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
	}
	
	public class ISteamGameServer004 : NativeWrapper<ISteamGameServer004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt64 steamIDUser, UInt32 arg2, IntPtr arg3, UInt32 arg4);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt64 steamIDUser, UInt32 arg2, IntPtr arg3, UInt32 arg4) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, steamIDUser, arg2, arg3, arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateUnauthenticatedUserConnection(IntPtr thisobj);
		public UInt64 CreateUnauthenticatedUserConnection() { var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, pchPlayerName, uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, nGameAppId, unServerFlags, unGameIP, unGamePort, usSpectatorPort, usQueryPort, pchGameDir, pchVersion, bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateStatus>(this.Functions.UpdateStatus); return call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pSpectatorServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, pchGameType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, pchAchievementName); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer009VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr GetGameplayStats;
		public IntPtr RequestUserGroupStatus;
		public IntPtr GetPublicIP;
		public IntPtr SetGameData;
		public IntPtr UserHasLicenseForApp;
	}
	
	public class ISteamGameServer009 : NativeWrapper<ISteamGameServer009VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateUnauthenticatedUserConnection(IntPtr thisobj);
		public UInt64 CreateUnauthenticatedUserConnection() { var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, pchPlayerName, uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, pchGameDir, pchVersion, bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pSpectatorServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, pchGameType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, pchAchievementName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserGroupStatus(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDGroup);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserGroupStatus(UInt64 steamIDUser, UInt64 steamIDGroup) { var call = this.GetFunction<NativeRequestUserGroupStatus>(this.Functions.RequestUserGroupStatus); return call(this.ObjectAddress, steamIDUser, steamIDGroup); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetPublicIP(IntPtr thisobj);
		public UInt32 GetPublicIP() { var call = this.GetFunction<NativeGetPublicIP>(this.Functions.GetPublicIP); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameData(IntPtr thisobj, string pchGameData);
		public void SetGameData(string pchGameData) { var call = this.GetFunction<NativeSetGameData>(this.Functions.SetGameData); call(this.ObjectAddress, pchGameData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUserHasLicenseForApp(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public UInt32 UserHasLicenseForApp(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeUserHasLicenseForApp>(this.Functions.UserHasLicenseForApp); return call(this.ObjectAddress, steamID, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUtils004VTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
		public IntPtr GetIPCountry;
		public IntPtr GetImageSize;
		public IntPtr GetImageRGBA;
		public IntPtr GetCSERIPPort;
		public IntPtr GetCurrentBatteryPower;
		public IntPtr GetAppID;
		public IntPtr SetOverlayNotificationPosition;
		public IntPtr IsAPICallCompleted;
		public IntPtr GetAPICallFailureReason;
		public IntPtr GetAPICallResult;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr SetWarningMessageHook;
		public IntPtr IsOverlayEnabled;
	}
	
	public class ISteamUtils004 : NativeWrapper<ISteamUtils004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSize(IntPtr thisobj, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageSize(Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight) { var call = this.GetFunction<NativeGetImageSize>(this.Functions.GetImageSize); return call(this.ObjectAddress, iImage, ref pnWidth, ref pnHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBA(IntPtr thisobj, Int32 iImage, byte[] pubDest, Int32 nDestBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageRGBA(Int32 iImage, byte[] pubDest, Int32 nDestBufferSize) { var call = this.GetFunction<NativeGetImageRGBA>(this.Functions.GetImageRGBA); return call(this.ObjectAddress, iImage, pubDest, nDestBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPort(IntPtr thisobj, ref UInt32 unIP, ref UInt16 usPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCSERIPPort(ref UInt32 unIP, ref UInt16 usPort) { var call = this.GetFunction<NativeGetCSERIPPort>(this.Functions.GetCSERIPPort); return call(this.ObjectAddress, ref unIP, ref usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower(IntPtr thisobj);
		public Byte GetCurrentBatteryPower() { var call = this.GetFunction<NativeGetCurrentBatteryPower>(this.Functions.GetCurrentBatteryPower); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppID(IntPtr thisobj);
		public UInt32 GetAppID() { var call = this.GetFunction<NativeGetAppID>(this.Functions.GetAppID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOverlayNotificationPosition(IntPtr thisobj, ENotificationPosition eNotificationPosition);
		public void SetOverlayNotificationPosition(ENotificationPosition eNotificationPosition) { var call = this.GetFunction<NativeSetOverlayNotificationPosition>(this.Functions.SetOverlayNotificationPosition); call(this.ObjectAddress, eNotificationPosition); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAPICallCompleted(IntPtr thisobj, UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAPICallCompleted(UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeIsAPICallCompleted>(this.Functions.IsAPICallCompleted); return call(this.ObjectAddress, hSteamAPICall, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamAPICallFailure NativeGetAPICallFailureReason(IntPtr thisobj, UInt64 hSteamAPICall);
		public ESteamAPICallFailure GetAPICallFailureReason(UInt64 hSteamAPICall) { var call = this.GetFunction<NativeGetAPICallFailureReason>(this.Functions.GetAPICallFailureReason); return call(this.ObjectAddress, hSteamAPICall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAPICallResult(IntPtr thisobj, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAPICallResult(UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeGetAPICallResult>(this.Functions.GetAPICallResult); return call(this.ObjectAddress, hSteamAPICall, pCallback, cubCallback, iCallbackExpected, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsOverlayEnabled(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsOverlayEnabled() { var call = this.GetFunction<NativeIsOverlayEnabled>(this.Functions.IsOverlayEnabled); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats002VTable
	{
		public IntPtr GetNumStats;
		public IntPtr GetStatName;
		public IntPtr GetStatType;
		public IntPtr GetNumAchievements;
		public IntPtr GetAchievementName;
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
	}
	
	public class ISteamUserStats002 : NativeWrapper<ISteamUserStats002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumStats(IntPtr thisobj, CGameID nGameID);
		public UInt32 GetNumStats(CGameID nGameID) { var call = this.GetFunction<NativeGetNumStats>(this.Functions.GetNumStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetStatName(IntPtr thisobj, CGameID nGameID, UInt32 iStat);
		public string GetStatName(CGameID nGameID, UInt32 iStat) { var call = this.GetFunction<NativeGetStatName>(this.Functions.GetStatName); return call(this.ObjectAddress, nGameID, iStat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamUserStatType NativeGetStatType(IntPtr thisobj, CGameID nGameID, string pchName);
		public ESteamUserStatType GetStatType(CGameID nGameID, string pchName) { var call = this.GetFunction<NativeGetStatType>(this.Functions.GetStatType); return call(this.ObjectAddress, nGameID, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAchievements(IntPtr thisobj, CGameID nGameID);
		public UInt32 GetNumAchievements(CGameID nGameID) { var call = this.GetFunction<NativeGetNumAchievements>(this.Functions.GetNumAchievements); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementName(IntPtr thisobj, CGameID nGameID, UInt32 iAchievement);
		public string GetAchievementName(CGameID nGameID, UInt32 iAchievement) { var call = this.GetFunction<NativeGetAchievementName>(this.Functions.GetAchievementName); return call(this.ObjectAddress, nGameID, iAchievement); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj, CGameID nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats(CGameID nGameID) { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, CGameID nGameID, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(CGameID nGameID, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, nGameID, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, CGameID nGameID, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(CGameID nGameID, string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, nGameID, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, CGameID nGameID, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(CGameID nGameID, string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, nGameID, pchName, nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, CGameID nGameID, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(CGameID nGameID, string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, nGameID, pchName, fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, CGameID nGameID, string pchName, UInt32 nCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(CGameID nGameID, string pchName, UInt32 nCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, nGameID, pchName, nCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, CGameID nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(CGameID nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, nGameID, pchName, ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, CGameID nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(CGameID nGameID, string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, nGameID, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, CGameID nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(CGameID nGameID, string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, nGameID, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj, CGameID nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats(CGameID nGameID) { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, CGameID nGameID, string pchName);
		public Int32 GetAchievementIcon(CGameID nGameID, string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, nGameID, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, CGameID nGameID, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(CGameID nGameID, string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return call(this.ObjectAddress, nGameID, pchName, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, CGameID nGameID, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(CGameID nGameID, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, nGameID, pchName, nCurProgress, nMaxProgress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats003VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
	}
	
	public class ISteamUserStats003 : NativeWrapper<ISteamUserStats003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, pchName, nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, pchName, fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float arg2, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float arg2, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, pchName, arg2, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, pchName, ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return call(this.ObjectAddress, pchName, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, pchName, nCurProgress, nMaxProgress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserItems001VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr UpdateInventoryPos;
		public IntPtr DropItem;
	}
	
	public class ISteamUserItems001 : NativeWrapper<ISteamUserItems001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj);
		public UInt64 LoadItems() { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj);
		public UInt64 GetItemCount() { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt32 index, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt32 index, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, index, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, uniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetItemAttribute(IntPtr thisobj, UInt64 uniqueID, UInt32 index, ref UInt32 attribId, ref float value);
		public void GetItemAttribute(UInt64 uniqueID, UInt32 index, ref UInt32 attribId, ref float value) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); call(this.ObjectAddress, uniqueID, index, ref attribId, ref value); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateInventoryPos(IntPtr thisobj, UInt64 uniqueID, UInt32 pos);
		public void UpdateInventoryPos(UInt64 uniqueID, UInt32 pos) { var call = this.GetFunction<NativeUpdateInventoryPos>(this.Functions.UpdateInventoryPos); call(this.ObjectAddress, uniqueID, pos); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeDropItem(IntPtr thisobj, UInt64 itemId);
		public void DropItem(UInt64 itemId) { var call = this.GetFunction<NativeDropItem>(this.Functions.DropItem); call(this.ObjectAddress, itemId); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserItems003VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr UpdateInventoryPos;
		public IntPtr DropItem;
		public IntPtr GetItemBlob;
		public IntPtr SetItemBlob;
	}
	
	public class ISteamUserItems003 : NativeWrapper<ISteamUserItems003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj);
		public UInt64 LoadItems() { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj);
		public UInt64 GetItemCount() { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, uniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetItemAttribute(IntPtr thisobj, UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d);
		public void GetItemAttribute(UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); call(this.ObjectAddress, uniqueID, b, ref c, ref d); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateInventoryPos(IntPtr thisobj, UInt64 uniqueID, UInt32 b);
		public void UpdateInventoryPos(UInt64 uniqueID, UInt32 b) { var call = this.GetFunction<NativeUpdateInventoryPos>(this.Functions.UpdateInventoryPos); call(this.ObjectAddress, uniqueID, b); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeDropItem(IntPtr thisobj, UInt64 itemId);
		public void DropItem(UInt64 itemId) { var call = this.GetFunction<NativeDropItem>(this.Functions.DropItem); call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemBlob(IntPtr thisobj, UInt64 itemId);
		public UInt64 GetItemBlob(UInt64 itemId) { var call = this.GetFunction<NativeGetItemBlob>(this.Functions.GetItemBlob); return call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSetItemBlob(IntPtr thisobj, UInt64 itemID, IntPtr blob, UInt32 arg3);
		public UInt64 SetItemBlob(UInt64 itemID, IntPtr blob, UInt32 arg3) { var call = this.GetFunction<NativeSetItemBlob>(this.Functions.SetItemBlob); return call(this.ObjectAddress, itemID, blob, arg3); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUtils005VTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
		public IntPtr GetIPCountry;
		public IntPtr GetImageSize;
		public IntPtr GetImageRGBA;
		public IntPtr GetCSERIPPort;
		public IntPtr GetCurrentBatteryPower;
		public IntPtr GetAppID;
		public IntPtr SetOverlayNotificationPosition;
		public IntPtr IsAPICallCompleted;
		public IntPtr GetAPICallFailureReason;
		public IntPtr GetAPICallResult;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr SetWarningMessageHook;
		public IntPtr IsOverlayEnabled;
		public IntPtr OverlayNeedsPresent;
	}
	
	public class ISteamUtils005 : NativeWrapper<ISteamUtils005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSize(IntPtr thisobj, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageSize(Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight) { var call = this.GetFunction<NativeGetImageSize>(this.Functions.GetImageSize); return call(this.ObjectAddress, iImage, ref pnWidth, ref pnHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBA(IntPtr thisobj, Int32 iImage, byte[] pubDest, Int32 nDestBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageRGBA(Int32 iImage, byte[] pubDest, Int32 nDestBufferSize) { var call = this.GetFunction<NativeGetImageRGBA>(this.Functions.GetImageRGBA); return call(this.ObjectAddress, iImage, pubDest, nDestBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPort(IntPtr thisobj, ref UInt32 unIP, ref UInt16 usPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCSERIPPort(ref UInt32 unIP, ref UInt16 usPort) { var call = this.GetFunction<NativeGetCSERIPPort>(this.Functions.GetCSERIPPort); return call(this.ObjectAddress, ref unIP, ref usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower(IntPtr thisobj);
		public Byte GetCurrentBatteryPower() { var call = this.GetFunction<NativeGetCurrentBatteryPower>(this.Functions.GetCurrentBatteryPower); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppID(IntPtr thisobj);
		public UInt32 GetAppID() { var call = this.GetFunction<NativeGetAppID>(this.Functions.GetAppID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOverlayNotificationPosition(IntPtr thisobj, ENotificationPosition eNotificationPosition);
		public void SetOverlayNotificationPosition(ENotificationPosition eNotificationPosition) { var call = this.GetFunction<NativeSetOverlayNotificationPosition>(this.Functions.SetOverlayNotificationPosition); call(this.ObjectAddress, eNotificationPosition); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAPICallCompleted(IntPtr thisobj, UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAPICallCompleted(UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeIsAPICallCompleted>(this.Functions.IsAPICallCompleted); return call(this.ObjectAddress, hSteamAPICall, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamAPICallFailure NativeGetAPICallFailureReason(IntPtr thisobj, UInt64 hSteamAPICall);
		public ESteamAPICallFailure GetAPICallFailureReason(UInt64 hSteamAPICall) { var call = this.GetFunction<NativeGetAPICallFailureReason>(this.Functions.GetAPICallFailureReason); return call(this.ObjectAddress, hSteamAPICall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAPICallResult(IntPtr thisobj, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAPICallResult(UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeGetAPICallResult>(this.Functions.GetAPICallResult); return call(this.ObjectAddress, hSteamAPICall, pCallback, cubCallback, iCallbackExpected, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsOverlayEnabled(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsOverlayEnabled() { var call = this.GetFunction<NativeIsOverlayEnabled>(this.Functions.IsOverlayEnabled); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeOverlayNeedsPresent(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool OverlayNeedsPresent() { var call = this.GetFunction<NativeOverlayNeedsPresent>(this.Functions.OverlayNeedsPresent); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamClient006VTable
	{
		public IntPtr CreateSteamPipe;
		public IntPtr ReleaseSteamPipe;
		public IntPtr CreateGlobalUser;
		public IntPtr ConnectToGlobalUser;
		public IntPtr CreateLocalUser;
		public IntPtr ReleaseUser;
		public IntPtr GetISteamUser;
		public IntPtr GetIVAC;
		public IntPtr GetISteamGameServer;
		public IntPtr SetLocalIPBinding;
		public IntPtr GetUniverseName;
		public IntPtr GetISteamFriends;
		public IntPtr GetISteamUtils;
		public IntPtr GetISteamBilling;
		public IntPtr GetISteamMatchmaking;
		public IntPtr GetISteamContentServer;
		public IntPtr GetISteamApps;
		public IntPtr GetISteamMasterServerUpdater;
		public IntPtr GetISteamMatchmakingServers;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
	}
	
	public class ISteamClient006 : NativeWrapper<ISteamClient006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateSteamPipe(IntPtr thisobj);
		public Int32 CreateSteamPipe() { var call = this.GetFunction<NativeCreateSteamPipe>(this.Functions.CreateSteamPipe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseSteamPipe(IntPtr thisobj, Int32 hSteamPipe);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseSteamPipe(Int32 hSteamPipe) { var call = this.GetFunction<NativeReleaseSteamPipe>(this.Functions.ReleaseSteamPipe); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateGlobalUser(IntPtr thisobj, ref Int32 phSteamPipe);
		public Int32 CreateGlobalUser(ref Int32 phSteamPipe) { var call = this.GetFunction<NativeCreateGlobalUser>(this.Functions.CreateGlobalUser); return call(this.ObjectAddress, ref phSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeConnectToGlobalUser(IntPtr thisobj, Int32 hSteamPipe);
		public Int32 ConnectToGlobalUser(Int32 hSteamPipe) { var call = this.GetFunction<NativeConnectToGlobalUser>(this.Functions.ConnectToGlobalUser); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUser(IntPtr thisobj, ref Int32 phSteamPipe);
		public Int32 CreateLocalUser(ref Int32 phSteamPipe) { var call = this.GetFunction<NativeCreateLocalUser>(this.Functions.CreateLocalUser); return call(this.ObjectAddress, ref phSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseUser(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		public void ReleaseUser(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeReleaseUser>(this.Functions.ReleaseUser); call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUser(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUser(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUser>(this.Functions.GetISteamUser); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIVAC(IntPtr thisobj, Int32 hSteamUser);
		public IntPtr GetIVAC(Int32 hSteamUser) { var call = this.GetFunction<NativeGetIVAC>(this.Functions.GetIVAC); return call(this.ObjectAddress, hSteamUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGameServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGameServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGameServer>(this.Functions.GetISteamGameServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLocalIPBinding(IntPtr thisobj, UInt32 unIP, UInt16 usPort);
		public void SetLocalIPBinding(UInt32 unIP, UInt16 usPort) { var call = this.GetFunction<NativeSetLocalIPBinding>(this.Functions.SetLocalIPBinding); call(this.ObjectAddress, unIP, usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetUniverseName(IntPtr thisobj, EUniverse eUniverse);
		public string GetUniverseName(EUniverse eUniverse) { var call = this.GetFunction<NativeGetUniverseName>(this.Functions.GetUniverseName); return call(this.ObjectAddress, eUniverse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamFriends(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamFriends(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamFriends>(this.Functions.GetISteamFriends); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUtils(IntPtr thisobj, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUtils(Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUtils>(this.Functions.GetISteamUtils); return call(this.ObjectAddress, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamBilling(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamBilling(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamBilling>(this.Functions.GetISteamBilling); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmaking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmaking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmaking>(this.Functions.GetISteamMatchmaking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamContentServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamContentServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamContentServer>(this.Functions.GetISteamContentServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamApps(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamApps(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamApps>(this.Functions.GetISteamApps); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMasterServerUpdater(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMasterServerUpdater(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMasterServerUpdater>(this.Functions.GetISteamMasterServerUpdater); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmakingServers(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmakingServers(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmakingServers>(this.Functions.GetISteamMatchmakingServers); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamBilling001VTable
	{
		public IntPtr SetBillingAddress;
		public IntPtr GetBillingAddress;
		public IntPtr SetShippingAddress;
		public IntPtr GetShippingAddress;
		public IntPtr GetFinalPrice;
		public IntPtr SetCardInfo;
		public IntPtr GetCardInfo;
		public IntPtr Purchase;
	}
	
	public class ISteamBilling001 : NativeWrapper<ISteamBilling001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetBillingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetBillingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeSetBillingAddress>(this.Functions.SetBillingAddress); return call(this.ObjectAddress, pchName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetBillingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetBillingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetBillingAddress>(this.Functions.GetBillingAddress); return call(this.ObjectAddress, pchName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetShippingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetShippingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeSetShippingAddress>(this.Functions.SetShippingAddress); return call(this.ObjectAddress, pchName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetShippingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetShippingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetShippingAddress>(this.Functions.GetShippingAddress); return call(this.ObjectAddress, pchName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFinalPrice(IntPtr thisobj, Int32 nPackageID);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFinalPrice(Int32 nPackageID) { var call = this.GetFunction<NativeGetFinalPrice>(this.Functions.GetFinalPrice); return call(this.ObjectAddress, nPackageID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetCardInfo(IntPtr thisobj, Int32 eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetCardInfo(Int32 eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2) { var call = this.GetFunction<NativeSetCardInfo>(this.Functions.SetCardInfo); return call(this.ObjectAddress, eCreditCardType, pchCardNumber, pchCardHolderName, pchCardExpYear, pchCardExpMonth, pchCardCVV2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCardInfo(IntPtr thisobj, ref Int32 eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCardInfo(ref Int32 eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2) { var call = this.GetFunction<NativeGetCardInfo>(this.Functions.GetCardInfo); return call(this.ObjectAddress, ref eCreditCardType, pchCardNumber, pchCardHolderName, pchCardExpYear, pchCardExpMonth, pchCardCVV2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativePurchase(IntPtr thisobj, Int32 nPackageID, Int32 nExpectedCostCents, UInt64 gidCardID, [MarshalAs(UnmanagedType.I1)] bool bStoreCardInfo);
		[return: MarshalAs(UnmanagedType.I1)] public bool Purchase(Int32 nPackageID, Int32 nExpectedCostCents, UInt64 gidCardID, [MarshalAs(UnmanagedType.I1)] bool bStoreCardInfo) { var call = this.GetFunction<NativePurchase>(this.Functions.Purchase); return call(this.ObjectAddress, nPackageID, nExpectedCostCents, gidCardID, bStoreCardInfo); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamClient007VTable
	{
		public IntPtr CreateSteamPipe;
		public IntPtr ReleaseSteamPipe;
		public IntPtr ConnectToGlobalUser;
		public IntPtr CreateLocalUser;
		public IntPtr ReleaseUser;
		public IntPtr GetISteamUser;
		public IntPtr GetISteamGameServer;
		public IntPtr SetLocalIPBinding;
		public IntPtr GetISteamFriends;
		public IntPtr GetISteamUtils;
		public IntPtr GetISteamMatchmaking;
		public IntPtr GetISteamContentServer;
		public IntPtr GetISteamMasterServerUpdater;
		public IntPtr GetISteamMatchmakingServers;
		public IntPtr GetISteamGenericInterface;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr GetISteamUserStats;
		public IntPtr GetISteamApps;
		public IntPtr GetISteamNetworking;
		public IntPtr SetWarningMessageHook;
		public IntPtr GetISteamRemoteStorage;
	}
	
	public class ISteamClient007 : NativeWrapper<ISteamClient007VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateSteamPipe(IntPtr thisobj);
		public Int32 CreateSteamPipe() { var call = this.GetFunction<NativeCreateSteamPipe>(this.Functions.CreateSteamPipe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseSteamPipe(IntPtr thisobj, Int32 hSteamPipe);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseSteamPipe(Int32 hSteamPipe) { var call = this.GetFunction<NativeReleaseSteamPipe>(this.Functions.ReleaseSteamPipe); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeConnectToGlobalUser(IntPtr thisobj, Int32 hSteamPipe);
		public Int32 ConnectToGlobalUser(Int32 hSteamPipe) { var call = this.GetFunction<NativeConnectToGlobalUser>(this.Functions.ConnectToGlobalUser); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUser(IntPtr thisobj, ref Int32 phSteamPipe);
		public Int32 CreateLocalUser(ref Int32 phSteamPipe) { var call = this.GetFunction<NativeCreateLocalUser>(this.Functions.CreateLocalUser); return call(this.ObjectAddress, ref phSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseUser(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		public void ReleaseUser(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeReleaseUser>(this.Functions.ReleaseUser); call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUser(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUser(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUser>(this.Functions.GetISteamUser); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGameServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGameServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGameServer>(this.Functions.GetISteamGameServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLocalIPBinding(IntPtr thisobj, UInt32 unIP, UInt16 usPort);
		public void SetLocalIPBinding(UInt32 unIP, UInt16 usPort) { var call = this.GetFunction<NativeSetLocalIPBinding>(this.Functions.SetLocalIPBinding); call(this.ObjectAddress, unIP, usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamFriends(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamFriends(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamFriends>(this.Functions.GetISteamFriends); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUtils(IntPtr thisobj, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUtils(Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUtils>(this.Functions.GetISteamUtils); return call(this.ObjectAddress, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmaking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmaking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmaking>(this.Functions.GetISteamMatchmaking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamContentServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamContentServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamContentServer>(this.Functions.GetISteamContentServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMasterServerUpdater(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMasterServerUpdater(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMasterServerUpdater>(this.Functions.GetISteamMasterServerUpdater); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmakingServers(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmakingServers(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmakingServers>(this.Functions.GetISteamMatchmakingServers); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGenericInterface(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGenericInterface(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGenericInterface>(this.Functions.GetISteamGenericInterface); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUserStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUserStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUserStats>(this.Functions.GetISteamUserStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamApps(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamApps(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamApps>(this.Functions.GetISteamApps); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamNetworking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamNetworking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamNetworking>(this.Functions.GetISteamNetworking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamRemoteStorage(IntPtr thisobj, Int32 hSteamuser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamRemoteStorage(Int32 hSteamuser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamRemoteStorage>(this.Functions.GetISteamRemoteStorage); return call(this.ObjectAddress, hSteamuser, hSteamPipe, pchVersion); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamClient008VTable
	{
		public IntPtr CreateSteamPipe;
		public IntPtr ReleaseSteamPipe;
		public IntPtr ConnectToGlobalUser;
		public IntPtr CreateLocalUser;
		public IntPtr ReleaseUser;
		public IntPtr GetISteamUser;
		public IntPtr GetISteamGameServer;
		public IntPtr SetLocalIPBinding;
		public IntPtr GetISteamFriends;
		public IntPtr GetISteamUtils;
		public IntPtr GetISteamMatchmaking;
		public IntPtr GetISteamMasterServerUpdater;
		public IntPtr GetISteamMatchmakingServers;
		public IntPtr GetISteamGenericInterface;
		public IntPtr GetISteamUserStats;
		public IntPtr GetISteamApps;
		public IntPtr GetISteamNetworking;
		public IntPtr GetISteamRemoteStorage;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr SetWarningMessageHook;
	}
	
	public class ISteamClient008 : NativeWrapper<ISteamClient008VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateSteamPipe(IntPtr thisobj);
		public Int32 CreateSteamPipe() { var call = this.GetFunction<NativeCreateSteamPipe>(this.Functions.CreateSteamPipe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseSteamPipe(IntPtr thisobj, Int32 hSteamPipe);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseSteamPipe(Int32 hSteamPipe) { var call = this.GetFunction<NativeReleaseSteamPipe>(this.Functions.ReleaseSteamPipe); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeConnectToGlobalUser(IntPtr thisobj, Int32 hSteamPipe);
		public Int32 ConnectToGlobalUser(Int32 hSteamPipe) { var call = this.GetFunction<NativeConnectToGlobalUser>(this.Functions.ConnectToGlobalUser); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUser(IntPtr thisobj, ref Int32 phSteamPipe, EAccountType eAccountType);
		public Int32 CreateLocalUser(ref Int32 phSteamPipe, EAccountType eAccountType) { var call = this.GetFunction<NativeCreateLocalUser>(this.Functions.CreateLocalUser); return call(this.ObjectAddress, ref phSteamPipe, eAccountType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseUser(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		public void ReleaseUser(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeReleaseUser>(this.Functions.ReleaseUser); call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUser(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUser(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUser>(this.Functions.GetISteamUser); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGameServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGameServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGameServer>(this.Functions.GetISteamGameServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLocalIPBinding(IntPtr thisobj, UInt32 unIP, UInt16 usPort);
		public void SetLocalIPBinding(UInt32 unIP, UInt16 usPort) { var call = this.GetFunction<NativeSetLocalIPBinding>(this.Functions.SetLocalIPBinding); call(this.ObjectAddress, unIP, usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamFriends(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamFriends(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamFriends>(this.Functions.GetISteamFriends); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUtils(IntPtr thisobj, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUtils(Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUtils>(this.Functions.GetISteamUtils); return call(this.ObjectAddress, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmaking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmaking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmaking>(this.Functions.GetISteamMatchmaking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMasterServerUpdater(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMasterServerUpdater(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMasterServerUpdater>(this.Functions.GetISteamMasterServerUpdater); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmakingServers(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmakingServers(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmakingServers>(this.Functions.GetISteamMatchmakingServers); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGenericInterface(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGenericInterface(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGenericInterface>(this.Functions.GetISteamGenericInterface); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUserStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUserStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUserStats>(this.Functions.GetISteamUserStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamApps(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamApps(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamApps>(this.Functions.GetISteamApps); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamNetworking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamNetworking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamNetworking>(this.Functions.GetISteamNetworking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamRemoteStorage(IntPtr thisobj, Int32 hSteamuser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamRemoteStorage(Int32 hSteamuser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamRemoteStorage>(this.Functions.GetISteamRemoteStorage); return call(this.ObjectAddress, hSteamuser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats006VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr ResetAllStats;
		public IntPtr FindOrCreateLeaderboard;
		public IntPtr FindLeaderboard;
		public IntPtr GetLeaderboardName;
		public IntPtr GetLeaderboardEntryCount;
		public IntPtr GetLeaderboardSortMethod;
		public IntPtr GetLeaderboardDisplayType;
		public IntPtr DownloadLeaderboardEntries;
		public IntPtr GetDownloadedLeaderboardEntry;
		public IntPtr UploadLeaderboardScore;
		public IntPtr GetNumberOfCurrentPlayers;
	}
	
	public class ISteamUserStats006 : NativeWrapper<ISteamUserStats006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, pchName, nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, pchName, fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float flCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, pchName, flCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, pchName, ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return call(this.ObjectAddress, pchName, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, pchName, nCurProgress, nMaxProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 RequestUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, pchName, ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeResetAllStats(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);
		[return: MarshalAs(UnmanagedType.I1)] public bool ResetAllStats([MarshalAs(UnmanagedType.I1)] bool bAchievementsToo) { var call = this.GetFunction<NativeResetAllStats>(this.Functions.ResetAllStats); return call(this.ObjectAddress, bAchievementsToo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindOrCreateLeaderboard(IntPtr thisobj, string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType);
		public UInt64 FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType) { var call = this.GetFunction<NativeFindOrCreateLeaderboard>(this.Functions.FindOrCreateLeaderboard); return call(this.ObjectAddress, pchLeaderboardName, eLeaderboardSortMethod, eLeaderboardDisplayType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindLeaderboard(IntPtr thisobj, string pchLeaderboardName);
		public UInt64 FindLeaderboard(string pchLeaderboardName) { var call = this.GetFunction<NativeFindLeaderboard>(this.Functions.FindLeaderboard); return call(this.ObjectAddress, pchLeaderboardName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLeaderboardName(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public string GetLeaderboardName(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardName>(this.Functions.GetLeaderboardName); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLeaderboardEntryCount(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public Int32 GetLeaderboardEntryCount(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardEntryCount>(this.Functions.GetLeaderboardEntryCount); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardSortMethod NativeGetLeaderboardSortMethod(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardSortMethod GetLeaderboardSortMethod(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardSortMethod>(this.Functions.GetLeaderboardSortMethod); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardDisplayType NativeGetLeaderboardDisplayType(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardDisplayType GetLeaderboardDisplayType(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardDisplayType>(this.Functions.GetLeaderboardDisplayType); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDownloadLeaderboardEntries(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd);
		public UInt64 DownloadLeaderboardEntries(UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd) { var call = this.GetFunction<NativeDownloadLeaderboardEntries>(this.Functions.DownloadLeaderboardEntries); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardDataRequest, nRangeStart, nRangeEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetDownloadedLeaderboardEntry(IntPtr thisobj, UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetDownloadedLeaderboardEntry(UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax) { var call = this.GetFunction<NativeGetDownloadedLeaderboardEntry>(this.Functions.GetDownloadedLeaderboardEntry); return call(this.ObjectAddress, hSteamLeaderboardEntries, index, ref pLeaderboardEntry, ref pDetails, cDetailsMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUploadLeaderboardScore(IntPtr thisobj, UInt64 hSteamLeaderboard, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount);
		public UInt64 UploadLeaderboardScore(UInt64 hSteamLeaderboard, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount) { var call = this.GetFunction<NativeUploadLeaderboardScore>(this.Functions.UploadLeaderboardScore); return call(this.ObjectAddress, hSteamLeaderboard, nScore, ref pScoreDetails, cScoreDetailsCount); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumberOfCurrentPlayers(IntPtr thisobj);
		public UInt32 GetNumberOfCurrentPlayers() { var call = this.GetFunction<NativeGetNumberOfCurrentPlayers>(this.Functions.GetNumberOfCurrentPlayers); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct servernetadr_t
	{
		public UInt16 m_usConnectionPort;
		public UInt16 m_usQueryPort;
		public UInt32 m_unIP;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking001VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr GetFavoriteGame2;
		public IntPtr AddFavoriteGame2;
		public IntPtr RemoveFavoriteGame2;
		public IntPtr RequestLobbyList;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr ChangeLobbyAdmin;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
	}
	
	public class ISteamMatchmaking001 : NativeWrapper<ISteamMatchmaking001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame2(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame2(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame2>(this.Functions.GetFavoriteGame2); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame2(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame2(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame2>(this.Functions.AddFavoriteGame2); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame2(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame2(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame2>(this.Functions.RemoveFavoriteGame2); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestLobbyList(IntPtr thisobj, UInt64 ulGameID, ref MatchMakingKeyValuePair_t pFilters, UInt32 nFilters);
		public void RequestLobbyList(UInt64 ulGameID, ref MatchMakingKeyValuePair_t pFilters, UInt32 nFilters) { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); call(this.ObjectAddress, ulGameID, ref pFilters, nFilters); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyByIndex(IntPtr thisobj, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); return call(this.ObjectAddress, iLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateLobby(IntPtr thisobj, UInt64 ulGameID, [MarshalAs(UnmanagedType.I1)] bool bPrivate);
		public void CreateLobby(UInt64 ulGameID, [MarshalAs(UnmanagedType.I1)] bool bPrivate) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); call(this.ObjectAddress, ulGameID, bPrivate); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyMemberByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); return call(this.ObjectAddress, steamIDLobby, iMember); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 SteamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 SteamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return call(this.ObjectAddress, SteamIDLobby, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return call(this.ObjectAddress, steamIDLobby, steamIDUser, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangeLobbyAdmin(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDNewAdmin);
		public void ChangeLobbyAdmin(UInt64 steamIDLobby, UInt64 steamIDNewAdmin) { var call = this.GetFunction<NativeChangeLobbyAdmin>(this.Functions.ChangeLobbyAdmin); call(this.ObjectAddress, steamIDLobby, steamIDNewAdmin); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking002VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
	}
	
	public class ISteamMatchmaking002 : NativeWrapper<ISteamMatchmaking002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestLobbyList(IntPtr thisobj);
		public void RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyByIndex(IntPtr thisobj, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); return call(this.ObjectAddress, iLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateLobby(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bPrivate);
		public void CreateLobby([MarshalAs(UnmanagedType.I1)] bool bPrivate) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); call(this.ObjectAddress, bPrivate); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyMemberByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); return call(this.ObjectAddress, steamIDLobby, iMember); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 SteamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 SteamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return call(this.ObjectAddress, SteamIDLobby, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return call(this.ObjectAddress, steamIDLobby, steamIDUser, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking004VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListSlotsAvailableFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr RequestFriendsLobbies;
	}
	
	public class ISteamMatchmaking004 : NativeWrapper<ISteamMatchmaking004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch);
		public void AddRequestLobbyListFilter(string pchKeyToMatch, string pchValueToMatch) { var call = this.GetFunction<NativeAddRequestLobbyListFilter>(this.Functions.AddRequestLobbyListFilter); call(this.ObjectAddress, pchKeyToMatch, pchValueToMatch); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, pchKeyToMatch, nValueToMatch, nComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListSlotsAvailableFilter(IntPtr thisobj);
		public void AddRequestLobbyListSlotsAvailableFilter() { var call = this.GetFunction<NativeAddRequestLobbyListSlotsAvailableFilter>(this.Functions.AddRequestLobbyListSlotsAvailableFilter); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyByIndex(IntPtr thisobj, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); return call(this.ObjectAddress, iLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateLobby(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bPrivate);
		public void CreateLobby([MarshalAs(UnmanagedType.I1)] bool bPrivate) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); call(this.ObjectAddress, bPrivate); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyMemberByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); return call(this.ObjectAddress, steamIDLobby, iMember); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return call(this.ObjectAddress, steamIDLobby, steamIDUser, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestFriendsLobbies(IntPtr thisobj);
		public Int32 RequestFriendsLobbies() { var call = this.GetFunction<NativeRequestFriendsLobbies>(this.Functions.RequestFriendsLobbies); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking005VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListSlotsAvailableFilter;
		public IntPtr AddRequestLobbyListNearValueFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr RequestFriendsLobbies;
		public IntPtr SetLobbyType;
		public IntPtr GetLobbyOwner;
		public IntPtr GetLobbyDistance;
	}
	
	public class ISteamMatchmaking005 : NativeWrapper<ISteamMatchmaking005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch);
		public void AddRequestLobbyListFilter(string pchKeyToMatch, string pchValueToMatch) { var call = this.GetFunction<NativeAddRequestLobbyListFilter>(this.Functions.AddRequestLobbyListFilter); call(this.ObjectAddress, pchKeyToMatch, pchValueToMatch); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, pchKeyToMatch, nValueToMatch, nComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListSlotsAvailableFilter(IntPtr thisobj);
		public void AddRequestLobbyListSlotsAvailableFilter() { var call = this.GetFunction<NativeAddRequestLobbyListSlotsAvailableFilter>(this.Functions.AddRequestLobbyListSlotsAvailableFilter); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNearValueFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToBeCloseTo);
		public void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, Int32 nValueToBeCloseTo) { var call = this.GetFunction<NativeAddRequestLobbyListNearValueFilter>(this.Functions.AddRequestLobbyListNearValueFilter); call(this.ObjectAddress, pchKeyToMatch, nValueToBeCloseTo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyByIndex(IntPtr thisobj, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); return call(this.ObjectAddress, iLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateLobby(IntPtr thisobj, ELobbyType eLobbyType);
		public UInt64 CreateLobby(ELobbyType eLobbyType) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); return call(this.ObjectAddress, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyMemberByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); return call(this.ObjectAddress, steamIDLobby, iMember); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return call(this.ObjectAddress, steamIDLobby, steamIDUser, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestFriendsLobbies(IntPtr thisobj);
		public Int32 RequestFriendsLobbies() { var call = this.GetFunction<NativeRequestFriendsLobbies>(this.Functions.RequestFriendsLobbies); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyType(IntPtr thisobj, UInt64 steamIDLobby, ELobbyType eLobbyType);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyType(UInt64 steamIDLobby, ELobbyType eLobbyType) { var call = this.GetFunction<NativeSetLobbyType>(this.Functions.SetLobbyType); return call(this.ObjectAddress, steamIDLobby, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyOwner(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 GetLobbyOwner(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyOwner>(this.Functions.GetLobbyOwner); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyDistance(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyDistance(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyDistance>(this.Functions.GetLobbyDistance); return call(this.ObjectAddress, steamIDLobby); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking007VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListNearValueFilter;
		public IntPtr AddRequestLobbyListSlotsAvailableFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyDataCount;
		public IntPtr GetLobbyDataByIndex;
		public IntPtr DeleteLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr SetLobbyType;
		public IntPtr SetLobbyJoinable;
		public IntPtr GetLobbyOwner;
		public IntPtr SetLobbyOwner;
	}
	
	public class ISteamMatchmaking007 : NativeWrapper<ISteamMatchmaking007VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch);
		public void AddRequestLobbyListFilter(string pchKeyToMatch, string pchValueToMatch) { var call = this.GetFunction<NativeAddRequestLobbyListFilter>(this.Functions.AddRequestLobbyListFilter); call(this.ObjectAddress, pchKeyToMatch, pchValueToMatch); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, pchKeyToMatch, nValueToMatch, nComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNearValueFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToBeCloseTo);
		public void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, Int32 nValueToBeCloseTo) { var call = this.GetFunction<NativeAddRequestLobbyListNearValueFilter>(this.Functions.AddRequestLobbyListNearValueFilter); call(this.ObjectAddress, pchKeyToMatch, nValueToBeCloseTo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListSlotsAvailableFilter(IntPtr thisobj, Int32 arg1);
		public void AddRequestLobbyListSlotsAvailableFilter(Int32 arg1) { var call = this.GetFunction<NativeAddRequestLobbyListSlotsAvailableFilter>(this.Functions.AddRequestLobbyListSlotsAvailableFilter); call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyByIndex(IntPtr thisobj, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); return call(this.ObjectAddress, iLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateLobby(IntPtr thisobj, ELobbyType eLobbyType, Int32 arg2);
		public UInt64 CreateLobby(ELobbyType eLobbyType, Int32 arg2) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); return call(this.ObjectAddress, eLobbyType, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyMemberByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); return call(this.ObjectAddress, steamIDLobby, iMember); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyDataCount(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyDataCount(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyDataCount>(this.Functions.GetLobbyDataCount); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyDataByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iData, string pchKey, Int32 cubKey, string pchValue, Int32 cubValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyDataByIndex(UInt64 steamIDLobby, Int32 iData, string pchKey, Int32 cubKey, string pchValue, Int32 cubValue) { var call = this.GetFunction<NativeGetLobbyDataByIndex>(this.Functions.GetLobbyDataByIndex); return call(this.ObjectAddress, steamIDLobby, iData, pchKey, cubKey, pchValue, cubValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDeleteLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public Int32 DeleteLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeDeleteLobbyData>(this.Functions.DeleteLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return call(this.ObjectAddress, steamIDLobby, steamIDUser, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyType(IntPtr thisobj, UInt64 steamIDLobby, ELobbyType eLobbyType);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyType(UInt64 steamIDLobby, ELobbyType eLobbyType) { var call = this.GetFunction<NativeSetLobbyType>(this.Functions.SetLobbyType); return call(this.ObjectAddress, steamIDLobby, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyJoinable(IntPtr thisobj, UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bJoinable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyJoinable(UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bJoinable) { var call = this.GetFunction<NativeSetLobbyJoinable>(this.Functions.SetLobbyJoinable); return call(this.ObjectAddress, steamIDLobby, bJoinable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyOwner(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 GetLobbyOwner(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyOwner>(this.Functions.GetLobbyOwner); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyOwner(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDOwner);
		public Int32 SetLobbyOwner(UInt64 steamIDLobby, UInt64 steamIDOwner) { var call = this.GetFunction<NativeSetLobbyOwner>(this.Functions.SetLobbyOwner); return call(this.ObjectAddress, steamIDLobby, steamIDOwner); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamApps001VTable
	{
		public IntPtr GetAppData;
	}
	
	public class ISteamApps001 : NativeWrapper<ISteamApps001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppData(IntPtr thisobj, UInt32 nAppID, string pchKey, string pchValue, Int32 cchValueMax);
		public Int32 GetAppData(UInt32 nAppID, string pchKey, string pchValue, Int32 cchValueMax) { var call = this.GetFunction<NativeGetAppData>(this.Functions.GetAppData); return call(this.ObjectAddress, nAppID, pchKey, pchValue, cchValueMax); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer002VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr SetSpawnCount;
		public IntPtr GetSteam2GetEncryptionKeyToSendToNewClient;
		public IntPtr SendSteam2UserConnect;
		public IntPtr SendSteam3UserConnect;
		public IntPtr RemoveUserConnect;
		public IntPtr SendUserDisconnect;
		public IntPtr SendUserStatusResponse;
		public IntPtr Obsolete_GSSetStatus;
		public IntPtr UpdateStatus;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SetServerType;
		public IntPtr SetServerType2;
		public IntPtr UpdateStatus2;
		public IntPtr CreateUnauthenticatedUser;
		public IntPtr SetUserData;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
	}
	
	public class ISteamGameServer002 : NativeWrapper<ISteamGameServer002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSpawnCount(IntPtr thisobj, UInt32 ucSpawn);
		public void SetSpawnCount(UInt32 ucSpawn) { var call = this.GetFunction<NativeSetSpawnCount>(this.Functions.SetSpawnCount); call(this.ObjectAddress, ucSpawn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSteam2GetEncryptionKeyToSendToNewClient(IntPtr thisobj, IntPtr pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSteam2GetEncryptionKeyToSendToNewClient(IntPtr pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey) { var call = this.GetFunction<NativeGetSteam2GetEncryptionKeyToSendToNewClient>(this.Functions.GetSteam2GetEncryptionKeyToSendToNewClient); return call(this.ObjectAddress, pvEncryptionKey, ref pcbEncryptionKey, cbMaxEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendSteam2UserConnect(IntPtr thisobj, UInt32 unUserID, IntPtr pvRawKey, UInt32 unKeyLen, UInt32 unIPPublic, UInt16 usPort, IntPtr pvCookie, UInt32 cubCookie);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendSteam2UserConnect(UInt32 unUserID, IntPtr pvRawKey, UInt32 unKeyLen, UInt32 unIPPublic, UInt16 usPort, IntPtr pvCookie, UInt32 cubCookie) { var call = this.GetFunction<NativeSendSteam2UserConnect>(this.Functions.SendSteam2UserConnect); return call(this.ObjectAddress, unUserID, pvRawKey, unKeyLen, unIPPublic, usPort, pvCookie, cubCookie); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendSteam3UserConnect(IntPtr thisobj, UInt64 steamID, UInt32 unIPPublic, IntPtr pvCookie, UInt32 cubCookie);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendSteam3UserConnect(UInt64 steamID, UInt32 unIPPublic, IntPtr pvCookie, UInt32 cubCookie) { var call = this.GetFunction<NativeSendSteam3UserConnect>(this.Functions.SendSteam3UserConnect); return call(this.ObjectAddress, steamID, unIPPublic, pvCookie, cubCookie); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveUserConnect(IntPtr thisobj, UInt32 unUserID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveUserConnect(UInt32 unUserID) { var call = this.GetFunction<NativeRemoveUserConnect>(this.Functions.RemoveUserConnect); return call(this.ObjectAddress, unUserID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamID, UInt32 unUserID);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserDisconnect(UInt64 steamID, UInt32 unUserID) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); return call(this.ObjectAddress, steamID, unUserID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserStatusResponse(IntPtr thisobj, UInt64 steamID, Int32 nSecondsConnected, Int32 nSecondsSinceLast);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserStatusResponse(UInt64 steamID, Int32 nSecondsConnected, Int32 nSecondsSinceLast) { var call = this.GetFunction<NativeSendUserStatusResponse>(this.Functions.SendUserStatusResponse); return call(this.ObjectAddress, steamID, nSecondsConnected, nSecondsSinceLast); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeObsolete_GSSetStatus(IntPtr thisobj, Int32 nAppIdServed, UInt32 unServerFlags, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, Int32 unGamePort, string pchServerName, string pchGameDir, string pchMapName, string pchVersion);
		[return: MarshalAs(UnmanagedType.I1)] public bool Obsolete_GSSetStatus(Int32 nAppIdServed, UInt32 unServerFlags, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, Int32 unGamePort, string pchServerName, string pchGameDir, string pchMapName, string pchVersion) { var call = this.GetFunction<NativeObsolete_GSSetStatus>(this.Functions.Obsolete_GSSetStatus); return call(this.ObjectAddress, nAppIdServed, unServerFlags, cPlayers, cPlayersMax, cBotPlayers, unGamePort, pchServerName, pchGameDir, pchMapName, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pchMapName);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateStatus>(this.Functions.UpdateStatus); return call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt32 unGamePort, string pchGameDir, string pchVersion);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt32 unGamePort, string pchGameDir, string pchVersion) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, nGameAppId, unServerFlags, unGameIP, unGamePort, pchGameDir, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType2(IntPtr thisobj, Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType2(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType2>(this.Functions.SetServerType2); return call(this.ObjectAddress, nGameAppId, unServerFlags, unGameIP, unGamePort, usSpectatorPort, usQueryPort, pchGameDir, pchVersion, bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateStatus2(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateStatus2(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateStatus2>(this.Functions.UpdateStatus2); return call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pSpectatorServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateUnauthenticatedUser(IntPtr thisobj, ref UInt64 pSteamID);
		public Int32 CreateUnauthenticatedUser(ref UInt64 pSteamID) { var call = this.GetFunction<NativeCreateUnauthenticatedUser>(this.Functions.CreateUnauthenticatedUser); return call(this.ObjectAddress, ref pSteamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeSetUserData>(this.Functions.SetUserData); return call(this.ObjectAddress, steamIDUser, pchPlayerName, uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, pchGameType); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking006VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListNearValueFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr SetLobbyType;
		public IntPtr GetLobbyOwner;
	}
	
	public class ISteamMatchmaking006 : NativeWrapper<ISteamMatchmaking006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch);
		public void AddRequestLobbyListFilter(string pchKeyToMatch, string pchValueToMatch) { var call = this.GetFunction<NativeAddRequestLobbyListFilter>(this.Functions.AddRequestLobbyListFilter); call(this.ObjectAddress, pchKeyToMatch, pchValueToMatch); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, pchKeyToMatch, nValueToMatch, nComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNearValueFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToBeCloseTo);
		public void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, Int32 nValueToBeCloseTo) { var call = this.GetFunction<NativeAddRequestLobbyListNearValueFilter>(this.Functions.AddRequestLobbyListNearValueFilter); call(this.ObjectAddress, pchKeyToMatch, nValueToBeCloseTo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyByIndex(IntPtr thisobj, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); return call(this.ObjectAddress, iLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateLobby(IntPtr thisobj, ELobbyType eLobbyType);
		public UInt64 CreateLobby(ELobbyType eLobbyType) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); return call(this.ObjectAddress, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyMemberByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); return call(this.ObjectAddress, steamIDLobby, iMember); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return call(this.ObjectAddress, steamIDLobby, steamIDUser, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyType(IntPtr thisobj, UInt64 steamIDLobby, ELobbyType eLobbyType);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyType(UInt64 steamIDLobby, ELobbyType eLobbyType) { var call = this.GetFunction<NativeSetLobbyType>(this.Functions.SetLobbyType); return call(this.ObjectAddress, steamIDLobby, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyOwner(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 GetLobbyOwner(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyOwner>(this.Functions.GetLobbyOwner); return call(this.ObjectAddress, steamIDLobby); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamNetworking002VTable
	{
		public IntPtr CreateListenSocket;
		public IntPtr CreateP2PConnectionSocket;
		public IntPtr CreateConnectionSocket;
		public IntPtr DestroySocket;
		public IntPtr DestroyListenSocket;
		public IntPtr SendDataOnSocket;
		public IntPtr IsDataAvailableOnSocket;
		public IntPtr RetrieveDataFromSocket;
		public IntPtr IsDataAvailable;
		public IntPtr RetrieveData;
		public IntPtr GetSocketInfo;
		public IntPtr GetListenSocketInfo;
		public IntPtr GetSocketConnectionType;
		public IntPtr GetMaxPacketSize;
	}
	
	public class ISteamNetworking002 : NativeWrapper<ISteamNetworking002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateListenSocket(IntPtr thisobj, Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateListenSocket(Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateListenSocket>(this.Functions.CreateListenSocket); return call(this.ObjectAddress, nVirtualP2PPort, nIP, nPort, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateP2PConnectionSocket(IntPtr thisobj, UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateP2PConnectionSocket(UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateP2PConnectionSocket>(this.Functions.CreateP2PConnectionSocket); return call(this.ObjectAddress, steamIDTarget, nVirtualPort, nTimeoutSec, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateConnectionSocket(IntPtr thisobj, UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec);
		public UInt32 CreateConnectionSocket(UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateConnectionSocket>(this.Functions.CreateConnectionSocket); return call(this.ObjectAddress, nIP, nPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroySocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroySocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroySocket>(this.Functions.DestroySocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroyListenSocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroyListenSocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroyListenSocket>(this.Functions.DestroyListenSocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendDataOnSocket(IntPtr thisobj, UInt32 hSocket, IntPtr pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendDataOnSocket(UInt32 hSocket, IntPtr pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable) { var call = this.GetFunction<NativeSendDataOnSocket>(this.Functions.SendDataOnSocket); return call(this.ObjectAddress, hSocket, pubData, cubData, bReliable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailableOnSocket(IntPtr thisobj, UInt32 hSocket, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailableOnSocket(UInt32 hSocket, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsDataAvailableOnSocket>(this.Functions.IsDataAvailableOnSocket); return call(this.ObjectAddress, hSocket, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveDataFromSocket(IntPtr thisobj, UInt32 hSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveDataFromSocket(UInt32 hSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveDataFromSocket>(this.Functions.RetrieveDataFromSocket); return call(this.ObjectAddress, hSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailable(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailable(UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeIsDataAvailable>(this.Functions.IsDataAvailable); return call(this.ObjectAddress, hListenSocket, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveData(IntPtr thisobj, UInt32 hListenSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveData(UInt32 hListenSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeRetrieveData>(this.Functions.RetrieveData); return call(this.ObjectAddress, hListenSocket, pubDest, cubDest, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSocketInfo(IntPtr thisobj, UInt32 hSocket, ref UInt64 pSteamIDRemote, ref ESNetSocketState peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSocketInfo(UInt32 hSocket, ref UInt64 pSteamIDRemote, ref ESNetSocketState peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote) { var call = this.GetFunction<NativeGetSocketInfo>(this.Functions.GetSocketInfo); return call(this.ObjectAddress, hSocket, ref pSteamIDRemote, ref peSocketStatus, ref punIPRemote, ref punPortRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetListenSocketInfo(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetListenSocketInfo(UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort) { var call = this.GetFunction<NativeGetListenSocketInfo>(this.Functions.GetListenSocketInfo); return call(this.ObjectAddress, hListenSocket, ref pnIP, ref pnPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESNetSocketConnectionType NativeGetSocketConnectionType(IntPtr thisobj, UInt32 hSocket);
		public ESNetSocketConnectionType GetSocketConnectionType(UInt32 hSocket) { var call = this.GetFunction<NativeGetSocketConnectionType>(this.Functions.GetSocketConnectionType); return call(this.ObjectAddress, hSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMaxPacketSize(IntPtr thisobj, UInt32 hSocket);
		public Int32 GetMaxPacketSize(UInt32 hSocket) { var call = this.GetFunction<NativeGetMaxPacketSize>(this.Functions.GetMaxPacketSize); return call(this.ObjectAddress, hSocket); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientUtilsVTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
		public IntPtr GetIPCountry;
		public IntPtr LoadFileFromCDN;
		public IntPtr WriteCDNFileToDisk;
		public IntPtr GetImageSize;
		public IntPtr GetImageRGBA;
		public IntPtr GetCSERIPPort;
		public IntPtr GetNumRunningApps;
		public IntPtr GetCurrentBatteryPower;
		public IntPtr SetOfflineMode;
		public IntPtr GetOfflineMode;
		public IntPtr SetAppIDForCurrentPipe;
		public IntPtr GetAppID;
		public IntPtr SetAPIDebuggingActive;
		public IntPtr IsAPICallCompleted;
		public IntPtr GetAPICallFailureReason;
		public IntPtr GetAPICallResult;
		public IntPtr SignalAppsToShutDown;
		public IntPtr GetCellID;
	}
	
	public class IClientUtils : NativeWrapper<IClientUtilsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLoadFileFromCDN(IntPtr thisobj, string arg1, [MarshalAs(UnmanagedType.I1)] ref bool arg2, Int32 arg3, UInt64 uint64);
		public Int32 LoadFileFromCDN(string arg1, [MarshalAs(UnmanagedType.I1)] ref bool arg2, Int32 arg3, UInt64 uint64) { var call = this.GetFunction<NativeLoadFileFromCDN>(this.Functions.LoadFileFromCDN); return call(this.ObjectAddress, arg1, ref arg2, arg3, uint64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeWriteCDNFileToDisk(IntPtr thisobj, Int32 arg1, string arg2);
		public Int32 WriteCDNFileToDisk(Int32 arg1, string arg2) { var call = this.GetFunction<NativeWriteCDNFileToDisk>(this.Functions.WriteCDNFileToDisk); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSize(IntPtr thisobj, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageSize(Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight) { var call = this.GetFunction<NativeGetImageSize>(this.Functions.GetImageSize); return call(this.ObjectAddress, iImage, ref pnWidth, ref pnHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBA(IntPtr thisobj, Int32 iImage, byte[] pubDest, Int32 nDestBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageRGBA(Int32 iImage, byte[] pubDest, Int32 nDestBufferSize) { var call = this.GetFunction<NativeGetImageRGBA>(this.Functions.GetImageRGBA); return call(this.ObjectAddress, iImage, pubDest, nDestBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPort(IntPtr thisobj, ref UInt32 unIP, ref UInt16 usPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCSERIPPort(ref UInt32 unIP, ref UInt16 usPort) { var call = this.GetFunction<NativeGetCSERIPPort>(this.Functions.GetCSERIPPort); return call(this.ObjectAddress, ref unIP, ref usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumRunningApps(IntPtr thisobj);
		public UInt32 GetNumRunningApps() { var call = this.GetFunction<NativeGetNumRunningApps>(this.Functions.GetNumRunningApps); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower(IntPtr thisobj);
		public Byte GetCurrentBatteryPower() { var call = this.GetFunction<NativeGetCurrentBatteryPower>(this.Functions.GetCurrentBatteryPower); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetOfflineMode(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool arg1);
		public Int32 SetOfflineMode([MarshalAs(UnmanagedType.I1)] bool arg1) { var call = this.GetFunction<NativeSetOfflineMode>(this.Functions.SetOfflineMode); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetOfflineMode(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetOfflineMode() { var call = this.GetFunction<NativeGetOfflineMode>(this.Functions.GetOfflineMode); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAppIDForCurrentPipe(IntPtr thisobj, UInt32 appId);
		public void SetAppIDForCurrentPipe(UInt32 appId) { var call = this.GetFunction<NativeSetAppIDForCurrentPipe>(this.Functions.SetAppIDForCurrentPipe); call(this.ObjectAddress, appId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppID(IntPtr thisobj);
		public UInt32 GetAppID() { var call = this.GetFunction<NativeGetAppID>(this.Functions.GetAppID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetAPIDebuggingActive(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool arg1, [MarshalAs(UnmanagedType.I1)] bool arg2);
		public Int32 SetAPIDebuggingActive([MarshalAs(UnmanagedType.I1)] bool arg1, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeSetAPIDebuggingActive>(this.Functions.SetAPIDebuggingActive); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsAPICallCompleted(IntPtr thisobj, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] ref bool arg2);
		public Int32 IsAPICallCompleted(UInt64 uint64, [MarshalAs(UnmanagedType.I1)] ref bool arg2) { var call = this.GetFunction<NativeIsAPICallCompleted>(this.Functions.IsAPICallCompleted); return call(this.ObjectAddress, uint64, ref arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAPICallFailureReason(IntPtr thisobj, UInt64 uint64);
		public Int32 GetAPICallFailureReason(UInt64 uint64) { var call = this.GetFunction<NativeGetAPICallFailureReason>(this.Functions.GetAPICallFailureReason); return call(this.ObjectAddress, uint64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAPICallResult(IntPtr thisobj, UInt64 uint64, IntPtr arg2, Int32 arg3, Int32 arg4, [MarshalAs(UnmanagedType.I1)] ref bool arg5);
		public Int32 GetAPICallResult(UInt64 uint64, IntPtr arg2, Int32 arg3, Int32 arg4, [MarshalAs(UnmanagedType.I1)] ref bool arg5) { var call = this.GetFunction<NativeGetAPICallResult>(this.Functions.GetAPICallResult); return call(this.ObjectAddress, uint64, arg2, arg3, arg4, ref arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSignalAppsToShutDown(IntPtr thisobj);
		public Int32 SignalAppsToShutDown() { var call = this.GetFunction<NativeSignalAppsToShutDown>(this.Functions.SignalAppsToShutDown); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCellID(IntPtr thisobj);
		public Int32 GetCellID() { var call = this.GetFunction<NativeGetCellID>(this.Functions.GetCellID); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientDepotBuilderVTable
	{
		public IntPtr InitializeDepotBuildForConfigFile;
		public IntPtr GetDepotBuildStatus;
		public IntPtr CloseDepotBuildHandle;
		public IntPtr ReconstructDepotFromManifestAndChunks;
	}
	
	public class IClientDepotBuilder : NativeWrapper<IClientDepotBuilderVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeInitializeDepotBuildForConfigFile(IntPtr thisobj, string pchConfigFile);
		public UInt32 InitializeDepotBuildForConfigFile(string pchConfigFile) { var call = this.GetFunction<NativeInitializeDepotBuildForConfigFile>(this.Functions.InitializeDepotBuildForConfigFile); return call(this.ObjectAddress, pchConfigFile); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetDepotBuildStatus(IntPtr thisobj, UInt32 hDepotBuild, ref EDepotBuildStatus pStatusOut, ref UInt32 pPercentDone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetDepotBuildStatus(UInt32 hDepotBuild, ref EDepotBuildStatus pStatusOut, ref UInt32 pPercentDone) { var call = this.GetFunction<NativeGetDepotBuildStatus>(this.Functions.GetDepotBuildStatus); return call(this.ObjectAddress, hDepotBuild, ref pStatusOut, ref pPercentDone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCloseDepotBuildHandle(IntPtr thisobj, UInt32 hDepotBuild);
		[return: MarshalAs(UnmanagedType.I1)] public bool CloseDepotBuildHandle(UInt32 hDepotBuild) { var call = this.GetFunction<NativeCloseDepotBuildHandle>(this.Functions.CloseDepotBuildHandle); return call(this.ObjectAddress, hDepotBuild); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeReconstructDepotFromManifestAndChunks(IntPtr thisobj, string a, string b, string c);
		public Int32 ReconstructDepotFromManifestAndChunks(string a, string b, string c) { var call = this.GetFunction<NativeReconstructDepotFromManifestAndChunks>(this.Functions.ReconstructDepotFromManifestAndChunks); return call(this.ObjectAddress, a, b, c); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends002VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr SetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr SetFriendRegValue;
		public IntPtr GetFriendRegValue;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr AddFriend;
		public IntPtr RemoveFriend;
		public IntPtr HasFriend;
		public IntPtr AddFriendByName;
		public IntPtr InviteFriendByEmail;
		public IntPtr GetChatMessage;
		public IntPtr SendMsgToFriend;
		public IntPtr GetChatIDOfChatHistoryStart;
		public IntPtr SetChatHistoryStart;
		public IntPtr ClearChatHistory;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr InviteFriendToClan;
		public IntPtr AcknowledgeInviteToClan;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
	}
	
	public class ISteamFriends002 : NativeWrapper<ISteamFriends002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, pchPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaState(IntPtr thisobj, EPersonaState ePersonaState);
		public void SetPersonaState(EPersonaState ePersonaState) { var call = this.GetFunction<NativeSetPersonaState>(this.Functions.SetPersonaState); call(this.ObjectAddress, ePersonaState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, Int32 iFriendFlags);
		public Int32 GetFriendCount(Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendByIndex(IntPtr thisobj, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); return call(this.ObjectAddress, iFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey, string pchValue);
		public void SetFriendRegValue(UInt64 steamIDFriend, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetFriendRegValue>(this.Functions.SetFriendRegValue); call(this.ObjectAddress, steamIDFriend, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey);
		public string GetFriendRegValue(UInt64 steamIDFriend, string pchKey) { var call = this.GetFunction<NativeGetFriendRegValue>(this.Functions.GetFriendRegValue); return call(this.ObjectAddress, steamIDFriend, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pulGameID, ref punGameIP, ref pusGamePort, ref pusQueryPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return call(this.ObjectAddress, steamIDFriend, iPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddFriend(IntPtr thisobj, UInt64 steamIDFriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddFriend(UInt64 steamIDFriend) { var call = this.GetFunction<NativeAddFriend>(this.Functions.AddFriend); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFriend(IntPtr thisobj, UInt64 steamIDFriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFriend(UInt64 steamIDFriend) { var call = this.GetFunction<NativeRemoveFriend>(this.Functions.RemoveFriend); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, Int32 iFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFriendByName(IntPtr thisobj, string pchEmailOrAccountName);
		public Int32 AddFriendByName(string pchEmailOrAccountName) { var call = this.GetFunction<NativeAddFriendByName>(this.Functions.AddFriendByName); return call(this.ObjectAddress, pchEmailOrAccountName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInviteFriendByEmail(IntPtr thisobj, string emailAddr);
		public Int32 InviteFriendByEmail(string emailAddr) { var call = this.GetFunction<NativeInviteFriendByEmail>(this.Functions.InviteFriendByEmail); return call(this.ObjectAddress, emailAddr); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatMessage(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID, IntPtr pvData, Int32 cubData, ref EChatEntryType peFriendMsgType);
		public Int32 GetChatMessage(UInt64 steamIDFriend, Int32 iChatID, IntPtr pvData, Int32 cubData, ref EChatEntryType peFriendMsgType) { var call = this.GetFunction<NativeGetChatMessage>(this.Functions.GetChatMessage); return call(this.ObjectAddress, steamIDFriend, iChatID, pvData, cubData, ref peFriendMsgType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendMsgToFriend(IntPtr thisobj, UInt64 steamIDFriend, EChatEntryType eFriendMsgType, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendMsgToFriend(UInt64 steamIDFriend, EChatEntryType eFriendMsgType, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendMsgToFriend>(this.Functions.SendMsgToFriend); return call(this.ObjectAddress, steamIDFriend, eFriendMsgType, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatIDOfChatHistoryStart(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetChatIDOfChatHistoryStart(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetChatIDOfChatHistoryStart>(this.Functions.GetChatIDOfChatHistoryStart); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetChatHistoryStart(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID);
		public void SetChatHistoryStart(UInt64 steamIDFriend, Int32 iChatID) { var call = this.GetFunction<NativeSetChatHistoryStart>(this.Functions.SetChatHistoryStart); call(this.ObjectAddress, steamIDFriend, iChatID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearChatHistory(IntPtr thisobj, UInt64 steamIDFriend);
		public void ClearChatHistory(UInt64 steamIDFriend) { var call = this.GetFunction<NativeClearChatHistory>(this.Functions.ClearChatHistory); call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetClanByIndex(IntPtr thisobj, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); return call(this.ObjectAddress, iClan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return call(this.ObjectAddress, steamIDClan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInviteFriendToClan(IntPtr thisobj, UInt64 steamIDfriend, UInt64 steamIDclan);
		public Int32 InviteFriendToClan(UInt64 steamIDfriend, UInt64 steamIDclan) { var call = this.GetFunction<NativeInviteFriendToClan>(this.Functions.InviteFriendToClan); return call(this.ObjectAddress, steamIDfriend, steamIDclan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAcknowledgeInviteToClan(IntPtr thisobj, UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool arg2);
		public Int32 AcknowledgeInviteToClan(UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeAcknowledgeInviteToClan>(this.Functions.AcknowledgeInviteToClan); return call(this.ObjectAddress, steamID, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendFromSourceByIndex(IntPtr thisobj, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); return call(this.ObjectAddress, steamIDSource, iFriend); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends003VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr GetFriendAvatar;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr HasFriend;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
		public IntPtr IsUserInSource;
		public IntPtr SetInGameVoiceSpeaking;
		public IntPtr ActivateGameOverlay;
	}
	
	public class ISteamFriends003 : NativeWrapper<ISteamFriends003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, pchPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, Int32 iFriendFlags);
		public Int32 GetFriendCount(Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendByIndex(IntPtr thisobj, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); return call(this.ObjectAddress, iFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendAvatar>(this.Functions.GetFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pulGameID, ref punGameIP, ref pusGamePort, ref pusQueryPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return call(this.ObjectAddress, steamIDFriend, iPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, Int32 iFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetClanByIndex(IntPtr thisobj, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); return call(this.ObjectAddress, iClan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return call(this.ObjectAddress, steamIDClan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendFromSourceByIndex(IntPtr thisobj, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); return call(this.ObjectAddress, steamIDSource, iFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDUser, bSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, pchDialog); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends004VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr GetFriendAvatar;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr HasFriend;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
		public IntPtr IsUserInSource;
		public IntPtr SetInGameVoiceSpeaking;
		public IntPtr ActivateGameOverlay;
	}
	
	public class ISteamFriends004 : NativeWrapper<ISteamFriends004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, pchPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, Int32 iFriendFlags);
		public Int32 GetFriendCount(Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendByIndex(IntPtr thisobj, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); return call(this.ObjectAddress, iFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend, Int32 eAvatarSize);
		public Int32 GetFriendAvatar(UInt64 steamIDFriend, Int32 eAvatarSize) { var call = this.GetFunction<NativeGetFriendAvatar>(this.Functions.GetFriendAvatar); return call(this.ObjectAddress, steamIDFriend, eAvatarSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pulGameID, ref punGameIP, ref pusGamePort, ref pusQueryPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return call(this.ObjectAddress, steamIDFriend, iPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, Int32 iFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetClanByIndex(IntPtr thisobj, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); return call(this.ObjectAddress, iClan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return call(this.ObjectAddress, steamIDClan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendFromSourceByIndex(IntPtr thisobj, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); return call(this.ObjectAddress, steamIDSource, iFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDUser, bSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, pchDialog); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends005VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr GetFriendAvatar;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr HasFriend;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
		public IntPtr IsUserInSource;
		public IntPtr SetInGameVoiceSpeaking;
		public IntPtr ActivateGameOverlay;
		public IntPtr ActivateGameOverlayToUser;
		public IntPtr ActivateGameOverlayToWebPage;
		public IntPtr ActivateGameOverlayToStore;
	}
	
	public class ISteamFriends005 : NativeWrapper<ISteamFriends005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, pchPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, Int32 iFriendFlags);
		public Int32 GetFriendCount(Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendByIndex(IntPtr thisobj, Int32 iFriend, Int32 iFriendFlags);
        [return: MarshalAs(UnmanagedType.U8)]
        public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); return call(this.ObjectAddress, iFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend, Int32 eAvatarSize);
		public Int32 GetFriendAvatar(UInt64 steamIDFriend, Int32 eAvatarSize) { var call = this.GetFunction<NativeGetFriendAvatar>(this.Functions.GetFriendAvatar); return call(this.ObjectAddress, steamIDFriend, eAvatarSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pFriendGameInfo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return call(this.ObjectAddress, steamIDFriend, iPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, Int32 iFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetClanByIndex(IntPtr thisobj, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); return call(this.ObjectAddress, iClan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return call(this.ObjectAddress, steamIDClan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendFromSourceByIndex(IntPtr thisobj, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); return call(this.ObjectAddress, steamIDSource, iFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDUser, bSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, pchDialog); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToUser(IntPtr thisobj, string pchDialog, UInt64 steamID);
		public void ActivateGameOverlayToUser(string pchDialog, UInt64 steamID) { var call = this.GetFunction<NativeActivateGameOverlayToUser>(this.Functions.ActivateGameOverlayToUser); call(this.ObjectAddress, pchDialog, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToWebPage(IntPtr thisobj, string pchURL);
		public void ActivateGameOverlayToWebPage(string pchURL) { var call = this.GetFunction<NativeActivateGameOverlayToWebPage>(this.Functions.ActivateGameOverlayToWebPage); call(this.ObjectAddress, pchURL); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToStore(IntPtr thisobj, UInt32 nAppID);
		public void ActivateGameOverlayToStore(UInt32 nAppID) { var call = this.GetFunction<NativeActivateGameOverlayToStore>(this.Functions.ActivateGameOverlayToStore); call(this.ObjectAddress, nAppID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientFriendsVTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr IsPersonaNameSet;
		public IntPtr GetPersonaState;
		public IntPtr SetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr SetFriendAlias;
		public IntPtr GetFriendAvatar;
		public IntPtr SetFriendRegValue;
		public IntPtr GetFriendRegValue;
		public IntPtr DeleteFriendRegValue;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendGamePlayedExtraInfo;
		public IntPtr GetFriendGameServer;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr AddFriend;
		public IntPtr RemoveFriend;
		public IntPtr HasFriend;
		public IntPtr AddFriendByName;
		public IntPtr InviteFriendByEmail;
		public IntPtr RequestUserInformation;
		public IntPtr SetIgnoreFriend;
		public IntPtr ReportChatDeclined;
		public IntPtr GetChatMessage;
		public IntPtr SendMsgToFriend;
		public IntPtr GetChatIDOfChatHistoryStart;
		public IntPtr SetChatHistoryStart;
		public IntPtr ClearChatHistory;
		public IntPtr GetKnownClanCount;
		public IntPtr GetKnownClanByIndex;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr GetClanActivityCounts;
		public IntPtr IsClanPublic;
		public IntPtr IsClanLarge;
		public IntPtr InviteFriendToClan;
		public IntPtr AcknowledgeInviteToClan;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
		public IntPtr IsUserInSource;
		public IntPtr GetCoplayFriendCount;
		public IntPtr GetCoplayFriend;
		public IntPtr GetFriendCoplayTime;
		public IntPtr GetFriendCoplayGame;
		public IntPtr JoinChatRoom;
		public IntPtr LeaveChatRoom;
		public IntPtr InviteUserToChatRoom;
		public IntPtr SendChatMsg;
		public IntPtr GetChatRoomEntry;
		public IntPtr GetChatIDOfChatRoomHistoryStart;
		public IntPtr SetChatRoomHistoryStart;
		public IntPtr ClearChatRoomHistory;
		public IntPtr SerializeChatRoomDlg;
		public IntPtr GetSizeOfSerializedChatRoomDlg;
		public IntPtr GetSerializedChatRoomDlg;
		public IntPtr ClearSerializedChatRoomDlg;
		public IntPtr KickChatMember;
		public IntPtr BanChatMember;
		public IntPtr UnBanChatMember;
		public IntPtr SetChatRoomType;
		public IntPtr GetChatRoomLockState;
		public IntPtr GetChatRoomPermissions;
		public IntPtr SetChatRoomModerated;
		public IntPtr ChatRoomModerated;
		public IntPtr NotifyChatRoomDlgsOfUIChange;
		public IntPtr TerminateChatRoom;
		public IntPtr GetChatRoomCount;
		public IntPtr GetChatRoomByIndex;
		public IntPtr GetChatRoomName;
		public IntPtr GetChatRoomMemberDetails;
		public IntPtr CreateChatRoom;
		public IntPtr GetChatRoomMetadata;
		public IntPtr SetChatRoomMetadata;
		public IntPtr SetChatRoomPermissions;
		public IntPtr VoiceCall;
		public IntPtr VoiceHangUp;
		public IntPtr SetVoiceSpeakerVolume;
		public IntPtr SetVoiceMicrophoneVolume;
		public IntPtr SetAutoAnswer;
		public IntPtr VoiceAnswer;
		public IntPtr VoicePutOnHold;
		public IntPtr VoiceIsLocalOnHold;
		public IntPtr VoiceIsRemoteOnHold;
		public IntPtr SetDoNotDisturb;
		public IntPtr EnableVoiceNotificationSounds;
		public IntPtr SetPushToTalkEnabled;
		public IntPtr IsPushToTalkEnabled;
		public IntPtr SetPushToTalkKey;
		public IntPtr GetPushToTalkKey;
		public IntPtr IsPushToTalkKeyDown;
		public IntPtr EnableVoiceCalibration;
		public IntPtr IsVoiceCalibrating;
		public IntPtr GetVoiceCalibrationSamplePeak;
		public IntPtr SetForceMicRecord;
		public IntPtr GetForceMicRecord;
		public IntPtr SetMicBoost;
		public IntPtr GetMicBoost;
		public IntPtr HasHardwareMicBoost;
		public IntPtr GetMicDeviceName;
		public IntPtr StartTalking;
		public IntPtr EndTalking;
		public IntPtr VoiceIsValid;
		public IntPtr SetAutoReflectVoice;
		public IntPtr GetCallState;
		public IntPtr GetVoiceMicrophoneVolume;
		public IntPtr GetVoiceSpeakerVolume;
		public IntPtr TimeSinceLastVoiceDataReceived;
		public IntPtr TimeSinceLastVoiceDataSend;
		public IntPtr CanSend;
		public IntPtr CanReceive;
		public IntPtr GetEstimatedBitsPerSecond;
		public IntPtr GetPeakSample;
		public IntPtr SendResumeRequest;
		public IntPtr OpenChatDialog;
		public IntPtr StartChatRoomVoiceSpeaking;
		public IntPtr EndChatRoomVoiceSpeaking;
		public IntPtr GetFriendLastLogonTime;
		public IntPtr GetFriendLastLogoffTime;
		public IntPtr GetChatRoomVoiceTotalSlotCount;
		public IntPtr GetChatRoomVoiceUsedSlotCount;
		public IntPtr GetChatRoomVoiceUsedSlot;
		public IntPtr GetChatRoomVoiceStatus;
		public IntPtr ChatRoomHasAvailableVoiceSlots;
		public IntPtr IsChatRoomVoiceSpeaking;
		public IntPtr GetChatRoomPeakSample;
		public IntPtr ChatRoomVoiceRetryConnections;
		public IntPtr SetPortTypes;
		public IntPtr ReinitAudio;
		public IntPtr SetInGameVoiceSpeaking;
		public IntPtr ActivateGameOverlay;
		public IntPtr ActivateGameOverlayToUser;
		public IntPtr ActivateGameOverlayToWebPage;
		public IntPtr ActivateGameOverlayToStore;
		public IntPtr NotifyGameOverlayStateChanged;
		public IntPtr NotifyGameServerChangeRequested;
		public IntPtr NotifyLobbyJoinRequested;
		public IntPtr GetClanRelationship;
		public IntPtr GetFriendClanRank;
		public IntPtr VoiceIsAvailable;
		public IntPtr TestVoiceDisconnect;
		public IntPtr TestChatRoomPeerDisconnect;
		public IntPtr TestVoicePacketLoss;
		public IntPtr FindFriendVoiceChatHandle;
	}
	
	public class IClientFriends : NativeWrapper<IClientFriendsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, pchPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPersonaNameSet(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPersonaNameSet() { var call = this.GetFunction<NativeIsPersonaNameSet>(this.Functions.IsPersonaNameSet); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaState(IntPtr thisobj, EPersonaState ePersonaState);
		public void SetPersonaState(EPersonaState ePersonaState) { var call = this.GetFunction<NativeSetPersonaState>(this.Functions.SetPersonaState); call(this.ObjectAddress, ePersonaState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, Int32 iFriendFlags);
		public Int32 GetFriendCount(Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendByIndex(IntPtr thisobj, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); return call(this.ObjectAddress, iFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetFriendAlias(IntPtr thisobj, UInt64 steamIDFriend, string pchAlias);
		public void SetFriendAlias(UInt64 steamIDFriend, string pchAlias) { var call = this.GetFunction<NativeSetFriendAlias>(this.Functions.SetFriendAlias); call(this.ObjectAddress, steamIDFriend, pchAlias); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend, Int32 a);
		public Int32 GetFriendAvatar(UInt64 steamIDFriend, Int32 a) { var call = this.GetFunction<NativeGetFriendAvatar>(this.Functions.GetFriendAvatar); return call(this.ObjectAddress, steamIDFriend, a); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey, string pchValue);
		public void SetFriendRegValue(UInt64 steamIDFriend, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetFriendRegValue>(this.Functions.SetFriendRegValue); call(this.ObjectAddress, steamIDFriend, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey);
		public string GetFriendRegValue(UInt64 steamIDFriend, string pchKey) { var call = this.GetFunction<NativeGetFriendRegValue>(this.Functions.GetFriendRegValue); return call(this.ObjectAddress, steamIDFriend, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDeleteFriendRegValue(IntPtr thisobj, UInt64 steamID, string pchKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool DeleteFriendRegValue(UInt64 steamID, string pchKey) { var call = this.GetFunction<NativeDeleteFriendRegValue>(this.Functions.DeleteFriendRegValue); return call(this.ObjectAddress, steamID, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamID, ref FriendGameInfo_t arg2);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamID, ref FriendGameInfo_t arg2) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamID, ref arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendGamePlayedExtraInfo(IntPtr thisobj, UInt64 steamID);
		public string GetFriendGamePlayedExtraInfo(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendGamePlayedExtraInfo>(this.Functions.GetFriendGamePlayedExtraInfo); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendGameServer(IntPtr thisobj, UInt64 steamID);
		public UInt64 GetFriendGameServer(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendGameServer>(this.Functions.GetFriendGameServer); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return call(this.ObjectAddress, steamIDFriend, iPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddFriend(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddFriend(UInt64 steamID) { var call = this.GetFunction<NativeAddFriend>(this.Functions.AddFriend); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFriend(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFriend(UInt64 steamID) { var call = this.GetFunction<NativeRemoveFriend>(this.Functions.RemoveFriend); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamID, Int32 iFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamID, Int32 iFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamID, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFriendByName(IntPtr thisobj, string pchEmailOrAccountName);
		public Int32 AddFriendByName(string pchEmailOrAccountName) { var call = this.GetFunction<NativeAddFriendByName>(this.Functions.AddFriendByName); return call(this.ObjectAddress, pchEmailOrAccountName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteFriendByEmail(IntPtr thisobj, string pchEmailAddress);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteFriendByEmail(string pchEmailAddress) { var call = this.GetFunction<NativeInviteFriendByEmail>(this.Functions.InviteFriendByEmail); return call(this.ObjectAddress, pchEmailAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserInformation(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserInformation(UInt64 steamID) { var call = this.GetFunction<NativeRequestUserInformation>(this.Functions.RequestUserInformation); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetIgnoreFriend(IntPtr thisobj, UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool bIgnore);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetIgnoreFriend(UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool bIgnore) { var call = this.GetFunction<NativeSetIgnoreFriend>(this.Functions.SetIgnoreFriend); return call(this.ObjectAddress, steamID, bIgnore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReportChatDeclined(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReportChatDeclined(UInt64 steamID) { var call = this.GetFunction<NativeReportChatDeclined>(this.Functions.ReportChatDeclined); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatMessage(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType, ref UInt64 pSteamIDChatter);
		public Int32 GetChatMessage(UInt64 steamIDFriend, Int32 iChatID, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType, ref UInt64 pSteamIDChatter) { var call = this.GetFunction<NativeGetChatMessage>(this.Functions.GetChatMessage); return call(this.ObjectAddress, steamIDFriend, iChatID, pvData, cubData, ref peChatEntryType, ref pSteamIDChatter); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendMsgToFriend(IntPtr thisobj, UInt64 steamIDFriend, EChatEntryType eChatEntryType, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendMsgToFriend(UInt64 steamIDFriend, EChatEntryType eChatEntryType, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendMsgToFriend>(this.Functions.SendMsgToFriend); return call(this.ObjectAddress, steamIDFriend, eChatEntryType, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatIDOfChatHistoryStart(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetChatIDOfChatHistoryStart(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetChatIDOfChatHistoryStart>(this.Functions.GetChatIDOfChatHistoryStart); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetChatHistoryStart(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID);
		public void SetChatHistoryStart(UInt64 steamIDFriend, Int32 iChatID) { var call = this.GetFunction<NativeSetChatHistoryStart>(this.Functions.SetChatHistoryStart); call(this.ObjectAddress, steamIDFriend, iChatID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearChatHistory(IntPtr thisobj, UInt64 steamIDFriend);
		public void ClearChatHistory(UInt64 steamIDFriend) { var call = this.GetFunction<NativeClearChatHistory>(this.Functions.ClearChatHistory); call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetKnownClanCount(IntPtr thisobj);
		public Int32 GetKnownClanCount() { var call = this.GetFunction<NativeGetKnownClanCount>(this.Functions.GetKnownClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetKnownClanByIndex(IntPtr thisobj, Int32 iClan);
		public UInt64 GetKnownClanByIndex(Int32 iClan) { var call = this.GetFunction<NativeGetKnownClanByIndex>(this.Functions.GetKnownClanByIndex); return call(this.ObjectAddress, iClan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetClanByIndex(IntPtr thisobj, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); return call(this.ObjectAddress, iClan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamID);
		public string GetClanName(UInt64 steamID) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetClanActivityCounts(IntPtr thisobj, UInt64 steamID, ref Int32 pnOnline, ref Int32 pnInGame, ref Int32 pnChatting);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetClanActivityCounts(UInt64 steamID, ref Int32 pnOnline, ref Int32 pnInGame, ref Int32 pnChatting) { var call = this.GetFunction<NativeGetClanActivityCounts>(this.Functions.GetClanActivityCounts); return call(this.ObjectAddress, steamID, ref pnOnline, ref pnInGame, ref pnChatting); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsClanPublic(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsClanPublic(UInt64 steamID) { var call = this.GetFunction<NativeIsClanPublic>(this.Functions.IsClanPublic); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsClanLarge(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsClanLarge(UInt64 steamID) { var call = this.GetFunction<NativeIsClanLarge>(this.Functions.IsClanLarge); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteFriendToClan(IntPtr thisobj, UInt64 steamIDfriend, UInt64 steamIDclan);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteFriendToClan(UInt64 steamIDfriend, UInt64 steamIDclan) { var call = this.GetFunction<NativeInviteFriendToClan>(this.Functions.InviteFriendToClan); return call(this.ObjectAddress, steamIDfriend, steamIDclan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAcknowledgeInviteToClan(IntPtr thisobj, UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool bAcceptOrDenyClanInvite);
		[return: MarshalAs(UnmanagedType.I1)] public bool AcknowledgeInviteToClan(UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool bAcceptOrDenyClanInvite) { var call = this.GetFunction<NativeAcknowledgeInviteToClan>(this.Functions.AcknowledgeInviteToClan); return call(this.ObjectAddress, steamID, bAcceptOrDenyClanInvite); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendFromSourceByIndex(IntPtr thisobj, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); return call(this.ObjectAddress, steamIDSource, iFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCoplayFriendCount(IntPtr thisobj);
		public Int32 GetCoplayFriendCount() { var call = this.GetFunction<NativeGetCoplayFriendCount>(this.Functions.GetCoplayFriendCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetCoplayFriend(IntPtr thisobj, Int32 iCoplayEvent);
		public UInt64 GetCoplayFriend(Int32 iCoplayEvent) { var call = this.GetFunction<NativeGetCoplayFriend>(this.Functions.GetCoplayFriend); return call(this.ObjectAddress, iCoplayEvent); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFriendCoplayTime(IntPtr thisobj, UInt64 steamID);
		public UInt32 GetFriendCoplayTime(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendCoplayTime>(this.Functions.GetFriendCoplayTime); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate CGameID NativeGetFriendCoplayGame(IntPtr thisobj, UInt64 steamID);
		public CGameID GetFriendCoplayGame(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendCoplayGame>(this.Functions.GetFriendCoplayGame); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeJoinChatRoom(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool JoinChatRoom(UInt64 steamID) { var call = this.GetFunction<NativeJoinChatRoom>(this.Functions.JoinChatRoom); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveChatRoom(IntPtr thisobj, UInt64 steamID);
		public void LeaveChatRoom(UInt64 steamID) { var call = this.GetFunction<NativeLeaveChatRoom>(this.Functions.LeaveChatRoom); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToChatRoom(IntPtr thisobj, UInt64 steamIDfriend, UInt64 steamIDchat);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToChatRoom(UInt64 steamIDfriend, UInt64 steamIDchat) { var call = this.GetFunction<NativeInviteUserToChatRoom>(this.Functions.InviteUserToChatRoom); return call(this.ObjectAddress, steamIDfriend, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendChatMsg(IntPtr thisobj, UInt64 steamIDchat, EChatEntryType eChatEntryType, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendChatMsg(UInt64 steamIDchat, EChatEntryType eChatEntryType, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendChatMsg>(this.Functions.SendChatMsg); return call(this.ObjectAddress, steamIDchat, eChatEntryType, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatRoomEntry(IntPtr thisobj, UInt64 steamIDchat, Int32 iChatID, ref UInt64 steamIDuser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetChatRoomEntry(UInt64 steamIDchat, Int32 iChatID, ref UInt64 steamIDuser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetChatRoomEntry>(this.Functions.GetChatRoomEntry); return call(this.ObjectAddress, steamIDchat, iChatID, ref steamIDuser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatIDOfChatRoomHistoryStart(IntPtr thisobj, UInt64 steamIDchat);
		public Int32 GetChatIDOfChatRoomHistoryStart(UInt64 steamIDchat) { var call = this.GetFunction<NativeGetChatIDOfChatRoomHistoryStart>(this.Functions.GetChatIDOfChatRoomHistoryStart); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetChatRoomHistoryStart(IntPtr thisobj, UInt64 steamIDchat, Int32 iChatID);
		public void SetChatRoomHistoryStart(UInt64 steamIDchat, Int32 iChatID) { var call = this.GetFunction<NativeSetChatRoomHistoryStart>(this.Functions.SetChatRoomHistoryStart); call(this.ObjectAddress, steamIDchat, iChatID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearChatRoomHistory(IntPtr thisobj, UInt64 steamID);
		public void ClearChatRoomHistory(UInt64 steamID) { var call = this.GetFunction<NativeClearChatRoomHistory>(this.Functions.ClearChatRoomHistory); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSerializeChatRoomDlg(IntPtr thisobj, UInt64 steamIDchat, IntPtr pvHistory, Int32 cubHistory);
		[return: MarshalAs(UnmanagedType.I1)] public bool SerializeChatRoomDlg(UInt64 steamIDchat, IntPtr pvHistory, Int32 cubHistory) { var call = this.GetFunction<NativeSerializeChatRoomDlg>(this.Functions.SerializeChatRoomDlg); return call(this.ObjectAddress, steamIDchat, pvHistory, cubHistory); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSizeOfSerializedChatRoomDlg(IntPtr thisobj, UInt64 steamIDchat);
		public Int32 GetSizeOfSerializedChatRoomDlg(UInt64 steamIDchat) { var call = this.GetFunction<NativeGetSizeOfSerializedChatRoomDlg>(this.Functions.GetSizeOfSerializedChatRoomDlg); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSerializedChatRoomDlg(IntPtr thisobj, UInt64 steamIDchat, IntPtr pvHistory, Int32 cubBuffer, ref Int32 pcubData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSerializedChatRoomDlg(UInt64 steamIDchat, IntPtr pvHistory, Int32 cubBuffer, ref Int32 pcubData) { var call = this.GetFunction<NativeGetSerializedChatRoomDlg>(this.Functions.GetSerializedChatRoomDlg); return call(this.ObjectAddress, steamIDchat, pvHistory, cubBuffer, ref pcubData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearSerializedChatRoomDlg(IntPtr thisobj, UInt64 steamIDchat);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearSerializedChatRoomDlg(UInt64 steamIDchat) { var call = this.GetFunction<NativeClearSerializedChatRoomDlg>(this.Functions.ClearSerializedChatRoomDlg); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeKickChatMember(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		[return: MarshalAs(UnmanagedType.I1)] public bool KickChatMember(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeKickChatMember>(this.Functions.KickChatMember); return call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBanChatMember(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		[return: MarshalAs(UnmanagedType.I1)] public bool BanChatMember(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeBanChatMember>(this.Functions.BanChatMember); return call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUnBanChatMember(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		[return: MarshalAs(UnmanagedType.I1)] public bool UnBanChatMember(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeUnBanChatMember>(this.Functions.UnBanChatMember); return call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetChatRoomType(IntPtr thisobj, UInt64 steamIDchat, ELobbyType arg2);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetChatRoomType(UInt64 steamIDchat, ELobbyType arg2) { var call = this.GetFunction<NativeSetChatRoomType>(this.Functions.SetChatRoomType); return call(this.ObjectAddress, steamIDchat, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetChatRoomLockState(IntPtr thisobj, UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] ref bool pbLocked);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetChatRoomLockState(UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] ref bool pbLocked) { var call = this.GetFunction<NativeGetChatRoomLockState>(this.Functions.GetChatRoomLockState); return call(this.ObjectAddress, steamIDchat, ref pbLocked); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetChatRoomPermissions(IntPtr thisobj, UInt64 steamIDchat, ref UInt32 arg2);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetChatRoomPermissions(UInt64 steamIDchat, ref UInt32 arg2) { var call = this.GetFunction<NativeGetChatRoomPermissions>(this.Functions.GetChatRoomPermissions); return call(this.ObjectAddress, steamIDchat, ref arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetChatRoomModerated(IntPtr thisobj, UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] bool bModerated);
		public Int32 SetChatRoomModerated(UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] bool bModerated) { var call = this.GetFunction<NativeSetChatRoomModerated>(this.Functions.SetChatRoomModerated); return call(this.ObjectAddress, steamIDchat, bModerated); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeChatRoomModerated(IntPtr thisobj, UInt64 steamIDChat);
		[return: MarshalAs(UnmanagedType.I1)] public bool ChatRoomModerated(UInt64 steamIDChat) { var call = this.GetFunction<NativeChatRoomModerated>(this.Functions.ChatRoomModerated); return call(this.ObjectAddress, steamIDChat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeNotifyChatRoomDlgsOfUIChange(IntPtr thisobj, UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] bool arg2, [MarshalAs(UnmanagedType.I1)] bool arg3, [MarshalAs(UnmanagedType.I1)] bool arg4, [MarshalAs(UnmanagedType.I1)] bool arg5);
		[return: MarshalAs(UnmanagedType.I1)] public bool NotifyChatRoomDlgsOfUIChange(UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] bool arg2, [MarshalAs(UnmanagedType.I1)] bool arg3, [MarshalAs(UnmanagedType.I1)] bool arg4, [MarshalAs(UnmanagedType.I1)] bool arg5) { var call = this.GetFunction<NativeNotifyChatRoomDlgsOfUIChange>(this.Functions.NotifyChatRoomDlgsOfUIChange); return call(this.ObjectAddress, steamIDchat, arg2, arg3, arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeTerminateChatRoom(IntPtr thisobj, UInt64 steamIDchat);
		[return: MarshalAs(UnmanagedType.I1)] public bool TerminateChatRoom(UInt64 steamIDchat) { var call = this.GetFunction<NativeTerminateChatRoom>(this.Functions.TerminateChatRoom); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatRoomCount(IntPtr thisobj);
		public Int32 GetChatRoomCount() { var call = this.GetFunction<NativeGetChatRoomCount>(this.Functions.GetChatRoomCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetChatRoomByIndex(IntPtr thisobj, Int32 iChatRoom);
		public UInt64 GetChatRoomByIndex(Int32 iChatRoom) { var call = this.GetFunction<NativeGetChatRoomByIndex>(this.Functions.GetChatRoomByIndex); return call(this.ObjectAddress, iChatRoom); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetChatRoomName(IntPtr thisobj, UInt64 steamIDchat);
		public string GetChatRoomName(UInt64 steamIDchat) { var call = this.GetFunction<NativeGetChatRoomName>(this.Functions.GetChatRoomName); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetChatRoomMemberDetails(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser, ref UInt32 pChatMemberDetails, ref UInt32 pChatMemberDetailsLocal);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetChatRoomMemberDetails(UInt64 steamIDchat, UInt64 steamIDuser, ref UInt32 pChatMemberDetails, ref UInt32 pChatMemberDetailsLocal) { var call = this.GetFunction<NativeGetChatRoomMemberDetails>(this.Functions.GetChatRoomMemberDetails); return call(this.ObjectAddress, steamIDchat, steamIDuser, ref pChatMemberDetails, ref pChatMemberDetailsLocal); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateChatRoom(IntPtr thisobj, EChatRoomType eType, UInt64 ulGameID, string pchName, ELobbyType eLobbyType, UInt64 steamIDClan, UInt64 steamIDFriendChat, UInt64 steamIDInvited, UInt32 chatPermissionOfficer, UInt32 chatPermissionMember, UInt32 chatPermissionAll);
		public void CreateChatRoom(EChatRoomType eType, UInt64 ulGameID, string pchName, ELobbyType eLobbyType, UInt64 steamIDClan, UInt64 steamIDFriendChat, UInt64 steamIDInvited, UInt32 chatPermissionOfficer, UInt32 chatPermissionMember, UInt32 chatPermissionAll) { var call = this.GetFunction<NativeCreateChatRoom>(this.Functions.CreateChatRoom); call(this.ObjectAddress, eType, ulGameID, pchName, eLobbyType, steamIDClan, steamIDFriendChat, steamIDInvited, chatPermissionOfficer, chatPermissionMember, chatPermissionAll); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetChatRoomMetadata(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser, string pchKey);
		public string GetChatRoomMetadata(UInt64 steamIDchat, UInt64 steamIDuser, string pchKey) { var call = this.GetFunction<NativeGetChatRoomMetadata>(this.Functions.GetChatRoomMetadata); return call(this.ObjectAddress, steamIDchat, steamIDuser, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetChatRoomMetadata(IntPtr thisobj, UInt64 steamIDChat, UInt64 steamIDMember, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetChatRoomMetadata(UInt64 steamIDChat, UInt64 steamIDMember, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetChatRoomMetadata>(this.Functions.SetChatRoomMetadata); return call(this.ObjectAddress, steamIDChat, steamIDMember, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetChatRoomPermissions(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDmemeber, UInt32 permissions, [MarshalAs(UnmanagedType.I1)] bool bMakeOwner);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetChatRoomPermissions(UInt64 steamIDchat, UInt64 steamIDmemeber, UInt32 permissions, [MarshalAs(UnmanagedType.I1)] bool bMakeOwner) { var call = this.GetFunction<NativeSetChatRoomPermissions>(this.Functions.SetChatRoomPermissions); return call(this.ObjectAddress, steamIDchat, steamIDmemeber, permissions, bMakeOwner); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeVoiceCall(IntPtr thisobj, UInt64 steamIDlocal, UInt64 steamIDremote);
		public void VoiceCall(UInt64 steamIDlocal, UInt64 steamIDremote) { var call = this.GetFunction<NativeVoiceCall>(this.Functions.VoiceCall); call(this.ObjectAddress, steamIDlocal, steamIDremote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeVoiceHangUp(IntPtr thisobj, Int32 hVoiceCall);
		public void VoiceHangUp(Int32 hVoiceCall) { var call = this.GetFunction<NativeVoiceHangUp>(this.Functions.VoiceHangUp); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetVoiceSpeakerVolume(IntPtr thisobj, float flVolume);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetVoiceSpeakerVolume(float flVolume) { var call = this.GetFunction<NativeSetVoiceSpeakerVolume>(this.Functions.SetVoiceSpeakerVolume); return call(this.ObjectAddress, flVolume); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetVoiceMicrophoneVolume(IntPtr thisobj, float flVolume);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetVoiceMicrophoneVolume(float flVolume) { var call = this.GetFunction<NativeSetVoiceMicrophoneVolume>(this.Functions.SetVoiceMicrophoneVolume); return call(this.ObjectAddress, flVolume); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAutoAnswer(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAutoAnswer);
		public void SetAutoAnswer([MarshalAs(UnmanagedType.I1)] bool bAutoAnswer) { var call = this.GetFunction<NativeSetAutoAnswer>(this.Functions.SetAutoAnswer); call(this.ObjectAddress, bAutoAnswer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeVoiceAnswer(IntPtr thisobj, Int32 hVoiceCall);
		public void VoiceAnswer(Int32 hVoiceCall) { var call = this.GetFunction<NativeVoiceAnswer>(this.Functions.VoiceAnswer); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeVoicePutOnHold(IntPtr thisobj, Int32 HVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bOnLocalHold);
		public void VoicePutOnHold(Int32 HVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bOnLocalHold) { var call = this.GetFunction<NativeVoicePutOnHold>(this.Functions.VoicePutOnHold); call(this.ObjectAddress, HVoiceCall, bOnLocalHold); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeVoiceIsLocalOnHold(IntPtr thisobj, Int32 hVoiceCall);
		[return: MarshalAs(UnmanagedType.I1)] public bool VoiceIsLocalOnHold(Int32 hVoiceCall) { var call = this.GetFunction<NativeVoiceIsLocalOnHold>(this.Functions.VoiceIsLocalOnHold); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeVoiceIsRemoteOnHold(IntPtr thisobj, Int32 hVoiceCall);
		[return: MarshalAs(UnmanagedType.I1)] public bool VoiceIsRemoteOnHold(Int32 hVoiceCall) { var call = this.GetFunction<NativeVoiceIsRemoteOnHold>(this.Functions.VoiceIsRemoteOnHold); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetDoNotDisturb(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bDoNotDisturb);
		public void SetDoNotDisturb([MarshalAs(UnmanagedType.I1)] bool bDoNotDisturb) { var call = this.GetFunction<NativeSetDoNotDisturb>(this.Functions.SetDoNotDisturb); call(this.ObjectAddress, bDoNotDisturb); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEnableVoiceNotificationSounds(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bEnable);
		public void EnableVoiceNotificationSounds([MarshalAs(UnmanagedType.I1)] bool bEnable) { var call = this.GetFunction<NativeEnableVoiceNotificationSounds>(this.Functions.EnableVoiceNotificationSounds); call(this.ObjectAddress, bEnable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPushToTalkEnabled(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bEnabled);
		public void SetPushToTalkEnabled([MarshalAs(UnmanagedType.I1)] bool bEnabled) { var call = this.GetFunction<NativeSetPushToTalkEnabled>(this.Functions.SetPushToTalkEnabled); call(this.ObjectAddress, bEnabled); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPushToTalkEnabled(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPushToTalkEnabled() { var call = this.GetFunction<NativeIsPushToTalkEnabled>(this.Functions.IsPushToTalkEnabled); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPushToTalkKey(IntPtr thisobj, Int32 nKey);
		public void SetPushToTalkKey(Int32 nKey) { var call = this.GetFunction<NativeSetPushToTalkKey>(this.Functions.SetPushToTalkKey); call(this.ObjectAddress, nKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetPushToTalkKey(IntPtr thisobj);
		public Int32 GetPushToTalkKey() { var call = this.GetFunction<NativeGetPushToTalkKey>(this.Functions.GetPushToTalkKey); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPushToTalkKeyDown(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPushToTalkKeyDown() { var call = this.GetFunction<NativeIsPushToTalkKeyDown>(this.Functions.IsPushToTalkKeyDown); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEnableVoiceCalibration(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bEnable);
		public void EnableVoiceCalibration([MarshalAs(UnmanagedType.I1)] bool bEnable) { var call = this.GetFunction<NativeEnableVoiceCalibration>(this.Functions.EnableVoiceCalibration); call(this.ObjectAddress, bEnable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVoiceCalibrating(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVoiceCalibrating() { var call = this.GetFunction<NativeIsVoiceCalibrating>(this.Functions.IsVoiceCalibrating); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetVoiceCalibrationSamplePeak(IntPtr thisobj);
		public float GetVoiceCalibrationSamplePeak() { var call = this.GetFunction<NativeGetVoiceCalibrationSamplePeak>(this.Functions.GetVoiceCalibrationSamplePeak); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetForceMicRecord(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bForce);
		public void SetForceMicRecord([MarshalAs(UnmanagedType.I1)] bool bForce) { var call = this.GetFunction<NativeSetForceMicRecord>(this.Functions.SetForceMicRecord); call(this.ObjectAddress, bForce); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetForceMicRecord(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetForceMicRecord() { var call = this.GetFunction<NativeGetForceMicRecord>(this.Functions.GetForceMicRecord); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetMicBoost(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bBoost);
		public void SetMicBoost([MarshalAs(UnmanagedType.I1)] bool bBoost) { var call = this.GetFunction<NativeSetMicBoost>(this.Functions.SetMicBoost); call(this.ObjectAddress, bBoost); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetMicBoost(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetMicBoost() { var call = this.GetFunction<NativeGetMicBoost>(this.Functions.GetMicBoost); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasHardwareMicBoost(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasHardwareMicBoost() { var call = this.GetFunction<NativeHasHardwareMicBoost>(this.Functions.HasHardwareMicBoost); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetMicDeviceName(IntPtr thisobj);
		public string GetMicDeviceName() { var call = this.GetFunction<NativeGetMicDeviceName>(this.Functions.GetMicDeviceName); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartTalking(IntPtr thisobj, Int32 hVoiceCall);
		public void StartTalking(Int32 hVoiceCall) { var call = this.GetFunction<NativeStartTalking>(this.Functions.StartTalking); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndTalking(IntPtr thisobj, Int32 hVoiceCall);
		public void EndTalking(Int32 hVoiceCall) { var call = this.GetFunction<NativeEndTalking>(this.Functions.EndTalking); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeVoiceIsValid(IntPtr thisobj, Int32 hVoiceCall);
		[return: MarshalAs(UnmanagedType.I1)] public bool VoiceIsValid(Int32 hVoiceCall) { var call = this.GetFunction<NativeVoiceIsValid>(this.Functions.VoiceIsValid); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAutoReflectVoice(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAuto);
		public void SetAutoReflectVoice([MarshalAs(UnmanagedType.I1)] bool bAuto) { var call = this.GetFunction<NativeSetAutoReflectVoice>(this.Functions.SetAutoReflectVoice); call(this.ObjectAddress, bAuto); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ECallState NativeGetCallState(IntPtr thisobj, Int32 hVoiceCall);
		public ECallState GetCallState(Int32 hVoiceCall) { var call = this.GetFunction<NativeGetCallState>(this.Functions.GetCallState); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetVoiceMicrophoneVolume(IntPtr thisobj);
		public float GetVoiceMicrophoneVolume() { var call = this.GetFunction<NativeGetVoiceMicrophoneVolume>(this.Functions.GetVoiceMicrophoneVolume); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetVoiceSpeakerVolume(IntPtr thisobj);
		public float GetVoiceSpeakerVolume() { var call = this.GetFunction<NativeGetVoiceSpeakerVolume>(this.Functions.GetVoiceSpeakerVolume); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeTimeSinceLastVoiceDataReceived(IntPtr thisobj, Int32 hVoiceCall);
		public float TimeSinceLastVoiceDataReceived(Int32 hVoiceCall) { var call = this.GetFunction<NativeTimeSinceLastVoiceDataReceived>(this.Functions.TimeSinceLastVoiceDataReceived); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeTimeSinceLastVoiceDataSend(IntPtr thisobj, Int32 hVoiceCall);
		public float TimeSinceLastVoiceDataSend(Int32 hVoiceCall) { var call = this.GetFunction<NativeTimeSinceLastVoiceDataSend>(this.Functions.TimeSinceLastVoiceDataSend); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCanSend(IntPtr thisobj, Int32 hVoiceCall);
		[return: MarshalAs(UnmanagedType.I1)] public bool CanSend(Int32 hVoiceCall) { var call = this.GetFunction<NativeCanSend>(this.Functions.CanSend); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCanReceive(IntPtr thisobj, Int32 hVoiceCall);
		[return: MarshalAs(UnmanagedType.I1)] public bool CanReceive(Int32 hVoiceCall) { var call = this.GetFunction<NativeCanReceive>(this.Functions.CanReceive); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetEstimatedBitsPerSecond(IntPtr thisobj, Int32 hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bIncoming);
		public float GetEstimatedBitsPerSecond(Int32 hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bIncoming) { var call = this.GetFunction<NativeGetEstimatedBitsPerSecond>(this.Functions.GetEstimatedBitsPerSecond); return call(this.ObjectAddress, hVoiceCall, bIncoming); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetPeakSample(IntPtr thisobj, Int32 hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bIncoming);
		public float GetPeakSample(Int32 hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bIncoming) { var call = this.GetFunction<NativeGetPeakSample>(this.Functions.GetPeakSample); return call(this.ObjectAddress, hVoiceCall, bIncoming); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendResumeRequest(IntPtr thisobj, Int32 hVoiceCall);
		public void SendResumeRequest(Int32 hVoiceCall) { var call = this.GetFunction<NativeSendResumeRequest>(this.Functions.SendResumeRequest); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeOpenChatDialog(IntPtr thisobj, UInt64 steamID);
		public void OpenChatDialog(UInt64 steamID) { var call = this.GetFunction<NativeOpenChatDialog>(this.Functions.OpenChatDialog); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartChatRoomVoiceSpeaking(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		public void StartChatRoomVoiceSpeaking(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeStartChatRoomVoiceSpeaking>(this.Functions.StartChatRoomVoiceSpeaking); call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndChatRoomVoiceSpeaking(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		public void EndChatRoomVoiceSpeaking(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeEndChatRoomVoiceSpeaking>(this.Functions.EndChatRoomVoiceSpeaking); call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFriendLastLogonTime(IntPtr thisobj, UInt64 steamID);
		public UInt32 GetFriendLastLogonTime(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendLastLogonTime>(this.Functions.GetFriendLastLogonTime); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFriendLastLogoffTime(IntPtr thisobj, UInt64 steamID);
		public UInt32 GetFriendLastLogoffTime(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendLastLogoffTime>(this.Functions.GetFriendLastLogoffTime); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatRoomVoiceTotalSlotCount(IntPtr thisobj, UInt64 steamIDchat);
		public Int32 GetChatRoomVoiceTotalSlotCount(UInt64 steamIDchat) { var call = this.GetFunction<NativeGetChatRoomVoiceTotalSlotCount>(this.Functions.GetChatRoomVoiceTotalSlotCount); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatRoomVoiceUsedSlotCount(IntPtr thisobj, UInt64 steamIDchat);
		public Int32 GetChatRoomVoiceUsedSlotCount(UInt64 steamIDchat) { var call = this.GetFunction<NativeGetChatRoomVoiceUsedSlotCount>(this.Functions.GetChatRoomVoiceUsedSlotCount); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetChatRoomVoiceUsedSlot(IntPtr thisobj, UInt64 steamID, Int32 iSlot);
		public UInt64 GetChatRoomVoiceUsedSlot(UInt64 steamID, Int32 iSlot) { var call = this.GetFunction<NativeGetChatRoomVoiceUsedSlot>(this.Functions.GetChatRoomVoiceUsedSlot); return call(this.ObjectAddress, steamID, iSlot); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EChatRoomVoiceStatus NativeGetChatRoomVoiceStatus(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		public EChatRoomVoiceStatus GetChatRoomVoiceStatus(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeGetChatRoomVoiceStatus>(this.Functions.GetChatRoomVoiceStatus); return call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeChatRoomHasAvailableVoiceSlots(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool ChatRoomHasAvailableVoiceSlots(UInt64 steamID) { var call = this.GetFunction<NativeChatRoomHasAvailableVoiceSlots>(this.Functions.ChatRoomHasAvailableVoiceSlots); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsChatRoomVoiceSpeaking(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsChatRoomVoiceSpeaking(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeIsChatRoomVoiceSpeaking>(this.Functions.IsChatRoomVoiceSpeaking); return call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetChatRoomPeakSample(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser, [MarshalAs(UnmanagedType.I1)] bool bIncoming);
		public float GetChatRoomPeakSample(UInt64 steamIDchat, UInt64 steamIDuser, [MarshalAs(UnmanagedType.I1)] bool bIncoming) { var call = this.GetFunction<NativeGetChatRoomPeakSample>(this.Functions.GetChatRoomPeakSample); return call(this.ObjectAddress, steamIDchat, steamIDuser, bIncoming); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChatRoomVoiceRetryConnections(IntPtr thisobj, UInt64 steamIDchat);
		public void ChatRoomVoiceRetryConnections(UInt64 steamIDchat) { var call = this.GetFunction<NativeChatRoomVoiceRetryConnections>(this.Functions.ChatRoomVoiceRetryConnections); call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPortTypes(IntPtr thisobj, UInt32 unFlags);
		public void SetPortTypes(UInt32 unFlags) { var call = this.GetFunction<NativeSetPortTypes>(this.Functions.SetPortTypes); call(this.ObjectAddress, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReinitAudio(IntPtr thisobj);
		public void ReinitAudio() { var call = this.GetFunction<NativeReinitAudio>(this.Functions.ReinitAudio); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDuser, [MarshalAs(UnmanagedType.I1)] bool bIsSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDuser, [MarshalAs(UnmanagedType.I1)] bool bIsSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDuser, bIsSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, pchDialog); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToUser(IntPtr thisobj, string pchDialog, UInt64 steamID);
		public void ActivateGameOverlayToUser(string pchDialog, UInt64 steamID) { var call = this.GetFunction<NativeActivateGameOverlayToUser>(this.Functions.ActivateGameOverlayToUser); call(this.ObjectAddress, pchDialog, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToWebPage(IntPtr thisobj, string pchUrl);
		public void ActivateGameOverlayToWebPage(string pchUrl) { var call = this.GetFunction<NativeActivateGameOverlayToWebPage>(this.Functions.ActivateGameOverlayToWebPage); call(this.ObjectAddress, pchUrl); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToStore(IntPtr thisobj, UInt32 nAppId);
		public void ActivateGameOverlayToStore(UInt32 nAppId) { var call = this.GetFunction<NativeActivateGameOverlayToStore>(this.Functions.ActivateGameOverlayToStore); call(this.ObjectAddress, nAppId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeNotifyGameOverlayStateChanged(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bActive);
		public void NotifyGameOverlayStateChanged([MarshalAs(UnmanagedType.I1)] bool bActive) { var call = this.GetFunction<NativeNotifyGameOverlayStateChanged>(this.Functions.NotifyGameOverlayStateChanged); call(this.ObjectAddress, bActive); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeNotifyGameServerChangeRequested(IntPtr thisobj, string pchServerAddress, string pchPassword);
		public void NotifyGameServerChangeRequested(string pchServerAddress, string pchPassword) { var call = this.GetFunction<NativeNotifyGameServerChangeRequested>(this.Functions.NotifyGameServerChangeRequested); call(this.ObjectAddress, pchServerAddress, pchPassword); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeNotifyLobbyJoinRequested(IntPtr thisobj, UInt32 nAppId, UInt64 steamIDlobby, UInt64 steamIDfriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool NotifyLobbyJoinRequested(UInt32 nAppId, UInt64 steamIDlobby, UInt64 steamIDfriend) { var call = this.GetFunction<NativeNotifyLobbyJoinRequested>(this.Functions.NotifyLobbyJoinRequested); return call(this.ObjectAddress, nAppId, steamIDlobby, steamIDfriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EClanRelationship NativeGetClanRelationship(IntPtr thisobj, UInt64 steamIDclan);
		public EClanRelationship GetClanRelationship(UInt64 steamIDclan) { var call = this.GetFunction<NativeGetClanRelationship>(this.Functions.GetClanRelationship); return call(this.ObjectAddress, steamIDclan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EClanRank NativeGetFriendClanRank(IntPtr thisobj, UInt64 steamIDuser, UInt64 steamIDclan);
		public EClanRank GetFriendClanRank(UInt64 steamIDuser, UInt64 steamIDclan) { var call = this.GetFunction<NativeGetFriendClanRank>(this.Functions.GetFriendClanRank); return call(this.ObjectAddress, steamIDuser, steamIDclan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeVoiceIsAvailable(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool VoiceIsAvailable() { var call = this.GetFunction<NativeVoiceIsAvailable>(this.Functions.VoiceIsAvailable); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTestVoiceDisconnect(IntPtr thisobj, Int32 hVoiceCall);
		public void TestVoiceDisconnect(Int32 hVoiceCall) { var call = this.GetFunction<NativeTestVoiceDisconnect>(this.Functions.TestVoiceDisconnect); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTestChatRoomPeerDisconnect(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		public void TestChatRoomPeerDisconnect(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeTestChatRoomPeerDisconnect>(this.Functions.TestChatRoomPeerDisconnect); call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTestVoicePacketLoss(IntPtr thisobj, float flPacketDropFraction);
		public void TestVoicePacketLoss(float flPacketDropFraction) { var call = this.GetFunction<NativeTestVoicePacketLoss>(this.Functions.TestVoicePacketLoss); call(this.ObjectAddress, flPacketDropFraction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindFriendVoiceChatHandle(IntPtr thisobj, UInt64 steamID);
		public Int32 FindFriendVoiceChatHandle(UInt64 steamID) { var call = this.GetFunction<NativeFindFriendVoiceChatHandle>(this.Functions.FindFriendVoiceChatHandle); return call(this.ObjectAddress, steamID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingPlayersResponseVTable
	{
		public IntPtr AddPlayerToList;
		public IntPtr PlayersFailedToRespond;
		public IntPtr PlayersRefreshComplete;
	}
	
	public class ISteamMatchmakingPlayersResponse : NativeWrapper<ISteamMatchmakingPlayersResponseVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddPlayerToList(IntPtr thisobj, string pchName, Int32 nScore, float flTimePlayed);
		public void AddPlayerToList(string pchName, Int32 nScore, float flTimePlayed) { var call = this.GetFunction<NativeAddPlayerToList>(this.Functions.AddPlayerToList); call(this.ObjectAddress, pchName, nScore, flTimePlayed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativePlayersFailedToRespond(IntPtr thisobj);
		public void PlayersFailedToRespond() { var call = this.GetFunction<NativePlayersFailedToRespond>(this.Functions.PlayersFailedToRespond); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativePlayersRefreshComplete(IntPtr thisobj);
		public void PlayersRefreshComplete() { var call = this.GetFunction<NativePlayersRefreshComplete>(this.Functions.PlayersRefreshComplete); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientContentServerVTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr GetSteamID;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetLogonState;
		public IntPtr Connected;
		public IntPtr RaiseConnectionPriority;
		public IntPtr ResetConnectionPriority;
		public IntPtr SetCellID;
		public IntPtr SendClientContentAuthRequest;
		public IntPtr CheckTicket;
	}
	
	public class IClientContentServer : NativeWrapper<IClientContentServerVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt32 uContentServerID);
		public void LogOn(UInt32 uContentServerID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, uContentServerID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELogonState NativeGetLogonState(IntPtr thisobj);
		public ELogonState GetLogonState() { var call = this.GetFunction<NativeGetLogonState>(this.Functions.GetLogonState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeConnected(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Connected() { var call = this.GetFunction<NativeConnected>(this.Functions.Connected); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRaiseConnectionPriority(IntPtr thisobj, EConnectionPriority eConnectionPriority);
		public Int32 RaiseConnectionPriority(EConnectionPriority eConnectionPriority) { var call = this.GetFunction<NativeRaiseConnectionPriority>(this.Functions.RaiseConnectionPriority); return call(this.ObjectAddress, eConnectionPriority); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeResetConnectionPriority(IntPtr thisobj, Int32 hRaiseConnectionPriorityPrev);
		public void ResetConnectionPriority(Int32 hRaiseConnectionPriorityPrev) { var call = this.GetFunction<NativeResetConnectionPriority>(this.Functions.ResetConnectionPriority); call(this.ObjectAddress, hRaiseConnectionPriorityPrev); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetCellID(IntPtr thisobj, UInt32 cellID);
		public void SetCellID(UInt32 cellID) { var call = this.GetFunction<NativeSetCellID>(this.Functions.SetCellID); call(this.ObjectAddress, cellID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendClientContentAuthRequest(IntPtr thisobj, UInt64 steamID, UInt32 unContentID, [MarshalAs(UnmanagedType.I1)] bool bUseToken, UInt64 ulSessionToken, [MarshalAs(UnmanagedType.I1)] bool bTokenPresent);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendClientContentAuthRequest(UInt64 steamID, UInt32 unContentID, [MarshalAs(UnmanagedType.I1)] bool bUseToken, UInt64 ulSessionToken, [MarshalAs(UnmanagedType.I1)] bool bTokenPresent) { var call = this.GetFunction<NativeSendClientContentAuthRequest>(this.Functions.SendClientContentAuthRequest); return call(this.ObjectAddress, steamID, unContentID, bUseToken, ulSessionToken, bTokenPresent); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCheckTicket(IntPtr thisobj, UInt64 steamID, UInt32 uContentID, IntPtr pvTicketData, UInt32 cubTicketLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool CheckTicket(UInt64 steamID, UInt32 uContentID, IntPtr pvTicketData, UInt32 cubTicketLength) { var call = this.GetFunction<NativeCheckTicket>(this.Functions.CheckTicket); return call(this.ObjectAddress, steamID, uContentID, pvTicketData, cubTicketLength); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientUserVTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetLogonState;
		public IntPtr Connected;
		public IntPtr GetSteamID;
		public IntPtr IsVACBanned;
		public IntPtr RequireShowVACBannedMessage;
		public IntPtr AcknowledgeVACBanning;
		public IntPtr SetSteam2Ticket;
		public IntPtr AddServerNetAddress;
		public IntPtr SetEmail;
		public IntPtr SetRegistryString;
		public IntPtr GetRegistryString;
		public IntPtr SetRegistryInt;
		public IntPtr GetRegistryInt;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr SetSelfAsPrimaryChatDestination;
		public IntPtr IsPrimaryChatDestination;
		public IntPtr RequestLegacyCDKey;
		public IntPtr SendGuestPassByEmail;
		public IntPtr SendGuestPassByAccountID;
		public IntPtr AckGuestPass;
		public IntPtr RedeemGuestPass;
		public IntPtr GetGuestPassToGiveCount;
		public IntPtr GetGuestPassToRedeemCount;
		public IntPtr GetGuestPassLastUpdateTime;
		public IntPtr GetGuestPassToGiveInfo;
		public IntPtr GetGuestPassToRedeemInfo;
		public IntPtr GetGuestPassToRedeemSenderAddress;
		public IntPtr GetGuestPassToRedeemSenderName;
		public IntPtr RequestGuestPassTargetList;
		public IntPtr RequestGiftTargetList;
		public IntPtr AcknowledgeMessageByGID;
		public IntPtr SetLanguage;
		public IntPtr TrackAppUsageEvent;
		public IntPtr RaiseConnectionPriority;
		public IntPtr ResetConnectionPriority;
		public IntPtr SetAccountName;
		public IntPtr SetPassword;
		public IntPtr SetAccountCreationTime;
		public IntPtr DoesTextContainUserPassword;
		public IntPtr obselete_GetCMIPAddress;
		public IntPtr obselete_GetP2PRelayIPAddress;
		public IntPtr GetOneTimeWGAuthPassword;
		public IntPtr GetLanguage;
		public IntPtr SetCyberCafe;
		public IntPtr ChangePassword;
		public IntPtr ChangeEmail;
		public IntPtr ChangeSecretQuestionAndAnswer;
		public IntPtr CreateAccount;
		public IntPtr TrackNatTraversalStat;
		public IntPtr RefreshSteam2Login;
		public IntPtr GetPackageIDForGuestPassToRedeemByGID;
		public IntPtr TrackSteamUsageEvent;
		public IntPtr SetComputerInUse;
		public IntPtr IsGameRunning;
	}
	
	public class IClientUser : NativeWrapper<IClientUserVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt64 steamID);
		public void LogOn(UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELogonState NativeGetLogonState(IntPtr thisobj);
		public ELogonState GetLogonState() { var call = this.GetFunction<NativeGetLogonState>(this.Functions.GetLogonState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeConnected(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Connected() { var call = this.GetFunction<NativeConnected>(this.Functions.Connected); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj, Int32 nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned(Int32 nGameID) { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequireShowVACBannedMessage(IntPtr thisobj, Int32 nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequireShowVACBannedMessage(Int32 nGameID) { var call = this.GetFunction<NativeRequireShowVACBannedMessage>(this.Functions.RequireShowVACBannedMessage); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAcknowledgeVACBanning(IntPtr thisobj, Int32 nGameID);
		public void AcknowledgeVACBanning(Int32 nGameID) { var call = this.GetFunction<NativeAcknowledgeVACBanning>(this.Functions.AcknowledgeVACBanning); call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSteam2Ticket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public void SetSteam2Ticket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2Ticket>(this.Functions.SetSteam2Ticket); call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddServerNetAddress(IntPtr thisobj, UInt32 arg1, UInt16 uint16);
		public void AddServerNetAddress(UInt32 arg1, UInt16 uint16) { var call = this.GetFunction<NativeAddServerNetAddress>(this.Functions.AddServerNetAddress); call(this.ObjectAddress, arg1, uint16); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetEmail(IntPtr thisobj, string pchEmail);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetEmail(string pchEmail) { var call = this.GetFunction<NativeSetEmail>(this.Functions.SetEmail); return call(this.ObjectAddress, pchEmail); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetRegistryString>(this.Functions.SetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue) { var call = this.GetFunction<NativeGetRegistryString>(this.Functions.GetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, pchKey, pchValue, cbValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue) { var call = this.GetFunction<NativeSetRegistryInt>(this.Functions.SetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, pchKey, iValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 pValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 pValue) { var call = this.GetFunction<NativeGetRegistryInt>(this.Functions.GetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, pchKey, ref pValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pOutputBlob, Int32 cbBlobMax, UInt64 steamIDGS, CGameID gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, IntPtr pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey);
		public Int32 InitiateGameConnection(IntPtr pOutputBlob, Int32 cbBlobMax, UInt64 steamIDGS, CGameID gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, IntPtr pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pOutputBlob, cbBlobMax, steamIDGS, gameID, unIPServer, usPortServer, bSecure, pvSteam2GetEncryptionKey, cbSteam2GetEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSelfAsPrimaryChatDestination(IntPtr thisobj);
		public void SetSelfAsPrimaryChatDestination() { var call = this.GetFunction<NativeSetSelfAsPrimaryChatDestination>(this.Functions.SetSelfAsPrimaryChatDestination); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPrimaryChatDestination(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPrimaryChatDestination() { var call = this.GetFunction<NativeIsPrimaryChatDestination>(this.Functions.IsPrimaryChatDestination); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestLegacyCDKey(IntPtr thisobj, UInt32 iAppID);
		public void RequestLegacyCDKey(UInt32 iAppID) { var call = this.GetFunction<NativeRequestLegacyCDKey>(this.Functions.RequestLegacyCDKey); call(this.ObjectAddress, iAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendGuestPassByEmail(IntPtr thisobj, string pchEmailAccount, UInt64 gidGuestPassID, [MarshalAs(UnmanagedType.I1)] bool bResending);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendGuestPassByEmail(string pchEmailAccount, UInt64 gidGuestPassID, [MarshalAs(UnmanagedType.I1)] bool bResending) { var call = this.GetFunction<NativeSendGuestPassByEmail>(this.Functions.SendGuestPassByEmail); return call(this.ObjectAddress, pchEmailAccount, gidGuestPassID, bResending); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendGuestPassByAccountID(IntPtr thisobj, UInt32 uAccountID, UInt64 gidGuestPassID, [MarshalAs(UnmanagedType.I1)] bool bResending);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendGuestPassByAccountID(UInt32 uAccountID, UInt64 gidGuestPassID, [MarshalAs(UnmanagedType.I1)] bool bResending) { var call = this.GetFunction<NativeSendGuestPassByAccountID>(this.Functions.SendGuestPassByAccountID); return call(this.ObjectAddress, uAccountID, gidGuestPassID, bResending); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAckGuestPass(IntPtr thisobj, string pchGuestPassCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool AckGuestPass(string pchGuestPassCode) { var call = this.GetFunction<NativeAckGuestPass>(this.Functions.AckGuestPass); return call(this.ObjectAddress, pchGuestPassCode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRedeemGuestPass(IntPtr thisobj, string pchGuestPassCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool RedeemGuestPass(string pchGuestPassCode) { var call = this.GetFunction<NativeRedeemGuestPass>(this.Functions.RedeemGuestPass); return call(this.ObjectAddress, pchGuestPassCode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetGuestPassToGiveCount(IntPtr thisobj);
		public UInt32 GetGuestPassToGiveCount() { var call = this.GetFunction<NativeGetGuestPassToGiveCount>(this.Functions.GetGuestPassToGiveCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetGuestPassToRedeemCount(IntPtr thisobj);
		public UInt32 GetGuestPassToRedeemCount() { var call = this.GetFunction<NativeGetGuestPassToRedeemCount>(this.Functions.GetGuestPassToRedeemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetGuestPassLastUpdateTime(IntPtr thisobj);
		public UInt32 GetGuestPassLastUpdateTime() { var call = this.GetFunction<NativeGetGuestPassLastUpdateTime>(this.Functions.GetGuestPassLastUpdateTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGuestPassToGiveInfo(IntPtr thisobj, UInt32 nPassIndex, ref UInt64 pgidGuestPassID, ref UInt32 pnPackageID, ref UInt32 pRTime32Created, ref UInt32 pRTime32Expiration, ref UInt32 pRTime32Sent, ref UInt32 pRTime32Redeemed, string pchRecipientAddress, Int32 cRecipientAddressSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGuestPassToGiveInfo(UInt32 nPassIndex, ref UInt64 pgidGuestPassID, ref UInt32 pnPackageID, ref UInt32 pRTime32Created, ref UInt32 pRTime32Expiration, ref UInt32 pRTime32Sent, ref UInt32 pRTime32Redeemed, string pchRecipientAddress, Int32 cRecipientAddressSize) { var call = this.GetFunction<NativeGetGuestPassToGiveInfo>(this.Functions.GetGuestPassToGiveInfo); return call(this.ObjectAddress, nPassIndex, ref pgidGuestPassID, ref pnPackageID, ref pRTime32Created, ref pRTime32Expiration, ref pRTime32Sent, ref pRTime32Redeemed, pchRecipientAddress, cRecipientAddressSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGuestPassToRedeemInfo(IntPtr thisobj, UInt32 nPassIndex, ref UInt64 pgidGuestPassID, ref UInt32 pnPackageID, ref UInt32 pRTime32Created, ref UInt32 pRTime32Expiration, ref UInt32 pRTime32Sent, ref UInt32 pRTime32Redeemed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGuestPassToRedeemInfo(UInt32 nPassIndex, ref UInt64 pgidGuestPassID, ref UInt32 pnPackageID, ref UInt32 pRTime32Created, ref UInt32 pRTime32Expiration, ref UInt32 pRTime32Sent, ref UInt32 pRTime32Redeemed) { var call = this.GetFunction<NativeGetGuestPassToRedeemInfo>(this.Functions.GetGuestPassToRedeemInfo); return call(this.ObjectAddress, nPassIndex, ref pgidGuestPassID, ref pnPackageID, ref pRTime32Created, ref pRTime32Expiration, ref pRTime32Sent, ref pRTime32Redeemed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGuestPassToRedeemSenderAddress(IntPtr thisobj, UInt32 nPassIndex, string pchSenderAddress, Int32 cSenderAddressSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGuestPassToRedeemSenderAddress(UInt32 nPassIndex, string pchSenderAddress, Int32 cSenderAddressSize) { var call = this.GetFunction<NativeGetGuestPassToRedeemSenderAddress>(this.Functions.GetGuestPassToRedeemSenderAddress); return call(this.ObjectAddress, nPassIndex, pchSenderAddress, cSenderAddressSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGuestPassToRedeemSenderName(IntPtr thisobj, UInt32 nPassIndex, string pchSenderName, Int32 cSenderNameSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGuestPassToRedeemSenderName(UInt32 nPassIndex, string pchSenderName, Int32 cSenderNameSize) { var call = this.GetFunction<NativeGetGuestPassToRedeemSenderName>(this.Functions.GetGuestPassToRedeemSenderName); return call(this.ObjectAddress, nPassIndex, pchSenderName, cSenderNameSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestGuestPassTargetList(IntPtr thisobj, UInt64 gidGuestPassID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestGuestPassTargetList(UInt64 gidGuestPassID) { var call = this.GetFunction<NativeRequestGuestPassTargetList>(this.Functions.RequestGuestPassTargetList); return call(this.ObjectAddress, gidGuestPassID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestGiftTargetList(IntPtr thisobj, UInt32 nPackageID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestGiftTargetList(UInt32 nPackageID) { var call = this.GetFunction<NativeRequestGiftTargetList>(this.Functions.RequestGiftTargetList); return call(this.ObjectAddress, nPackageID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAcknowledgeMessageByGID(IntPtr thisobj, string pchMessageGID);
		public void AcknowledgeMessageByGID(string pchMessageGID) { var call = this.GetFunction<NativeAcknowledgeMessageByGID>(this.Functions.AcknowledgeMessageByGID); call(this.ObjectAddress, pchMessageGID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLanguage(IntPtr thisobj, string pchLanguage);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLanguage(string pchLanguage) { var call = this.GetFunction<NativeSetLanguage>(this.Functions.SetLanguage); return call(this.ObjectAddress, pchLanguage); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, CGameID gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(CGameID gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRaiseConnectionPriority(IntPtr thisobj, UInt32 eConnectionPriority);
		public Int32 RaiseConnectionPriority(UInt32 eConnectionPriority) { var call = this.GetFunction<NativeRaiseConnectionPriority>(this.Functions.RaiseConnectionPriority); return call(this.ObjectAddress, eConnectionPriority); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeResetConnectionPriority(IntPtr thisobj, Int32 hRaiseConnectionPriorityPrev);
		public void ResetConnectionPriority(Int32 hRaiseConnectionPriorityPrev) { var call = this.GetFunction<NativeResetConnectionPriority>(this.Functions.ResetConnectionPriority); call(this.ObjectAddress, hRaiseConnectionPriorityPrev); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAccountName(IntPtr thisobj, string pchAccountName);
		public void SetAccountName(string pchAccountName) { var call = this.GetFunction<NativeSetAccountName>(this.Functions.SetAccountName); call(this.ObjectAddress, pchAccountName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPassword(IntPtr thisobj, string pchPassword);
		public void SetPassword(string pchPassword) { var call = this.GetFunction<NativeSetPassword>(this.Functions.SetPassword); call(this.ObjectAddress, pchPassword); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAccountCreationTime(IntPtr thisobj, UInt32 rtime32Time);
		public void SetAccountCreationTime(UInt32 rtime32Time) { var call = this.GetFunction<NativeSetAccountCreationTime>(this.Functions.SetAccountCreationTime); call(this.ObjectAddress, rtime32Time); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDoesTextContainUserPassword(IntPtr thisobj, string pchText);
		[return: MarshalAs(UnmanagedType.I1)] public bool DoesTextContainUserPassword(string pchText) { var call = this.GetFunction<NativeDoesTextContainUserPassword>(this.Functions.DoesTextContainUserPassword); return call(this.ObjectAddress, pchText); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 Nativeobselete_GetCMIPAddress(IntPtr thisobj);
		public UInt32 obselete_GetCMIPAddress() { var call = this.GetFunction<Nativeobselete_GetCMIPAddress>(this.Functions.obselete_GetCMIPAddress); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 Nativeobselete_GetP2PRelayIPAddress(IntPtr thisobj);
		public UInt32 obselete_GetP2PRelayIPAddress() { var call = this.GetFunction<Nativeobselete_GetP2PRelayIPAddress>(this.Functions.obselete_GetP2PRelayIPAddress); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetOneTimeWGAuthPassword(IntPtr thisobj, string pchPassword, Int32 cbPassword);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetOneTimeWGAuthPassword(string pchPassword, Int32 cbPassword) { var call = this.GetFunction<NativeGetOneTimeWGAuthPassword>(this.Functions.GetOneTimeWGAuthPassword); return call(this.ObjectAddress, pchPassword, cbPassword); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLanguage(IntPtr thisobj, string pchLanguage, Int32 cbLanguage);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLanguage(string pchLanguage, Int32 cbLanguage) { var call = this.GetFunction<NativeGetLanguage>(this.Functions.GetLanguage); return call(this.ObjectAddress, pchLanguage, cbLanguage); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetCyberCafe(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bCyberCafe);
		public void SetCyberCafe([MarshalAs(UnmanagedType.I1)] bool bCyberCafe) { var call = this.GetFunction<NativeSetCyberCafe>(this.Functions.SetCyberCafe); call(this.ObjectAddress, bCyberCafe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangePassword(IntPtr thisobj, string pchOldPassword, string pchNewPassword);
		public void ChangePassword(string pchOldPassword, string pchNewPassword) { var call = this.GetFunction<NativeChangePassword>(this.Functions.ChangePassword); call(this.ObjectAddress, pchOldPassword, pchNewPassword); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangeEmail(IntPtr thisobj, string pchEmail);
		public void ChangeEmail(string pchEmail) { var call = this.GetFunction<NativeChangeEmail>(this.Functions.ChangeEmail); call(this.ObjectAddress, pchEmail); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangeSecretQuestionAndAnswer(IntPtr thisobj, Int32 iQuestion, string pchNewQuestion, string pchNewAnswer);
		public void ChangeSecretQuestionAndAnswer(Int32 iQuestion, string pchNewQuestion, string pchNewAnswer) { var call = this.GetFunction<NativeChangeSecretQuestionAndAnswer>(this.Functions.ChangeSecretQuestionAndAnswer); call(this.ObjectAddress, iQuestion, pchNewQuestion, pchNewAnswer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateAccount(IntPtr thisobj, string pchAccountName, string pchNewPassword, string pchNewEmail, Int32 iQuestion, string pchNewQuestion, string pchNewAnswer);
		public void CreateAccount(string pchAccountName, string pchNewPassword, string pchNewEmail, Int32 iQuestion, string pchNewQuestion, string pchNewAnswer) { var call = this.GetFunction<NativeCreateAccount>(this.Functions.CreateAccount); call(this.ObjectAddress, pchAccountName, pchNewPassword, pchNewEmail, iQuestion, pchNewQuestion, pchNewAnswer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackNatTraversalStat(IntPtr thisobj, ref CNatTraversalStat pNatStat);
		public void TrackNatTraversalStat(ref CNatTraversalStat pNatStat) { var call = this.GetFunction<NativeTrackNatTraversalStat>(this.Functions.TrackNatTraversalStat); call(this.ObjectAddress, ref pNatStat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshSteam2Login(IntPtr thisobj);
		public void RefreshSteam2Login() { var call = this.GetFunction<NativeRefreshSteam2Login>(this.Functions.RefreshSteam2Login); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetPackageIDForGuestPassToRedeemByGID(IntPtr thisobj, UInt64 gid);
		public UInt32 GetPackageIDForGuestPassToRedeemByGID(UInt64 gid) { var call = this.GetFunction<NativeGetPackageIDForGuestPassToRedeemByGID>(this.Functions.GetPackageIDForGuestPassToRedeemByGID); return call(this.ObjectAddress, gid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackSteamUsageEvent(IntPtr thisobj, UInt32 eSteamUsageEvent, string pubKV, UInt32 cubKV);
		public void TrackSteamUsageEvent(UInt32 eSteamUsageEvent, string pubKV, UInt32 cubKV) { var call = this.GetFunction<NativeTrackSteamUsageEvent>(this.Functions.TrackSteamUsageEvent); call(this.ObjectAddress, eSteamUsageEvent, pubKV, cubKV); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetComputerInUse(IntPtr thisobj);
		public void SetComputerInUse() { var call = this.GetFunction<NativeSetComputerInUse>(this.Functions.SetComputerInUse); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsGameRunning(IntPtr thisobj, CGameID gameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsGameRunning(CGameID gameID) { var call = this.GetFunction<NativeIsGameRunning>(this.Functions.IsGameRunning); return call(this.ObjectAddress, gameID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientGameCoordinatorVTable
	{
		public IntPtr SendMessage;
		public IntPtr IsMessageAvailable;
		public IntPtr RetrieveMessage;
	}
	
	public class IClientGameCoordinator : NativeWrapper<IClientGameCoordinatorVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSendMessage(IntPtr thisobj, UInt32 unknown, IntPtr data, UInt32 cbData);
		public Int32 SendMessage(UInt32 unknown, IntPtr data, UInt32 cbData) { var call = this.GetFunction<NativeSendMessage>(this.Functions.SendMessage); return call(this.ObjectAddress, unknown, data, cbData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsMessageAvailable(IntPtr thisobj, ref UInt32 unknown);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsMessageAvailable(ref UInt32 unknown) { var call = this.GetFunction<NativeIsMessageAvailable>(this.Functions.IsMessageAvailable); return call(this.ObjectAddress, ref unknown); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRetrieveMessage(IntPtr thisobj, ref UInt32 unknown, IntPtr data, UInt32 cbData, ref UInt32 cbDataActual);
		public Int32 RetrieveMessage(ref UInt32 unknown, IntPtr data, UInt32 cbData, ref UInt32 cbDataActual) { var call = this.GetFunction<NativeRetrieveMessage>(this.Functions.RetrieveMessage); return call(this.ObjectAddress, ref unknown, data, cbData, ref cbDataActual); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=2912)]
	public struct gameserveritem_t
	{
		public servernetadr_t m_NetAdr;
		public Int32 m_nPing;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bHadSuccessfulResponse;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bDoNotRefresh;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 32)]
		public SByte[] m_szGameDir;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 32)]
		public SByte[] m_szMap;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
		public SByte[] m_szGameDescription;
		public Int32 m_nAppID;
		public Int32 m_nPlayers;
		public Int32 m_nMaxPlayers;
		public Int32 m_nBotPlayers;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bPassword;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bSecure;
		public UInt32 m_ulTimeLastPlayed;
		public Int32 m_nServerVersion;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
		public SByte[] m_szServerName;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_szGameTags;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam004VTable
	{
		public IntPtr ChangePassword;
		public IntPtr GetCurrentEmailAddress;
		public IntPtr ChangePersonalQA;
		public IntPtr ChangeEmailAddress;
		public IntPtr VerifyEmailAddress;
		public IntPtr RequestEmailAddressVerificationEmail;
		public IntPtr ChangeAccountName;
		public IntPtr MountAppFilesystem;
		public IntPtr UnmountAppFilesystem;
		public IntPtr MountFilesystem;
		public IntPtr UnmountFilesystem;
		public IntPtr Stat;
		public IntPtr SetvBuf;
		public IntPtr FlushFile;
		public IntPtr OpenFile;
		public IntPtr OpenFileEx;
		public IntPtr OpenTmpFile;
		public IntPtr ClearError;
		public IntPtr GetVersion;
		public IntPtr GetOfflineStatus;
		public IntPtr ChangeOfflineStatus;
		public IntPtr ProcessCall;
		public IntPtr AbortCall;
		public IntPtr BlockingCall;
		public IntPtr SetMaxStallCount;
		public IntPtr CloseFile;
		public IntPtr ReadFile;
		public IntPtr WriteFile;
		public IntPtr Getc;
		public IntPtr Putc;
		public IntPtr SeekFile;
		public IntPtr TellFile;
		public IntPtr SizeFile;
		public IntPtr FindFirst;
		public IntPtr FindNext;
		public IntPtr FindClose;
		public IntPtr GetLocalFileCopy;
		public IntPtr IsFileImmediatelyAvailable;
		public IntPtr HintResourceNeed;
		public IntPtr ForgetAllHints;
		public IntPtr PauseCachePreloading;
		public IntPtr ResumeCachePreloading;
		public IntPtr WaitForResources;
		public IntPtr StartEngine;
		public IntPtr ShutdownEngine;
		public IntPtr Startup;
		public IntPtr Cleanup;
		public IntPtr NumAppsRunning;
		public IntPtr CreateAccount;
		public IntPtr GenerateSuggestedAccountNames;
		public IntPtr IsLoggedIn;
		public IntPtr Logout;
		public IntPtr IsSecureComputer;
		public IntPtr CreateLogContext;
		public IntPtr Log;
		public IntPtr LogResourceLoadStarted;
		public IntPtr LogResourceLoadFinished;
		public IntPtr RefreshLogin;
		public IntPtr VerifyPassword;
		public IntPtr GetUserType;
		public IntPtr GetAppStats;
		public IntPtr IsAccountNameInUse;
		public IntPtr GetAppIds;
		public IntPtr GetSubscriptionStats;
		public IntPtr RefreshAccountInfo;
		public IntPtr Subscribe;
		public IntPtr Unsubscribe;
		public IntPtr GetSubscriptionReceipt;
		public IntPtr GetAccountStatus;
		public IntPtr SetUser;
		public IntPtr GetUser;
		public IntPtr Login;
		public IntPtr AckSubscriptionReceipt;
		public IntPtr IsAppSubscribed;
		public IntPtr GetSubscriptionIds;
		public IntPtr EnumerateSubscription;
		public IntPtr EnumerateSubscriptionDiscount;
		public IntPtr EnumerateSubscriptionDiscountQualifier;
		public IntPtr EnumerateApp;
		public IntPtr EnumerateAppLaunchOption;
		public IntPtr DeleteAccount;
		public IntPtr EnumerateAppIcon;
		public IntPtr LaunchApp;
		public IntPtr GetCacheFilePath;
		public IntPtr EnumerateAppVersion;
		public IntPtr EnumerateAppDependency;
		public IntPtr StartLoadingCache;
		public IntPtr InsertAppDependency;
		public IntPtr RemoveAppDependency;
		public IntPtr FindApp;
		public IntPtr GetAppDependencies;
		public IntPtr IsSubscribed;
		public IntPtr GetAppUserDefinedInfo;
		public IntPtr WaitForAppReadyToLaunch;
		public IntPtr IsCacheLoadingEnabled;
		public IntPtr StopLoadingCache;
		public IntPtr GetEncryptedUserIDTicket;
		public IntPtr FlushCache;
		public IntPtr RepairOrDecryptCaches;
		public IntPtr LoadCacheFromDir;
		public IntPtr GetCacheDefaultDirectory;
		public IntPtr SetCacheDefaultDirectory;
		public IntPtr GetAppDir;
		public IntPtr MoveApp;
		public IntPtr GetAppCacheSize;
		public IntPtr SetAppCacheSize;
		public IntPtr SetAppVersion;
		public IntPtr Uninstall;
		public IntPtr SetNotificationCallback;
		public IntPtr ChangeForgottenPassword;
		public IntPtr RequestForgottenPasswordEmail;
		public IntPtr RequestAccountsByEmailAddressEmail;
		public IntPtr RequestAccountsByCdKeyEmail;
		public IntPtr GetNumAccountsWithEmailAddress;
		public IntPtr UpdateAccountBillingInfo;
		public IntPtr UpdateSubscriptionBillingInfo;
		public IntPtr GetSponsorUrl;
		public IntPtr GetContentServerInfo;
		public IntPtr GetAppUpdateStats;
		public IntPtr GetTotalUpdateStats;
		public IntPtr CreateCachePreloaders;
		public IntPtr Win32SetMiniDumpComment;
		public IntPtr Win32SetMiniDumpSourceControlId;
		public IntPtr Win32SetMiniDumpEnableFullMemory;
		public IntPtr Win32WriteMiniDump;
		public IntPtr GetCurrentAppId;
		public IntPtr GetAppPurchaseCountry;
	}
	
	public class ISteam004 : NativeWrapper<ISteam004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePassword(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPassphrase, ref TSTeamError pError);
		public UInt32 ChangePassword(string cszCurrentPassphrase, string cszNewPassphrase, ref TSTeamError pError) { var call = this.GetFunction<NativeChangePassword>(this.Functions.ChangePassword); return call(this.ObjectAddress, cszCurrentPassphrase, cszNewPassphrase, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentEmailAddress(IntPtr thisobj, string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSTeamError pError);
		public Int32 GetCurrentEmailAddress(string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCurrentEmailAddress>(this.Functions.GetCurrentEmailAddress); return call(this.ObjectAddress, szEmailaddress, uBufSize, ref puEmailaddressChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePersonalQA(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSTeamError pError);
		public UInt32 ChangePersonalQA(string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSTeamError pError) { var call = this.GetFunction<NativeChangePersonalQA>(this.Functions.ChangePersonalQA); return call(this.ObjectAddress, cszCurrentPassphrase, cszNewPersonalQuestion, cszNewAnswerToQuestion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeEmailAddress(IntPtr thisobj, string cszNewEmailAddress, ref TSTeamError pError);
		public UInt32 ChangeEmailAddress(string cszNewEmailAddress, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeEmailAddress>(this.Functions.ChangeEmailAddress); return call(this.ObjectAddress, cszNewEmailAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeVerifyEmailAddress(IntPtr thisobj, string cszEmailAddress, ref TSTeamError pError);
		public UInt32 VerifyEmailAddress(string cszEmailAddress, ref TSTeamError pError) { var call = this.GetFunction<NativeVerifyEmailAddress>(this.Functions.VerifyEmailAddress); return call(this.ObjectAddress, cszEmailAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestEmailAddressVerificationEmail(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 RequestEmailAddressVerificationEmail(ref TSTeamError pError) { var call = this.GetFunction<NativeRequestEmailAddressVerificationEmail>(this.Functions.RequestEmailAddressVerificationEmail); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeAccountName(IntPtr thisobj, string cszCurrentAccountName, string cszNewAccountName, ref TSTeamError pError);
		public UInt32 ChangeAccountName(string cszCurrentAccountName, string cszNewAccountName, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeAccountName>(this.Functions.ChangeAccountName); return call(this.ObjectAddress, cszCurrentAccountName, cszNewAccountName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountAppFilesystem(IntPtr thisobj, ref TSTeamError pError);
		public Int32 MountAppFilesystem(ref TSTeamError pError) { var call = this.GetFunction<NativeMountAppFilesystem>(this.Functions.MountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountAppFilesystem(IntPtr thisobj, ref TSTeamError pError);
		public Int32 UnmountAppFilesystem(ref TSTeamError pError) { var call = this.GetFunction<NativeUnmountAppFilesystem>(this.Functions.UnmountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountFilesystem(IntPtr thisobj, UInt32 uAppId, string szMountPath, ref TSTeamError pError);
		public Int32 MountFilesystem(UInt32 uAppId, string szMountPath, ref TSTeamError pError) { var call = this.GetFunction<NativeMountFilesystem>(this.Functions.MountFilesystem); return call(this.ObjectAddress, uAppId, szMountPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountFilesystem(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public Int32 UnmountFilesystem(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeUnmountFilesystem>(this.Functions.UnmountFilesystem); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStat(IntPtr thisobj, string cszName, ref TSteamElemInfo pInfo, ref TSTeamError pError);
		public Int32 Stat(string cszName, ref TSteamElemInfo pInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeStat>(this.Functions.Stat); return call(this.ObjectAddress, cszName, ref pInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetvBuf(IntPtr thisobj, UInt32 hFile, IntPtr pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSTeamError pError);
		public Int32 SetvBuf(UInt32 hFile, IntPtr pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSTeamError pError) { var call = this.GetFunction<NativeSetvBuf>(this.Functions.SetvBuf); return call(this.ObjectAddress, hFile, pBuf, eMethod, uBytes, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFlushFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 FlushFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeFlushFile>(this.Functions.FlushFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFile(IntPtr thisobj, string cszName, string cszMode, ref TSTeamError pError);
		public UInt32 OpenFile(string cszName, string cszMode, ref TSTeamError pError) { var call = this.GetFunction<NativeOpenFile>(this.Functions.OpenFile); return call(this.ObjectAddress, cszName, cszMode, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFileEx(IntPtr thisobj, string cszFileName, string cszMode, ref UInt32 puSize, ref TSTeamError pError);
		public UInt32 OpenFileEx(string cszFileName, string cszMode, ref UInt32 puSize, ref TSTeamError pError) { var call = this.GetFunction<NativeOpenFileEx>(this.Functions.OpenFileEx); return call(this.ObjectAddress, cszFileName, cszMode, ref puSize, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenTmpFile(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 OpenTmpFile(ref TSTeamError pError) { var call = this.GetFunction<NativeOpenTmpFile>(this.Functions.OpenTmpFile); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearError(IntPtr thisobj, ref TSTeamError pError);
		public void ClearError(ref TSTeamError pError) { var call = this.GetFunction<NativeClearError>(this.Functions.ClearError); call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetVersion(IntPtr thisobj, string szVersion, UInt32 uVersionBufSize);
		public Int32 GetVersion(string szVersion, UInt32 uVersionBufSize) { var call = this.GetFunction<NativeGetVersion>(this.Functions.GetVersion); return call(this.ObjectAddress, szVersion, uVersionBufSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError);
		public Int32 GetOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError) { var call = this.GetFunction<NativeGetOfflineStatus>(this.Functions.GetOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeChangeOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError);
		public Int32 ChangeOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeOfflineStatus>(this.Functions.ChangeOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeProcessCall(IntPtr thisobj, UInt32 handle, ref TSteamProgress pProgress, ref TSTeamError pError);
		public Int32 ProcessCall(UInt32 handle, ref TSteamProgress pProgress, ref TSTeamError pError) { var call = this.GetFunction<NativeProcessCall>(this.Functions.ProcessCall); return call(this.ObjectAddress, handle, ref pProgress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAbortCall(IntPtr thisobj, UInt32 handle, ref TSTeamError pError);
		public Int32 AbortCall(UInt32 handle, ref TSTeamError pError) { var call = this.GetFunction<NativeAbortCall>(this.Functions.AbortCall); return call(this.ObjectAddress, handle, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeBlockingCall(IntPtr thisobj, UInt32 handle, UInt32 uiProcessTickMS, ref TSTeamError pError);
		public Int32 BlockingCall(UInt32 handle, UInt32 uiProcessTickMS, ref TSTeamError pError) { var call = this.GetFunction<NativeBlockingCall>(this.Functions.BlockingCall); return call(this.ObjectAddress, handle, uiProcessTickMS, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetMaxStallCount(IntPtr thisobj, UInt32 uNumStalls, ref TSTeamError pError);
		public Int32 SetMaxStallCount(UInt32 uNumStalls, ref TSTeamError pError) { var call = this.GetFunction<NativeSetMaxStallCount>(this.Functions.SetMaxStallCount); return call(this.ObjectAddress, uNumStalls, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCloseFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 CloseFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeCloseFile>(this.Functions.CloseFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeReadFile(IntPtr thisobj, IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError);
		public UInt32 ReadFile(IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeReadFile>(this.Functions.ReadFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWriteFile(IntPtr thisobj, IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError);
		public UInt32 WriteFile(IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeWriteFile>(this.Functions.WriteFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetc(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 Getc(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeGetc>(this.Functions.Getc); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePutc(IntPtr thisobj, Int32 cChar, UInt32 hFile, ref TSTeamError pError);
		public Int32 Putc(Int32 cChar, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativePutc>(this.Functions.Putc); return call(this.ObjectAddress, cChar, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSeekFile(IntPtr thisobj, UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSTeamError pError);
		public Int32 SeekFile(UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSTeamError pError) { var call = this.GetFunction<NativeSeekFile>(this.Functions.SeekFile); return call(this.ObjectAddress, hFile, lOffset, sm, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeTellFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 TellFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeTellFile>(this.Functions.TellFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSizeFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 SizeFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeSizeFile>(this.Functions.SizeFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFindFirst(IntPtr thisobj, string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSTeamError pError);
		public UInt32 FindFirst(string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeFindFirst>(this.Functions.FindFirst); return call(this.ObjectAddress, cszPattern, eFilter, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindNext(IntPtr thisobj, UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSTeamError pError);
		public Int32 FindNext(UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeFindNext>(this.Functions.FindNext); return call(this.ObjectAddress, hFind, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindClose(IntPtr thisobj, UInt32 hFind, ref TSTeamError pError);
		public Int32 FindClose(UInt32 hFind, ref TSTeamError pError) { var call = this.GetFunction<NativeFindClose>(this.Functions.FindClose); return call(this.ObjectAddress, hFind, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalFileCopy(IntPtr thisobj, string cszName, ref TSTeamError pError);
		public Int32 GetLocalFileCopy(string cszName, ref TSTeamError pError) { var call = this.GetFunction<NativeGetLocalFileCopy>(this.Functions.GetLocalFileCopy); return call(this.ObjectAddress, cszName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileImmediatelyAvailable(IntPtr thisobj, string cszName, ref TSTeamError pError);
		public Int32 IsFileImmediatelyAvailable(string cszName, ref TSTeamError pError) { var call = this.GetFunction<NativeIsFileImmediatelyAvailable>(this.Functions.IsFileImmediatelyAvailable); return call(this.ObjectAddress, cszName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeHintResourceNeed(IntPtr thisobj, string cszHintList, Int32 bForgetEverything, ref TSTeamError pError);
		public Int32 HintResourceNeed(string cszHintList, Int32 bForgetEverything, ref TSTeamError pError) { var call = this.GetFunction<NativeHintResourceNeed>(this.Functions.HintResourceNeed); return call(this.ObjectAddress, cszHintList, bForgetEverything, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeForgetAllHints(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ForgetAllHints(ref TSTeamError pError) { var call = this.GetFunction<NativeForgetAllHints>(this.Functions.ForgetAllHints); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePauseCachePreloading(IntPtr thisobj, ref TSTeamError pError);
		public Int32 PauseCachePreloading(ref TSTeamError pError) { var call = this.GetFunction<NativePauseCachePreloading>(this.Functions.PauseCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResumeCachePreloading(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ResumeCachePreloading(ref TSTeamError pError) { var call = this.GetFunction<NativeResumeCachePreloading>(this.Functions.ResumeCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForResources(IntPtr thisobj, string cszMasterList, ref TSTeamError pError);
		public UInt32 WaitForResources(string cszMasterList, ref TSTeamError pError) { var call = this.GetFunction<NativeWaitForResources>(this.Functions.WaitForResources); return call(this.ObjectAddress, cszMasterList, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartEngine(IntPtr thisobj, ref TSTeamError pError);
		public Int32 StartEngine(ref TSTeamError pError) { var call = this.GetFunction<NativeStartEngine>(this.Functions.StartEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeShutdownEngine(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ShutdownEngine(ref TSTeamError pError) { var call = this.GetFunction<NativeShutdownEngine>(this.Functions.ShutdownEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartup(IntPtr thisobj, UInt32 uUsingMask, ref TSTeamError pError);
		public Int32 Startup(UInt32 uUsingMask, ref TSTeamError pError) { var call = this.GetFunction<NativeStartup>(this.Functions.Startup); return call(this.ObjectAddress, uUsingMask, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCleanup(IntPtr thisobj, ref TSTeamError pError);
		public Int32 Cleanup(ref TSTeamError pError) { var call = this.GetFunction<NativeCleanup>(this.Functions.Cleanup); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNumAppsRunning(IntPtr thisobj, ref TSTeamError pError);
		public Int32 NumAppsRunning(ref TSTeamError pError) { var call = this.GetFunction<NativeNumAppsRunning>(this.Functions.NumAppsRunning); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateAccount(IntPtr thisobj, string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSTeamError pError);
		public UInt32 CreateAccount(string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSTeamError pError) { var call = this.GetFunction<NativeCreateAccount>(this.Functions.CreateAccount); return call(this.ObjectAddress, cszUser, cszPassphrase, cszCreationKey, cszPersonalQuestion, cszAnswerToQuestion, cszArg6, ref pbCreated, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGenerateSuggestedAccountNames(IntPtr thisobj, string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSTeamError pError);
		public UInt32 GenerateSuggestedAccountNames(string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeGenerateSuggestedAccountNames>(this.Functions.GenerateSuggestedAccountNames); return call(this.ObjectAddress, cszArg1, cszArg2, szArg3, uArg4, ref puArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsLoggedIn(IntPtr thisobj, ref Int32 pbIsLoggedIn, ref TSTeamError pError);
		public Int32 IsLoggedIn(ref Int32 pbIsLoggedIn, ref TSTeamError pError) { var call = this.GetFunction<NativeIsLoggedIn>(this.Functions.IsLoggedIn); return call(this.ObjectAddress, ref pbIsLoggedIn, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogout(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 Logout(ref TSTeamError pError) { var call = this.GetFunction<NativeLogout>(this.Functions.Logout); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSecureComputer(IntPtr thisobj, ref Int32 pbIsSecure, ref TSTeamError pError);
		public Int32 IsSecureComputer(ref Int32 pbIsSecure, ref TSTeamError pError) { var call = this.GetFunction<NativeIsSecureComputer>(this.Functions.IsSecureComputer); return call(this.ObjectAddress, ref pbIsSecure, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateLogContext(IntPtr thisobj, string cszName);
		public UInt32 CreateLogContext(string cszName) { var call = this.GetFunction<NativeCreateLogContext>(this.Functions.CreateLogContext); return call(this.ObjectAddress, cszName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLog(IntPtr thisobj, UInt32 hContext, string cszMsg);
		public Int32 Log(UInt32 hContext, string cszMsg) { var call = this.GetFunction<NativeLog>(this.Functions.Log); return call(this.ObjectAddress, hContext, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadStarted(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadStarted(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadStarted>(this.Functions.LogResourceLoadStarted); call(this.ObjectAddress, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadFinished(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadFinished(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadFinished>(this.Functions.LogResourceLoadFinished); call(this.ObjectAddress, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshLogin(IntPtr thisobj, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError);
		public UInt32 RefreshLogin(string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError) { var call = this.GetFunction<NativeRefreshLogin>(this.Functions.RefreshLogin); return call(this.ObjectAddress, cszPassphrase, bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeVerifyPassword(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSTeamError pError);
		public Int32 VerifyPassword(string cszArg1, ref Int32 piArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeVerifyPassword>(this.Functions.VerifyPassword); return call(this.ObjectAddress, cszArg1, ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserType(IntPtr thisobj, ref UInt32 puArg1, ref TSTeamError pError);
		public Int32 GetUserType(ref UInt32 puArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeGetUserType>(this.Functions.GetUserType); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppStats(IntPtr thisobj, ref TSteamAppStats pAppStats, ref TSTeamError pError);
		public Int32 GetAppStats(ref TSteamAppStats pAppStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppStats>(this.Functions.GetAppStats); return call(this.ObjectAddress, ref pAppStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeIsAccountNameInUse(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSTeamError pError);
		public UInt32 IsAccountNameInUse(string cszArg1, ref Int32 piArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeIsAccountNameInUse>(this.Functions.IsAccountNameInUse); return call(this.ObjectAddress, cszArg1, ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError);
		public Int32 GetAppIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppIds>(this.Functions.GetAppIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionStats(IntPtr thisobj, ref TSteamSubscriptionStats pSubscriptionStats, ref TSTeamError pError);
		public Int32 GetSubscriptionStats(ref TSteamSubscriptionStats pSubscriptionStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionStats>(this.Functions.GetSubscriptionStats); return call(this.ObjectAddress, ref pSubscriptionStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshAccountInfo(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 RefreshAccountInfo(ref TSTeamError pError) { var call = this.GetFunction<NativeRefreshAccountInfo>(this.Functions.RefreshAccountInfo); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError);
		public UInt32 Subscribe(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeSubscribe>(this.Functions.Subscribe); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUnsubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSTeamError pError);
		public UInt32 Unsubscribe(UInt32 uSubscriptionId, ref TSTeamError pError) { var call = this.GetFunction<NativeUnsubscribe>(this.Functions.Unsubscribe); return call(this.ObjectAddress, uSubscriptionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionReceipt(IntPtr thisobj, UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSTeamError pError);
		public Int32 GetSubscriptionReceipt(UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionReceipt>(this.Functions.GetSubscriptionReceipt); return call(this.ObjectAddress, arg1, ref pSteamSubscriptionReceipt, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAccountStatus(IntPtr thisobj, ref UInt32 puArg1, ref TSTeamError pError);
		public Int32 GetAccountStatus(ref UInt32 puArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAccountStatus>(this.Functions.GetAccountStatus); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetUser(IntPtr thisobj, string cszUser, ref Int32 pbUserSet, ref TSTeamError pError);
		public UInt32 SetUser(string cszUser, ref Int32 pbUserSet, ref TSTeamError pError) { var call = this.GetFunction<NativeSetUser>(this.Functions.SetUser); return call(this.ObjectAddress, cszUser, ref pbUserSet, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUser(IntPtr thisobj, string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSTeamError pError);
		public Int32 GetUser(string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSTeamError pError) { var call = this.GetFunction<NativeGetUser>(this.Functions.GetUser); return call(this.ObjectAddress, szUser, uBufSize, ref puUserChars, ref pSteamGlobalUserID, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogin(IntPtr thisobj, string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError);
		public UInt32 Login(string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError) { var call = this.GetFunction<NativeLogin>(this.Functions.Login); return call(this.ObjectAddress, cszUser, cszPassphrase, bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeAckSubscriptionReceipt(IntPtr thisobj, UInt32 uArg1, ref TSTeamError pError);
		public UInt32 AckSubscriptionReceipt(UInt32 uArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeAckSubscriptionReceipt>(this.Functions.AckSubscriptionReceipt); return call(this.ObjectAddress, uArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsAppSubscribed(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSTeamError pError);
		public Int32 IsAppSubscribed(UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSTeamError pError) { var call = this.GetFunction<NativeIsAppSubscribed>(this.Functions.IsAppSubscribed); return call(this.ObjectAddress, uAppId, ref pbIsAppSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError);
		public Int32 GetSubscriptionIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionIds>(this.Functions.GetSubscriptionIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscription(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSTeamError pError);
		public Int32 EnumerateSubscription(UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscription>(this.Functions.EnumerateSubscription); return call(this.ObjectAddress, uSubscriptionId, ref pSubscription, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscount(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSTeamError pError);
		public Int32 EnumerateSubscriptionDiscount(UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscount>(this.Functions.EnumerateSubscriptionDiscount); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, ref pSteamSubscriptionDiscount, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscountQualifier(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSTeamError pError);
		public Int32 EnumerateSubscriptionDiscountQualifier(UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscountQualifier>(this.Functions.EnumerateSubscriptionDiscountQualifier); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, uQualifierIdx, ref pSteamDiscountQualifier, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateApp(IntPtr thisobj, UInt32 uAppId, ref TSteamApp pApp, ref TSTeamError pError);
		public Int32 EnumerateApp(UInt32 uAppId, ref TSteamApp pApp, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateApp>(this.Functions.EnumerateApp); return call(this.ObjectAddress, uAppId, ref pApp, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppLaunchOption(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSTeamError pError);
		public Int32 EnumerateAppLaunchOption(UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppLaunchOption>(this.Functions.EnumerateAppLaunchOption); return call(this.ObjectAddress, uAppId, uLaunchOptionIndex, ref pLaunchOption, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeDeleteAccount(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 DeleteAccount(ref TSTeamError pError) { var call = this.GetFunction<NativeDeleteAccount>(this.Functions.DeleteAccount); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppIcon(IntPtr thisobj, UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSTeamError pError);
		public Int32 EnumerateAppIcon(UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppIcon>(this.Functions.EnumerateAppIcon); return call(this.ObjectAddress, uAppId, uIconIndex, pIconData, uIconDataBufSize, ref puSizeOfIconData, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLaunchApp(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSTeamError pError);
		public UInt32 LaunchApp(UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSTeamError pError) { var call = this.GetFunction<NativeLaunchApp>(this.Functions.LaunchApp); return call(this.ObjectAddress, uAppId, uLaunchOption, cszArgs, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheFilePath(IntPtr thisobj, UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetCacheFilePath(UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCacheFilePath>(this.Functions.GetCacheFilePath); return call(this.ObjectAddress, uAppId, szFilePath, uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSTeamError pError);
		public Int32 EnumerateAppVersion(UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppVersion>(this.Functions.EnumerateAppVersion); return call(this.ObjectAddress, uAppId, uVersionIndex, ref pAppVersion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppDependency(IntPtr thisobj, UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError);
		public Int32 EnumerateAppDependency(UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppDependency>(this.Functions.EnumerateAppDependency); return call(this.ObjectAddress, AppId, uDependency, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStartLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 StartLoadingCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeStartLoadingCache>(this.Functions.StartLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInsertAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError);
		public Int32 InsertAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeInsertAppDependency>(this.Functions.InsertAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRemoveAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSTeamError pError);
		public Int32 RemoveAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSTeamError pError) { var call = this.GetFunction<NativeRemoveAppDependency>(this.Functions.RemoveAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindApp(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public Int32 FindApp(string cszArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeFindApp>(this.Functions.FindApp); return call(this.ObjectAddress, cszArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDependencies(IntPtr thisobj, UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSTeamError pError);
		public Int32 GetAppDependencies(UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppDependencies>(this.Functions.GetAppDependencies); return call(this.ObjectAddress, uAppId, ref puDependecies, uBufferLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSubscribed(IntPtr thisobj, UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSTeamError pError);
		public Int32 IsSubscribed(UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSTeamError pError) { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress, uSubscriptionId, ref pbIsSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedInfo(IntPtr thisobj, UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSTeamError pError);
		public Int32 GetAppUserDefinedInfo(UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedInfo>(this.Functions.GetAppUserDefinedInfo); return call(this.ObjectAddress, uAppId, cszPropertyName, szPropertyValue, uBufSize, ref puPropertyValueLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForAppReadyToLaunch(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 WaitForAppReadyToLaunch(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeWaitForAppReadyToLaunch>(this.Functions.WaitForAppReadyToLaunch); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsCacheLoadingEnabled(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsLoading, ref TSTeamError pError);
		public Int32 IsCacheLoadingEnabled(UInt32 uAppId, ref Int32 pbIsLoading, ref TSTeamError pError) { var call = this.GetFunction<NativeIsCacheLoadingEnabled>(this.Functions.IsCacheLoadingEnabled); return call(this.ObjectAddress, uAppId, ref pbIsLoading, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStopLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 StopLoadingCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeStopLoadingCache>(this.Functions.StopLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamError NativeGetEncryptedUserIDTicket(IntPtr thisobj, IntPtr pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, IntPtr pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSTeamError pError);
		public ESteamError GetEncryptedUserIDTicket(IntPtr pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, IntPtr pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSTeamError pError) { var call = this.GetFunction<NativeGetEncryptedUserIDTicket>(this.Functions.GetEncryptedUserIDTicket); return call(this.ObjectAddress, pEncryptionKeyReceivedFromAppServer, uEncryptionKeyLength, pOutputBuffer, uSizeOfOutputBuffer, ref pReceiveSizeOfEncryptedTicket, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFlushCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 FlushCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeFlushCache>(this.Functions.FlushCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRepairOrDecryptCaches(IntPtr thisobj, UInt32 uAppId, Int32 iArg2, ref TSTeamError pError);
		public UInt32 RepairOrDecryptCaches(UInt32 uAppId, Int32 iArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeRepairOrDecryptCaches>(this.Functions.RepairOrDecryptCaches); return call(this.ObjectAddress, uAppId, iArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLoadCacheFromDir(IntPtr thisobj, UInt32 uAppId, string cszPath, ref TSTeamError pError);
		public UInt32 LoadCacheFromDir(UInt32 uAppId, string cszPath, ref TSTeamError pError) { var call = this.GetFunction<NativeLoadCacheFromDir>(this.Functions.LoadCacheFromDir); return call(this.ObjectAddress, uAppId, cszPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDefaultDirectory(IntPtr thisobj, string szPath, ref TSTeamError pError);
		public Int32 GetCacheDefaultDirectory(string szPath, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCacheDefaultDirectory>(this.Functions.GetCacheDefaultDirectory); return call(this.ObjectAddress, szPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCacheDefaultDirectory(IntPtr thisobj, string cszPath, ref TSTeamError pError);
		public Int32 SetCacheDefaultDirectory(string cszPath, ref TSTeamError pError) { var call = this.GetFunction<NativeSetCacheDefaultDirectory>(this.Functions.SetCacheDefaultDirectory); return call(this.ObjectAddress, cszPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDir(IntPtr thisobj, UInt32 uAppId, string szAppDir, ref TSTeamError pError);
		public Int32 GetAppDir(UInt32 uAppId, string szAppDir, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppDir>(this.Functions.GetAppDir); return call(this.ObjectAddress, uAppId, szAppDir, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeMoveApp(IntPtr thisobj, UInt32 uAppId, string szPath, ref TSTeamError pError);
		public UInt32 MoveApp(UInt32 uAppId, string szPath, ref TSTeamError pError) { var call = this.GetFunction<NativeMoveApp>(this.Functions.MoveApp); return call(this.ObjectAddress, uAppId, szPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppCacheSize(IntPtr thisobj, UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSTeamError pError);
		public UInt32 GetAppCacheSize(UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppCacheSize>(this.Functions.GetAppCacheSize); return call(this.ObjectAddress, uAppId, ref puCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppCacheSize(IntPtr thisobj, UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSTeamError pError);
		public UInt32 SetAppCacheSize(UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSTeamError pError) { var call = this.GetFunction<NativeSetAppCacheSize>(this.Functions.SetAppCacheSize); return call(this.ObjectAddress, uAppId, uCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uAppVersionId, ref TSTeamError pError);
		public UInt32 SetAppVersion(UInt32 uAppId, UInt32 uAppVersionId, ref TSTeamError pError) { var call = this.GetFunction<NativeSetAppVersion>(this.Functions.SetAppVersion); return call(this.ObjectAddress, uAppId, uAppVersionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUninstall(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 Uninstall(ref TSTeamError pError) { var call = this.GetFunction<NativeUninstall>(this.Functions.Uninstall); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetNotificationCallback(IntPtr thisobj, ref IntPtr pCallbackFunction, ref TSTeamError pError);
		public Int32 SetNotificationCallback(ref IntPtr pCallbackFunction, ref TSTeamError pError) { var call = this.GetFunction<NativeSetNotificationCallback>(this.Functions.SetNotificationCallback); return call(this.ObjectAddress, ref pCallbackFunction, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeForgottenPassword(IntPtr thisobj, string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSTeamError pError);
		public UInt32 ChangeForgottenPassword(string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeForgottenPassword>(this.Functions.ChangeForgottenPassword); return call(this.ObjectAddress, cszArg1, cszArg2, cszArg3, cszArg4, ref piArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestForgottenPasswordEmail(IntPtr thisobj, string cszArg1, string szArg2, ref TSTeamError pError);
		public UInt32 RequestForgottenPasswordEmail(string cszArg1, string szArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestForgottenPasswordEmail>(this.Functions.RequestForgottenPasswordEmail); return call(this.ObjectAddress, cszArg1, szArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByEmailAddressEmail(IntPtr thisobj, string cszArg1, ref TSTeamError pError);
		public UInt32 RequestAccountsByEmailAddressEmail(string cszArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestAccountsByEmailAddressEmail>(this.Functions.RequestAccountsByEmailAddressEmail); return call(this.ObjectAddress, cszArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByCdKeyEmail(IntPtr thisobj, string cszArg1, ref TSTeamError pError);
		public UInt32 RequestAccountsByCdKeyEmail(string cszArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestAccountsByCdKeyEmail>(this.Functions.RequestAccountsByCdKeyEmail); return call(this.ObjectAddress, cszArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAccountsWithEmailAddress(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public UInt32 GetNumAccountsWithEmailAddress(string cszArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeGetNumAccountsWithEmailAddress>(this.Functions.GetNumAccountsWithEmailAddress); return call(this.ObjectAddress, cszArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateAccountBillingInfo(IntPtr thisobj, ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSTeamError pError);
		public UInt32 UpdateAccountBillingInfo(ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeUpdateAccountBillingInfo>(this.Functions.UpdateAccountBillingInfo); return call(this.ObjectAddress, ref pPaymentCardInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateSubscriptionBillingInfo(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError);
		public UInt32 UpdateSubscriptionBillingInfo(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeUpdateSubscriptionBillingInfo>(this.Functions.UpdateSubscriptionBillingInfo); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSponsorUrl(IntPtr thisobj, UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSTeamError pError);
		public Int32 GetSponsorUrl(UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSponsorUrl>(this.Functions.GetSponsorUrl); return call(this.ObjectAddress, uAppId, szUrl, uBufSize, ref pUrlChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetContentServerInfo(IntPtr thisobj, UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSTeamError pError);
		public Int32 GetContentServerInfo(UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSTeamError pError) { var call = this.GetFunction<NativeGetContentServerInfo>(this.Functions.GetContentServerInfo); return call(this.ObjectAddress, uArg1, ref puArg2, ref puArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppUpdateStats(IntPtr thisobj, UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError);
		public UInt32 GetAppUpdateStats(UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppUpdateStats>(this.Functions.GetAppUpdateStats); return call(this.ObjectAddress, uAppId, eSteamAppUpdateStatsQueryType, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetTotalUpdateStats(IntPtr thisobj, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError);
		public Int32 GetTotalUpdateStats(ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetTotalUpdateStats>(this.Functions.GetTotalUpdateStats); return call(this.ObjectAddress, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateCachePreloaders(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 CreateCachePreloaders(ref TSTeamError pError) { var call = this.GetFunction<NativeCreateCachePreloaders>(this.Functions.CreateCachePreloaders); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpComment(IntPtr thisobj, string cszComment);
		public void Win32SetMiniDumpComment(string cszComment) { var call = this.GetFunction<NativeWin32SetMiniDumpComment>(this.Functions.Win32SetMiniDumpComment); call(this.ObjectAddress, cszComment); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpSourceControlId(IntPtr thisobj, UInt32 uSourceControlId);
		public void Win32SetMiniDumpSourceControlId(UInt32 uSourceControlId) { var call = this.GetFunction<NativeWin32SetMiniDumpSourceControlId>(this.Functions.Win32SetMiniDumpSourceControlId); call(this.ObjectAddress, uSourceControlId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpEnableFullMemory(IntPtr thisobj);
		public void Win32SetMiniDumpEnableFullMemory() { var call = this.GetFunction<NativeWin32SetMiniDumpEnableFullMemory>(this.Functions.Win32SetMiniDumpEnableFullMemory); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32WriteMiniDump(IntPtr thisobj, string arg1, string arg2, string arg3, string arg4, UInt32 arg5);
		public void Win32WriteMiniDump(string arg1, string arg2, string arg3, string arg4, UInt32 arg5) { var call = this.GetFunction<NativeWin32WriteMiniDump>(this.Functions.Win32WriteMiniDump); call(this.ObjectAddress, arg1, arg2, arg3, arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentAppId(IntPtr thisobj, ref UInt32 puAppId, ref TSTeamError pError);
		public Int32 GetCurrentAppId(ref UInt32 puAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCurrentAppId>(this.Functions.GetCurrentAppId); return call(this.ObjectAddress, ref puAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppPurchaseCountry(IntPtr thisobj, UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetAppPurchaseCountry(UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppPurchaseCountry>(this.Functions.GetAppPurchaseCountry); return call(this.ObjectAddress, uAppId, szCountryCode, uBufferLength, ref puRecievedLength, ref pError); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam006VTable
	{
		public IntPtr ChangePassword;
		public IntPtr GetCurrentEmailAddress;
		public IntPtr ChangePersonalQA;
		public IntPtr ChangeEmailAddress;
		public IntPtr VerifyEmailAddress;
		public IntPtr RequestEmailAddressVerificationEmail;
		public IntPtr ChangeAccountName;
		public IntPtr MountAppFilesystem;
		public IntPtr UnmountAppFilesystem;
		public IntPtr MountFilesystem;
		public IntPtr UnmountFilesystem;
		public IntPtr Stat;
		public IntPtr SetvBuf;
		public IntPtr FlushFile;
		public IntPtr OpenFile;
		public IntPtr OpenFileEx;
		public IntPtr OpenTmpFile;
		public IntPtr ClearError;
		public IntPtr GetVersion;
		public IntPtr GetOfflineStatus;
		public IntPtr ChangeOfflineStatus;
		public IntPtr ProcessCall;
		public IntPtr AbortCall;
		public IntPtr BlockingCall;
		public IntPtr SetMaxStallCount;
		public IntPtr CloseFile;
		public IntPtr ReadFile;
		public IntPtr WriteFile;
		public IntPtr Getc;
		public IntPtr Putc;
		public IntPtr SeekFile;
		public IntPtr TellFile;
		public IntPtr SizeFile;
		public IntPtr FindFirst;
		public IntPtr FindNext;
		public IntPtr FindClose;
		public IntPtr GetLocalFileCopy;
		public IntPtr IsFileImmediatelyAvailable;
		public IntPtr HintResourceNeed;
		public IntPtr ForgetAllHints;
		public IntPtr PauseCachePreloading;
		public IntPtr ResumeCachePreloading;
		public IntPtr WaitForResources;
		public IntPtr StartEngine;
		public IntPtr ShutdownEngine;
		public IntPtr Startup;
		public IntPtr Cleanup;
		public IntPtr NumAppsRunning;
		public IntPtr CreateAccount;
		public IntPtr GenerateSuggestedAccountNames;
		public IntPtr IsLoggedIn;
		public IntPtr Logout;
		public IntPtr IsSecureComputer;
		public IntPtr CreateLogContext;
		public IntPtr Log;
		public IntPtr LogResourceLoadStarted;
		public IntPtr LogResourceLoadFinished;
		public IntPtr RefreshLogin;
		public IntPtr VerifyPassword;
		public IntPtr GetUserType;
		public IntPtr GetAppStats;
		public IntPtr IsAccountNameInUse;
		public IntPtr GetAppIds;
		public IntPtr GetSubscriptionStats;
		public IntPtr RefreshAccountInfo;
		public IntPtr Subscribe;
		public IntPtr Unsubscribe;
		public IntPtr GetSubscriptionReceipt;
		public IntPtr GetAccountStatus;
		public IntPtr SetUser;
		public IntPtr GetUser;
		public IntPtr Login;
		public IntPtr AckSubscriptionReceipt;
		public IntPtr IsAppSubscribed;
		public IntPtr GetSubscriptionIds;
		public IntPtr EnumerateSubscription;
		public IntPtr EnumerateSubscriptionDiscount;
		public IntPtr EnumerateSubscriptionDiscountQualifier;
		public IntPtr EnumerateApp;
		public IntPtr EnumerateAppLaunchOption;
		public IntPtr DeleteAccount;
		public IntPtr EnumerateAppIcon;
		public IntPtr LaunchApp;
		public IntPtr GetCacheFilePath;
		public IntPtr EnumerateAppVersion;
		public IntPtr EnumerateAppDependency;
		public IntPtr StartLoadingCache;
		public IntPtr InsertAppDependency;
		public IntPtr RemoveAppDependency;
		public IntPtr FindApp;
		public IntPtr GetAppDependencies;
		public IntPtr IsSubscribed;
		public IntPtr GetAppUserDefinedInfo;
		public IntPtr WaitForAppReadyToLaunch;
		public IntPtr IsCacheLoadingEnabled;
		public IntPtr StopLoadingCache;
		public IntPtr GetEncryptedUserIDTicket;
		public IntPtr FlushCache;
		public IntPtr RepairOrDecryptCaches;
		public IntPtr LoadCacheFromDir;
		public IntPtr GetCacheDefaultDirectory;
		public IntPtr SetCacheDefaultDirectory;
		public IntPtr GetAppDir;
		public IntPtr MoveApp;
		public IntPtr GetAppCacheSize;
		public IntPtr SetAppCacheSize;
		public IntPtr SetAppVersion;
		public IntPtr Uninstall;
		public IntPtr SetNotificationCallback;
		public IntPtr ChangeForgottenPassword;
		public IntPtr RequestForgottenPasswordEmail;
		public IntPtr RequestAccountsByEmailAddressEmail;
		public IntPtr RequestAccountsByCdKeyEmail;
		public IntPtr GetNumAccountsWithEmailAddress;
		public IntPtr UpdateAccountBillingInfo;
		public IntPtr UpdateSubscriptionBillingInfo;
		public IntPtr GetSponsorUrl;
		public IntPtr GetContentServerInfo;
		public IntPtr GetAppUpdateStats;
		public IntPtr GetTotalUpdateStats;
		public IntPtr CreateCachePreloaders;
		public IntPtr Win32SetMiniDumpComment;
		public IntPtr Win32SetMiniDumpSourceControlId;
		public IntPtr Win32SetMiniDumpEnableFullMemory;
		public IntPtr Win32WriteMiniDump;
		public IntPtr GetCurrentAppId;
		public IntPtr GetAppPurchaseCountry;
		public IntPtr GetLocalClientVersion;
		public IntPtr IsFileNeededByCache;
		public IntPtr LoadFileToCache;
		public IntPtr GetCacheDecryptionKey;
		public IntPtr GetSubscriptionExtendedInfo;
		public IntPtr GetSubscriptionPurchaseCountry;
		public IntPtr GetAppUserDefinedRecord;
		public IntPtr FindServersNumServers;
		public IntPtr FindServersIterateServer;
		public IntPtr FindServersGetErrorString;
		public IntPtr CheckAppOwnership;
		public IntPtr GetCachePercentFragmentation;
		public IntPtr DefragCaches;
		public IntPtr IsFileNeededByApp;
		public IntPtr WaitForAppResources;
		public IntPtr ForceCellId;
	}
	
	public class ISteam006 : NativeWrapper<ISteam006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePassword(IntPtr thisobj, ref string_t cszCurrentPassphrase, ref string_t cszNewPassphrase, ref TSTeamError pError);
		public UInt32 ChangePassword(ref string_t cszCurrentPassphrase, ref string_t cszNewPassphrase, ref TSTeamError pError) { var call = this.GetFunction<NativeChangePassword>(this.Functions.ChangePassword); return call(this.ObjectAddress, ref cszCurrentPassphrase, ref cszNewPassphrase, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentEmailAddress(IntPtr thisobj, string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSTeamError pError);
		public Int32 GetCurrentEmailAddress(string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCurrentEmailAddress>(this.Functions.GetCurrentEmailAddress); return call(this.ObjectAddress, szEmailaddress, uBufSize, ref puEmailaddressChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePersonalQA(IntPtr thisobj, ref string_t cszCurrentPassphrase, ref string_t cszNewPersonalQuestion, ref string_t cszNewAnswerToQuestion, ref TSTeamError pError);
		public UInt32 ChangePersonalQA(ref string_t cszCurrentPassphrase, ref string_t cszNewPersonalQuestion, ref string_t cszNewAnswerToQuestion, ref TSTeamError pError) { var call = this.GetFunction<NativeChangePersonalQA>(this.Functions.ChangePersonalQA); return call(this.ObjectAddress, ref cszCurrentPassphrase, ref cszNewPersonalQuestion, ref cszNewAnswerToQuestion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeEmailAddress(IntPtr thisobj, ref string_t cszNewEmailAddress, ref TSTeamError pError);
		public UInt32 ChangeEmailAddress(ref string_t cszNewEmailAddress, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeEmailAddress>(this.Functions.ChangeEmailAddress); return call(this.ObjectAddress, ref cszNewEmailAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeVerifyEmailAddress(IntPtr thisobj, ref string_t cszEmailAddress, ref TSTeamError pError);
		public UInt32 VerifyEmailAddress(ref string_t cszEmailAddress, ref TSTeamError pError) { var call = this.GetFunction<NativeVerifyEmailAddress>(this.Functions.VerifyEmailAddress); return call(this.ObjectAddress, ref cszEmailAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestEmailAddressVerificationEmail(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 RequestEmailAddressVerificationEmail(ref TSTeamError pError) { var call = this.GetFunction<NativeRequestEmailAddressVerificationEmail>(this.Functions.RequestEmailAddressVerificationEmail); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeAccountName(IntPtr thisobj, ref string_t cszCurrentAccountName, ref string_t cszNewAccountName, ref TSTeamError pError);
		public UInt32 ChangeAccountName(ref string_t cszCurrentAccountName, ref string_t cszNewAccountName, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeAccountName>(this.Functions.ChangeAccountName); return call(this.ObjectAddress, ref cszCurrentAccountName, ref cszNewAccountName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountAppFilesystem(IntPtr thisobj, ref TSTeamError pError);
		public Int32 MountAppFilesystem(ref TSTeamError pError) { var call = this.GetFunction<NativeMountAppFilesystem>(this.Functions.MountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountAppFilesystem(IntPtr thisobj, ref TSTeamError pError);
		public Int32 UnmountAppFilesystem(ref TSTeamError pError) { var call = this.GetFunction<NativeUnmountAppFilesystem>(this.Functions.UnmountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeMountFilesystem(IntPtr thisobj, UInt32 uAppId, ref string_t szMountPath, ref TSTeamError pError);
		public UInt32 MountFilesystem(UInt32 uAppId, ref string_t szMountPath, ref TSTeamError pError) { var call = this.GetFunction<NativeMountFilesystem>(this.Functions.MountFilesystem); return call(this.ObjectAddress, uAppId, ref szMountPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountFilesystem(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 UnmountFilesystem(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeUnmountFilesystem>(this.Functions.UnmountFilesystem); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStat(IntPtr thisobj, ref string_t cszName, ref TSteamElemInfo pInfo, ref TSTeamError pError);
		public Int32 Stat(ref string_t cszName, ref TSteamElemInfo pInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeStat>(this.Functions.Stat); return call(this.ObjectAddress, ref cszName, ref pInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetvBuf(IntPtr thisobj, UInt32 hFile, IntPtr pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSTeamError pError);
		public Int32 SetvBuf(UInt32 hFile, IntPtr pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSTeamError pError) { var call = this.GetFunction<NativeSetvBuf>(this.Functions.SetvBuf); return call(this.ObjectAddress, hFile, pBuf, eMethod, uBytes, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFlushFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 FlushFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeFlushFile>(this.Functions.FlushFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFile(IntPtr thisobj, ref string_t cszName, ref string_t cszMode, ref TSTeamError pError);
		public UInt32 OpenFile(ref string_t cszName, ref string_t cszMode, ref TSTeamError pError) { var call = this.GetFunction<NativeOpenFile>(this.Functions.OpenFile); return call(this.ObjectAddress, ref cszName, ref cszMode, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFileEx(IntPtr thisobj, ref string_t cszFileName, ref string_t cszMode, Int32 iArg3, ref UInt32 puSize, ref Int32 piArg5, ref TSTeamError pError);
		public UInt32 OpenFileEx(ref string_t cszFileName, ref string_t cszMode, Int32 iArg3, ref UInt32 puSize, ref Int32 piArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeOpenFileEx>(this.Functions.OpenFileEx); return call(this.ObjectAddress, ref cszFileName, ref cszMode, iArg3, ref puSize, ref piArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenTmpFile(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 OpenTmpFile(ref TSTeamError pError) { var call = this.GetFunction<NativeOpenTmpFile>(this.Functions.OpenTmpFile); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearError(IntPtr thisobj, ref TSTeamError pError);
		public void ClearError(ref TSTeamError pError) { var call = this.GetFunction<NativeClearError>(this.Functions.ClearError); call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetVersion(IntPtr thisobj, string szVersion, UInt32 uVersionBufSize);
		public Int32 GetVersion(string szVersion, UInt32 uVersionBufSize) { var call = this.GetFunction<NativeGetVersion>(this.Functions.GetVersion); return call(this.ObjectAddress, szVersion, uVersionBufSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError);
		public Int32 GetOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError) { var call = this.GetFunction<NativeGetOfflineStatus>(this.Functions.GetOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeChangeOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError);
		public Int32 ChangeOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeOfflineStatus>(this.Functions.ChangeOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeProcessCall(IntPtr thisobj, UInt32 handle, ref TSteamProgress pProgress, ref TSTeamError pError);
		public Int32 ProcessCall(UInt32 handle, ref TSteamProgress pProgress, ref TSTeamError pError) { var call = this.GetFunction<NativeProcessCall>(this.Functions.ProcessCall); return call(this.ObjectAddress, handle, ref pProgress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAbortCall(IntPtr thisobj, UInt32 handle, ref TSTeamError pError);
		public Int32 AbortCall(UInt32 handle, ref TSTeamError pError) { var call = this.GetFunction<NativeAbortCall>(this.Functions.AbortCall); return call(this.ObjectAddress, handle, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeBlockingCall(IntPtr thisobj, UInt32 handle, UInt32 uiProcessTickMS, ref TSTeamError pError);
		public Int32 BlockingCall(UInt32 handle, UInt32 uiProcessTickMS, ref TSTeamError pError) { var call = this.GetFunction<NativeBlockingCall>(this.Functions.BlockingCall); return call(this.ObjectAddress, handle, uiProcessTickMS, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetMaxStallCount(IntPtr thisobj, UInt32 uNumStalls, ref TSTeamError pError);
		public Int32 SetMaxStallCount(UInt32 uNumStalls, ref TSTeamError pError) { var call = this.GetFunction<NativeSetMaxStallCount>(this.Functions.SetMaxStallCount); return call(this.ObjectAddress, uNumStalls, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCloseFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 CloseFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeCloseFile>(this.Functions.CloseFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeReadFile(IntPtr thisobj, IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError);
		public UInt32 ReadFile(IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeReadFile>(this.Functions.ReadFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWriteFile(IntPtr thisobj, IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError);
		public UInt32 WriteFile(IntPtr pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeWriteFile>(this.Functions.WriteFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetc(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 Getc(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeGetc>(this.Functions.Getc); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePutc(IntPtr thisobj, Int32 cChar, UInt32 hFile, ref TSTeamError pError);
		public Int32 Putc(Int32 cChar, UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativePutc>(this.Functions.Putc); return call(this.ObjectAddress, cChar, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSeekFile(IntPtr thisobj, UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSTeamError pError);
		public Int32 SeekFile(UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSTeamError pError) { var call = this.GetFunction<NativeSeekFile>(this.Functions.SeekFile); return call(this.ObjectAddress, hFile, lOffset, sm, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeTellFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 TellFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeTellFile>(this.Functions.TellFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSizeFile(IntPtr thisobj, UInt32 hFile, ref TSTeamError pError);
		public Int32 SizeFile(UInt32 hFile, ref TSTeamError pError) { var call = this.GetFunction<NativeSizeFile>(this.Functions.SizeFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFindFirst(IntPtr thisobj, string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSTeamError pError);
		public UInt32 FindFirst(string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeFindFirst>(this.Functions.FindFirst); return call(this.ObjectAddress, cszPattern, eFilter, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindNext(IntPtr thisobj, UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSTeamError pError);
		public Int32 FindNext(UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeFindNext>(this.Functions.FindNext); return call(this.ObjectAddress, hFind, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindClose(IntPtr thisobj, UInt32 hFind, ref TSTeamError pError);
		public Int32 FindClose(UInt32 hFind, ref TSTeamError pError) { var call = this.GetFunction<NativeFindClose>(this.Functions.FindClose); return call(this.ObjectAddress, hFind, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalFileCopy(IntPtr thisobj, string cszName, ref TSTeamError pError);
		public Int32 GetLocalFileCopy(string cszName, ref TSTeamError pError) { var call = this.GetFunction<NativeGetLocalFileCopy>(this.Functions.GetLocalFileCopy); return call(this.ObjectAddress, cszName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileImmediatelyAvailable(IntPtr thisobj, string cszName, ref TSTeamError pError);
		public Int32 IsFileImmediatelyAvailable(string cszName, ref TSTeamError pError) { var call = this.GetFunction<NativeIsFileImmediatelyAvailable>(this.Functions.IsFileImmediatelyAvailable); return call(this.ObjectAddress, cszName, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeHintResourceNeed(IntPtr thisobj, string cszHintList, Int32 bForgetEverything, ref TSTeamError pError);
		public Int32 HintResourceNeed(string cszHintList, Int32 bForgetEverything, ref TSTeamError pError) { var call = this.GetFunction<NativeHintResourceNeed>(this.Functions.HintResourceNeed); return call(this.ObjectAddress, cszHintList, bForgetEverything, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeForgetAllHints(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ForgetAllHints(ref TSTeamError pError) { var call = this.GetFunction<NativeForgetAllHints>(this.Functions.ForgetAllHints); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePauseCachePreloading(IntPtr thisobj, ref TSTeamError pError);
		public Int32 PauseCachePreloading(ref TSTeamError pError) { var call = this.GetFunction<NativePauseCachePreloading>(this.Functions.PauseCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResumeCachePreloading(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ResumeCachePreloading(ref TSTeamError pError) { var call = this.GetFunction<NativeResumeCachePreloading>(this.Functions.ResumeCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForResources(IntPtr thisobj, string cszMasterList, ref TSTeamError pError);
		public UInt32 WaitForResources(string cszMasterList, ref TSTeamError pError) { var call = this.GetFunction<NativeWaitForResources>(this.Functions.WaitForResources); return call(this.ObjectAddress, cszMasterList, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartEngine(IntPtr thisobj, ref TSTeamError pError);
		public Int32 StartEngine(ref TSTeamError pError) { var call = this.GetFunction<NativeStartEngine>(this.Functions.StartEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeShutdownEngine(IntPtr thisobj, ref TSTeamError pError);
		public Int32 ShutdownEngine(ref TSTeamError pError) { var call = this.GetFunction<NativeShutdownEngine>(this.Functions.ShutdownEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartup(IntPtr thisobj, UInt32 uUsingMask, ref TSTeamError pError);
		public Int32 Startup(UInt32 uUsingMask, ref TSTeamError pError) { var call = this.GetFunction<NativeStartup>(this.Functions.Startup); return call(this.ObjectAddress, uUsingMask, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCleanup(IntPtr thisobj, ref TSTeamError pError);
		public Int32 Cleanup(ref TSTeamError pError) { var call = this.GetFunction<NativeCleanup>(this.Functions.Cleanup); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeNumAppsRunning(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 NumAppsRunning(ref TSTeamError pError) { var call = this.GetFunction<NativeNumAppsRunning>(this.Functions.NumAppsRunning); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateAccount(IntPtr thisobj, string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, ref string_t cszArg6, ref Int32 pbCreated, ref TSTeamError pError);
		public UInt32 CreateAccount(string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, ref string_t cszArg6, ref Int32 pbCreated, ref TSTeamError pError) { var call = this.GetFunction<NativeCreateAccount>(this.Functions.CreateAccount); return call(this.ObjectAddress, cszUser, cszPassphrase, cszCreationKey, cszPersonalQuestion, cszAnswerToQuestion, ref cszArg6, ref pbCreated, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGenerateSuggestedAccountNames(IntPtr thisobj, ref string_t cszArg1, ref string_t cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSTeamError pError);
		public UInt32 GenerateSuggestedAccountNames(ref string_t cszArg1, ref string_t cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeGenerateSuggestedAccountNames>(this.Functions.GenerateSuggestedAccountNames); return call(this.ObjectAddress, ref cszArg1, ref cszArg2, szArg3, uArg4, ref puArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsLoggedIn(IntPtr thisobj, ref Int32 pbIsLoggedIn, ref TSTeamError pError);
		public Int32 IsLoggedIn(ref Int32 pbIsLoggedIn, ref TSTeamError pError) { var call = this.GetFunction<NativeIsLoggedIn>(this.Functions.IsLoggedIn); return call(this.ObjectAddress, ref pbIsLoggedIn, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogout(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 Logout(ref TSTeamError pError) { var call = this.GetFunction<NativeLogout>(this.Functions.Logout); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSecureComputer(IntPtr thisobj, ref Int32 pbIsSecure, ref TSTeamError pError);
		public Int32 IsSecureComputer(ref Int32 pbIsSecure, ref TSTeamError pError) { var call = this.GetFunction<NativeIsSecureComputer>(this.Functions.IsSecureComputer); return call(this.ObjectAddress, ref pbIsSecure, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateLogContext(IntPtr thisobj, string cszName);
		public UInt32 CreateLogContext(string cszName) { var call = this.GetFunction<NativeCreateLogContext>(this.Functions.CreateLogContext); return call(this.ObjectAddress, cszName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLog(IntPtr thisobj, UInt32 hContext, string cszMsg);
		public Int32 Log(UInt32 hContext, string cszMsg) { var call = this.GetFunction<NativeLog>(this.Functions.Log); return call(this.ObjectAddress, hContext, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadStarted(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadStarted(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadStarted>(this.Functions.LogResourceLoadStarted); call(this.ObjectAddress, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadFinished(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadFinished(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadFinished>(this.Functions.LogResourceLoadFinished); call(this.ObjectAddress, cszMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshLogin(IntPtr thisobj, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError);
		public UInt32 RefreshLogin(string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError) { var call = this.GetFunction<NativeRefreshLogin>(this.Functions.RefreshLogin); return call(this.ObjectAddress, cszPassphrase, bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeVerifyPassword(IntPtr thisobj, ref string_t cszArg1, ref Int32 piArg2, ref TSTeamError pError);
		public Int32 VerifyPassword(ref string_t cszArg1, ref Int32 piArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeVerifyPassword>(this.Functions.VerifyPassword); return call(this.ObjectAddress, ref cszArg1, ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserType(IntPtr thisobj, ref UInt32 puArg1, ref TSTeamError pError);
		public Int32 GetUserType(ref UInt32 puArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeGetUserType>(this.Functions.GetUserType); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppStats(IntPtr thisobj, ref TSteamAppStats pAppStats, ref TSTeamError pError);
		public Int32 GetAppStats(ref TSteamAppStats pAppStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppStats>(this.Functions.GetAppStats); return call(this.ObjectAddress, ref pAppStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeIsAccountNameInUse(IntPtr thisobj, ref string_t cszUser, ref Int32 pbInUse, ref TSTeamError pError);
		public UInt32 IsAccountNameInUse(ref string_t cszUser, ref Int32 pbInUse, ref TSTeamError pError) { var call = this.GetFunction<NativeIsAccountNameInUse>(this.Functions.IsAccountNameInUse); return call(this.ObjectAddress, ref cszUser, ref pbInUse, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError);
		public Int32 GetAppIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppIds>(this.Functions.GetAppIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionStats(IntPtr thisobj, ref TSteamSubscriptionStats pSubscriptionStats, ref TSTeamError pError);
		public Int32 GetSubscriptionStats(ref TSteamSubscriptionStats pSubscriptionStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionStats>(this.Functions.GetSubscriptionStats); return call(this.ObjectAddress, ref pSubscriptionStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshAccountInfo(IntPtr thisobj, Int32 arg1, ref TSTeamError pError);
		public UInt32 RefreshAccountInfo(Int32 arg1, ref TSTeamError pError) { var call = this.GetFunction<NativeRefreshAccountInfo>(this.Functions.RefreshAccountInfo); return call(this.ObjectAddress, arg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError);
		public UInt32 Subscribe(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeSubscribe>(this.Functions.Subscribe); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUnsubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSTeamError pError);
		public UInt32 Unsubscribe(UInt32 uSubscriptionId, ref TSTeamError pError) { var call = this.GetFunction<NativeUnsubscribe>(this.Functions.Unsubscribe); return call(this.ObjectAddress, uSubscriptionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionReceipt(IntPtr thisobj, UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSTeamError pError);
		public Int32 GetSubscriptionReceipt(UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionReceipt>(this.Functions.GetSubscriptionReceipt); return call(this.ObjectAddress, arg1, ref pSteamSubscriptionReceipt, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAccountStatus(IntPtr thisobj, ref UInt32 puArg1, ref TSTeamError pError);
		public Int32 GetAccountStatus(ref UInt32 puArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAccountStatus>(this.Functions.GetAccountStatus); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetUser(IntPtr thisobj, string cszUser, ref Int32 pbUserSet, ref TSTeamError pError);
		public UInt32 SetUser(string cszUser, ref Int32 pbUserSet, ref TSTeamError pError) { var call = this.GetFunction<NativeSetUser>(this.Functions.SetUser); return call(this.ObjectAddress, cszUser, ref pbUserSet, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUser(IntPtr thisobj, string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSTeamError pError);
		public Int32 GetUser(string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSTeamError pError) { var call = this.GetFunction<NativeGetUser>(this.Functions.GetUser); return call(this.ObjectAddress, szUser, uBufSize, ref puUserChars, ref pSteamGlobalUserID, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogin(IntPtr thisobj, string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError);
		public UInt32 Login(string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSTeamError pError) { var call = this.GetFunction<NativeLogin>(this.Functions.Login); return call(this.ObjectAddress, cszUser, cszPassphrase, bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeAckSubscriptionReceipt(IntPtr thisobj, UInt32 uArg1, ref TSTeamError pError);
		public UInt32 AckSubscriptionReceipt(UInt32 uArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeAckSubscriptionReceipt>(this.Functions.AckSubscriptionReceipt); return call(this.ObjectAddress, uArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsAppSubscribed(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSTeamError pError);
		public Int32 IsAppSubscribed(UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSTeamError pError) { var call = this.GetFunction<NativeIsAppSubscribed>(this.Functions.IsAppSubscribed); return call(this.ObjectAddress, uAppId, ref pbIsAppSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError);
		public Int32 GetSubscriptionIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionIds>(this.Functions.GetSubscriptionIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscription(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSTeamError pError);
		public Int32 EnumerateSubscription(UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscription>(this.Functions.EnumerateSubscription); return call(this.ObjectAddress, uSubscriptionId, ref pSubscription, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscount(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSTeamError pError);
		public Int32 EnumerateSubscriptionDiscount(UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscount>(this.Functions.EnumerateSubscriptionDiscount); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, ref pSteamSubscriptionDiscount, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscountQualifier(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSTeamError pError);
		public Int32 EnumerateSubscriptionDiscountQualifier(UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscountQualifier>(this.Functions.EnumerateSubscriptionDiscountQualifier); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, uQualifierIdx, ref pSteamDiscountQualifier, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateApp(IntPtr thisobj, UInt32 uAppId, ref TSteamApp pApp, ref TSTeamError pError);
		public Int32 EnumerateApp(UInt32 uAppId, ref TSteamApp pApp, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateApp>(this.Functions.EnumerateApp); return call(this.ObjectAddress, uAppId, ref pApp, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppLaunchOption(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSTeamError pError);
		public Int32 EnumerateAppLaunchOption(UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppLaunchOption>(this.Functions.EnumerateAppLaunchOption); return call(this.ObjectAddress, uAppId, uLaunchOptionIndex, ref pLaunchOption, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeDeleteAccount(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 DeleteAccount(ref TSTeamError pError) { var call = this.GetFunction<NativeDeleteAccount>(this.Functions.DeleteAccount); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppIcon(IntPtr thisobj, UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSTeamError pError);
		public Int32 EnumerateAppIcon(UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppIcon>(this.Functions.EnumerateAppIcon); return call(this.ObjectAddress, uAppId, uIconIndex, pIconData, uIconDataBufSize, ref puSizeOfIconData, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLaunchApp(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSTeamError pError);
		public UInt32 LaunchApp(UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSTeamError pError) { var call = this.GetFunction<NativeLaunchApp>(this.Functions.LaunchApp); return call(this.ObjectAddress, uAppId, uLaunchOption, cszArgs, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheFilePath(IntPtr thisobj, UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetCacheFilePath(UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCacheFilePath>(this.Functions.GetCacheFilePath); return call(this.ObjectAddress, uAppId, szFilePath, uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSTeamError pError);
		public Int32 EnumerateAppVersion(UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppVersion>(this.Functions.EnumerateAppVersion); return call(this.ObjectAddress, uAppId, uVersionIndex, ref pAppVersion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError);
		public Int32 EnumerateAppDependency(UInt32 uAppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeEnumerateAppDependency>(this.Functions.EnumerateAppDependency); return call(this.ObjectAddress, uAppId, uDependency, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStartLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 StartLoadingCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeStartLoadingCache>(this.Functions.StartLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInsertAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError);
		public Int32 InsertAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeInsertAppDependency>(this.Functions.InsertAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRemoveAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSTeamError pError);
		public Int32 RemoveAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSTeamError pError) { var call = this.GetFunction<NativeRemoveAppDependency>(this.Functions.RemoveAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindApp(IntPtr thisobj, ref string_t cszArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public Int32 FindApp(ref string_t cszArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeFindApp>(this.Functions.FindApp); return call(this.ObjectAddress, ref cszArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDependencies(IntPtr thisobj, UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSTeamError pError);
		public Int32 GetAppDependencies(UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppDependencies>(this.Functions.GetAppDependencies); return call(this.ObjectAddress, uAppId, ref puDependecies, uBufferLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSubscribed(IntPtr thisobj, UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSTeamError pError);
		public Int32 IsSubscribed(UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSTeamError pError) { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress, uSubscriptionId, ref pbIsSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedInfo(IntPtr thisobj, UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSTeamError pError);
		public Int32 GetAppUserDefinedInfo(UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedInfo>(this.Functions.GetAppUserDefinedInfo); return call(this.ObjectAddress, uAppId, cszPropertyName, szPropertyValue, uBufSize, ref puPropertyValueLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForAppReadyToLaunch(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 WaitForAppReadyToLaunch(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeWaitForAppReadyToLaunch>(this.Functions.WaitForAppReadyToLaunch); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsCacheLoadingEnabled(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsLoading, ref TSTeamError pError);
		public Int32 IsCacheLoadingEnabled(UInt32 uAppId, ref Int32 pbIsLoading, ref TSTeamError pError) { var call = this.GetFunction<NativeIsCacheLoadingEnabled>(this.Functions.IsCacheLoadingEnabled); return call(this.ObjectAddress, uAppId, ref pbIsLoading, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStopLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 StopLoadingCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeStopLoadingCache>(this.Functions.StopLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamError NativeGetEncryptedUserIDTicket(IntPtr thisobj, IntPtr pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, IntPtr pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSTeamError pError);
		public ESteamError GetEncryptedUserIDTicket(IntPtr pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, IntPtr pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSTeamError pError) { var call = this.GetFunction<NativeGetEncryptedUserIDTicket>(this.Functions.GetEncryptedUserIDTicket); return call(this.ObjectAddress, pEncryptionKeyReceivedFromAppServer, uEncryptionKeyLength, pOutputBuffer, uSizeOfOutputBuffer, ref pReceiveSizeOfEncryptedTicket, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFlushCache(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 FlushCache(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeFlushCache>(this.Functions.FlushCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRepairOrDecryptCaches(IntPtr thisobj, UInt32 uAppId, Int32 iArg2, ref TSTeamError pError);
		public UInt32 RepairOrDecryptCaches(UInt32 uAppId, Int32 iArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeRepairOrDecryptCaches>(this.Functions.RepairOrDecryptCaches); return call(this.ObjectAddress, uAppId, iArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLoadCacheFromDir(IntPtr thisobj, UInt32 uAppId, string cszPath, ref TSTeamError pError);
		public UInt32 LoadCacheFromDir(UInt32 uAppId, string cszPath, ref TSTeamError pError) { var call = this.GetFunction<NativeLoadCacheFromDir>(this.Functions.LoadCacheFromDir); return call(this.ObjectAddress, uAppId, cszPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDefaultDirectory(IntPtr thisobj, string szPath, ref TSTeamError pError);
		public Int32 GetCacheDefaultDirectory(string szPath, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCacheDefaultDirectory>(this.Functions.GetCacheDefaultDirectory); return call(this.ObjectAddress, szPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCacheDefaultDirectory(IntPtr thisobj, string cszPath, ref TSTeamError pError);
		public Int32 SetCacheDefaultDirectory(string cszPath, ref TSTeamError pError) { var call = this.GetFunction<NativeSetCacheDefaultDirectory>(this.Functions.SetCacheDefaultDirectory); return call(this.ObjectAddress, cszPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDir(IntPtr thisobj, UInt32 uAppId, string szAppDir, ref TSTeamError pError);
		public Int32 GetAppDir(UInt32 uAppId, string szAppDir, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppDir>(this.Functions.GetAppDir); return call(this.ObjectAddress, uAppId, szAppDir, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeMoveApp(IntPtr thisobj, UInt32 uAppId, string szPath, ref TSTeamError pError);
		public UInt32 MoveApp(UInt32 uAppId, string szPath, ref TSTeamError pError) { var call = this.GetFunction<NativeMoveApp>(this.Functions.MoveApp); return call(this.ObjectAddress, uAppId, szPath, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppCacheSize(IntPtr thisobj, UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSTeamError pError);
		public UInt32 GetAppCacheSize(UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppCacheSize>(this.Functions.GetAppCacheSize); return call(this.ObjectAddress, uAppId, ref puCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppCacheSize(IntPtr thisobj, UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSTeamError pError);
		public UInt32 SetAppCacheSize(UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSTeamError pError) { var call = this.GetFunction<NativeSetAppCacheSize>(this.Functions.SetAppCacheSize); return call(this.ObjectAddress, uAppId, uCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uAppVersionId, ref TSTeamError pError);
		public UInt32 SetAppVersion(UInt32 uAppId, UInt32 uAppVersionId, ref TSTeamError pError) { var call = this.GetFunction<NativeSetAppVersion>(this.Functions.SetAppVersion); return call(this.ObjectAddress, uAppId, uAppVersionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUninstall(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 Uninstall(ref TSTeamError pError) { var call = this.GetFunction<NativeUninstall>(this.Functions.Uninstall); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetNotificationCallback(IntPtr thisobj, ref IntPtr pCallbackFunction, ref TSTeamError pError);
		public Int32 SetNotificationCallback(ref IntPtr pCallbackFunction, ref TSTeamError pError) { var call = this.GetFunction<NativeSetNotificationCallback>(this.Functions.SetNotificationCallback); return call(this.ObjectAddress, ref pCallbackFunction, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeForgottenPassword(IntPtr thisobj, ref string_t cszArg1, ref string_t cszArg2, ref string_t cszArg3, ref string_t cszArg4, ref Int32 piArg5, ref TSTeamError pError);
		public UInt32 ChangeForgottenPassword(ref string_t cszArg1, ref string_t cszArg2, ref string_t cszArg3, ref string_t cszArg4, ref Int32 piArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeChangeForgottenPassword>(this.Functions.ChangeForgottenPassword); return call(this.ObjectAddress, ref cszArg1, ref cszArg2, ref cszArg3, ref cszArg4, ref piArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestForgottenPasswordEmail(IntPtr thisobj, ref string_t cszArg1, string szArg2, ref TSTeamError pError);
		public UInt32 RequestForgottenPasswordEmail(ref string_t cszArg1, string szArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestForgottenPasswordEmail>(this.Functions.RequestForgottenPasswordEmail); return call(this.ObjectAddress, ref cszArg1, szArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByEmailAddressEmail(IntPtr thisobj, ref string_t cszArg1, ref TSTeamError pError);
		public UInt32 RequestAccountsByEmailAddressEmail(ref string_t cszArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestAccountsByEmailAddressEmail>(this.Functions.RequestAccountsByEmailAddressEmail); return call(this.ObjectAddress, ref cszArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByCdKeyEmail(IntPtr thisobj, ref string_t cszArg1, ref TSTeamError pError);
		public UInt32 RequestAccountsByCdKeyEmail(ref string_t cszArg1, ref TSTeamError pError) { var call = this.GetFunction<NativeRequestAccountsByCdKeyEmail>(this.Functions.RequestAccountsByCdKeyEmail); return call(this.ObjectAddress, ref cszArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAccountsWithEmailAddress(IntPtr thisobj, ref string_t cszArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public UInt32 GetNumAccountsWithEmailAddress(ref string_t cszArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeGetNumAccountsWithEmailAddress>(this.Functions.GetNumAccountsWithEmailAddress); return call(this.ObjectAddress, ref cszArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateAccountBillingInfo(IntPtr thisobj, ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSTeamError pError);
		public UInt32 UpdateAccountBillingInfo(ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeUpdateAccountBillingInfo>(this.Functions.UpdateAccountBillingInfo); return call(this.ObjectAddress, ref pPaymentCardInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateSubscriptionBillingInfo(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError);
		public UInt32 UpdateSubscriptionBillingInfo(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSTeamError pError) { var call = this.GetFunction<NativeUpdateSubscriptionBillingInfo>(this.Functions.UpdateSubscriptionBillingInfo); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSponsorUrl(IntPtr thisobj, UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSTeamError pError);
		public Int32 GetSponsorUrl(UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSponsorUrl>(this.Functions.GetSponsorUrl); return call(this.ObjectAddress, uAppId, szUrl, uBufSize, ref pUrlChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetContentServerInfo(IntPtr thisobj, UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSTeamError pError);
		public Int32 GetContentServerInfo(UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSTeamError pError) { var call = this.GetFunction<NativeGetContentServerInfo>(this.Functions.GetContentServerInfo); return call(this.ObjectAddress, uArg1, ref puArg2, ref puArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppUpdateStats(IntPtr thisobj, UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError);
		public UInt32 GetAppUpdateStats(UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppUpdateStats>(this.Functions.GetAppUpdateStats); return call(this.ObjectAddress, uAppId, eSteamAppUpdateStatsQueryType, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetTotalUpdateStats(IntPtr thisobj, ref TSteamUpdateStats arg1, ref TSTeamError pError);
		public Int32 GetTotalUpdateStats(ref TSteamUpdateStats arg1, ref TSTeamError pError) { var call = this.GetFunction<NativeGetTotalUpdateStats>(this.Functions.GetTotalUpdateStats); return call(this.ObjectAddress, ref arg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateCachePreloaders(IntPtr thisobj, ref TSTeamError pError);
		public UInt32 CreateCachePreloaders(ref TSTeamError pError) { var call = this.GetFunction<NativeCreateCachePreloaders>(this.Functions.CreateCachePreloaders); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpComment(IntPtr thisobj, ref string_t cszComment);
		public void Win32SetMiniDumpComment(ref string_t cszComment) { var call = this.GetFunction<NativeWin32SetMiniDumpComment>(this.Functions.Win32SetMiniDumpComment); call(this.ObjectAddress, ref cszComment); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpSourceControlId(IntPtr thisobj, UInt32 uSourceControlId);
		public void Win32SetMiniDumpSourceControlId(UInt32 uSourceControlId) { var call = this.GetFunction<NativeWin32SetMiniDumpSourceControlId>(this.Functions.Win32SetMiniDumpSourceControlId); call(this.ObjectAddress, uSourceControlId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpEnableFullMemory(IntPtr thisobj);
		public void Win32SetMiniDumpEnableFullMemory() { var call = this.GetFunction<NativeWin32SetMiniDumpEnableFullMemory>(this.Functions.Win32SetMiniDumpEnableFullMemory); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32WriteMiniDump(IntPtr thisobj, ref string_t arg1, ref string_t arg2, ref string_t arg3, ref string_t arg4, UInt32 arg5);
		public void Win32WriteMiniDump(ref string_t arg1, ref string_t arg2, ref string_t arg3, ref string_t arg4, UInt32 arg5) { var call = this.GetFunction<NativeWin32WriteMiniDump>(this.Functions.Win32WriteMiniDump); call(this.ObjectAddress, ref arg1, ref arg2, ref arg3, ref arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentAppId(IntPtr thisobj, ref UInt32 puAppId, ref TSTeamError pError);
		public Int32 GetCurrentAppId(ref UInt32 puAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCurrentAppId>(this.Functions.GetCurrentAppId); return call(this.ObjectAddress, ref puAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppPurchaseCountry(IntPtr thisobj, UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref Int32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetAppPurchaseCountry(UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref Int32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppPurchaseCountry>(this.Functions.GetAppPurchaseCountry); return call(this.ObjectAddress, uAppId, szCountryCode, uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalClientVersion(IntPtr thisobj, ref UInt32 puArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public Int32 GetLocalClientVersion(ref UInt32 puArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeGetLocalClientVersion>(this.Functions.GetLocalClientVersion); return call(this.ObjectAddress, ref puArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileNeededByCache(IntPtr thisobj, UInt32 uAppId, ref string_t cszFileName, UInt32 uArg3, ref TSTeamError pError);
		public Int32 IsFileNeededByCache(UInt32 uAppId, ref string_t cszFileName, UInt32 uArg3, ref TSTeamError pError) { var call = this.GetFunction<NativeIsFileNeededByCache>(this.Functions.IsFileNeededByCache); return call(this.ObjectAddress, uAppId, ref cszFileName, uArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLoadFileToCache(IntPtr thisobj, UInt32 uArg1, ref string_t cszArg2, IntPtr pcvArg3, UInt32 uArg4, UInt32 uArg5, ref TSTeamError pError);
		public Int32 LoadFileToCache(UInt32 uArg1, ref string_t cszArg2, IntPtr pcvArg3, UInt32 uArg4, UInt32 uArg5, ref TSTeamError pError) { var call = this.GetFunction<NativeLoadFileToCache>(this.Functions.LoadFileToCache); return call(this.ObjectAddress, uArg1, ref cszArg2, pcvArg3, uArg4, uArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDecryptionKey(IntPtr thisobj, UInt32 uAppId, string szCacheDecryptionKey, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetCacheDecryptionKey(UInt32 uAppId, string szCacheDecryptionKey, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCacheDecryptionKey>(this.Functions.GetCacheDecryptionKey); return call(this.ObjectAddress, uAppId, szCacheDecryptionKey, uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionExtendedInfo(IntPtr thisobj, UInt32 uSubscriptionId, ref string_t cszKeyName, string szKeyValue, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError);
		public Int32 GetSubscriptionExtendedInfo(UInt32 uSubscriptionId, ref string_t cszKeyName, string szKeyValue, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionExtendedInfo>(this.Functions.GetSubscriptionExtendedInfo); return call(this.ObjectAddress, uSubscriptionId, ref cszKeyName, szKeyValue, uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionPurchaseCountry(IntPtr thisobj, UInt32 uSubscriptionId, string szCountry, UInt32 arg3, ref Int32 piRecievedLength, ref TSTeamError pError);
		public Int32 GetSubscriptionPurchaseCountry(UInt32 uSubscriptionId, string szCountry, UInt32 arg3, ref Int32 piRecievedLength, ref TSTeamError pError) { var call = this.GetFunction<NativeGetSubscriptionPurchaseCountry>(this.Functions.GetSubscriptionPurchaseCountry); return call(this.ObjectAddress, uSubscriptionId, szCountry, arg3, ref piRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedRecord(IntPtr thisobj, UInt32 uAppId, ref IntPtr AddEntryToKeyValueFunc, IntPtr pvCKeyValue, ref TSTeamError pError);
		public Int32 GetAppUserDefinedRecord(UInt32 uAppId, ref IntPtr AddEntryToKeyValueFunc, IntPtr pvCKeyValue, ref TSTeamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedRecord>(this.Functions.GetAppUserDefinedRecord); return call(this.ObjectAddress, uAppId, ref AddEntryToKeyValueFunc, pvCKeyValue, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindServersNumServers(IntPtr thisobj, ESteamServerType eSteamServerType);
		public Int32 FindServersNumServers(ESteamServerType eSteamServerType) { var call = this.GetFunction<NativeFindServersNumServers>(this.Functions.FindServersNumServers); return call(this.ObjectAddress, eSteamServerType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindServersIterateServer(IntPtr thisobj, ESteamServerType eSteamServerType, UInt32 uIndex, string szServerAddress, Int32 iServerAddressChars);
		public Int32 FindServersIterateServer(ESteamServerType eSteamServerType, UInt32 uIndex, string szServerAddress, Int32 iServerAddressChars) { var call = this.GetFunction<NativeFindServersIterateServer>(this.Functions.FindServersIterateServer); return call(this.ObjectAddress, eSteamServerType, uIndex, szServerAddress, iServerAddressChars); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string_t NativeFindServersGetErrorString(IntPtr thisobj);
		public string_t FindServersGetErrorString() { var call = this.GetFunction<NativeFindServersGetErrorString>(this.Functions.FindServersGetErrorString); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCheckAppOwnership(IntPtr thisobj, UInt32 uAppId, ref Int32 pbOwned, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSTeamError pError);
		public Int32 CheckAppOwnership(UInt32 uAppId, ref Int32 pbOwned, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSTeamError pError) { var call = this.GetFunction<NativeCheckAppOwnership>(this.Functions.CheckAppOwnership); return call(this.ObjectAddress, uAppId, ref pbOwned, ref pSteamGlobalUserID, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetCachePercentFragmentation(IntPtr thisobj, UInt32 uAppId, ref UInt32 puPercentFragmented, ref TSTeamError pError);
		public UInt32 GetCachePercentFragmentation(UInt32 uAppId, ref UInt32 puPercentFragmented, ref TSTeamError pError) { var call = this.GetFunction<NativeGetCachePercentFragmentation>(this.Functions.GetCachePercentFragmentation); return call(this.ObjectAddress, uAppId, ref puPercentFragmented, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeDefragCaches(IntPtr thisobj, UInt32 uAppId, ref TSTeamError pError);
		public UInt32 DefragCaches(UInt32 uAppId, ref TSTeamError pError) { var call = this.GetFunction<NativeDefragCaches>(this.Functions.DefragCaches); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileNeededByApp(IntPtr thisobj, UInt32 uAppId, ref string_t cszFileName, UInt32 uArg1, ref UInt32 puArg2, ref TSTeamError pError);
		public Int32 IsFileNeededByApp(UInt32 uAppId, ref string_t cszFileName, UInt32 uArg1, ref UInt32 puArg2, ref TSTeamError pError) { var call = this.GetFunction<NativeIsFileNeededByApp>(this.Functions.IsFileNeededByApp); return call(this.ObjectAddress, uAppId, ref cszFileName, uArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForAppResources(IntPtr thisobj, UInt32 uAppId, ref string_t cszMasterList, ref TSTeamError pError);
		public UInt32 WaitForAppResources(UInt32 uAppId, ref string_t cszMasterList, ref TSTeamError pError) { var call = this.GetFunction<NativeWaitForAppResources>(this.Functions.WaitForAppResources); return call(this.ObjectAddress, uAppId, ref cszMasterList, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeForceCellId(IntPtr thisobj, UInt32 uCellId, ref TSTeamError pError);
		public Int32 ForceCellId(UInt32 uCellId, ref TSTeamError pError) { var call = this.GetFunction<NativeForceCellId>(this.Functions.ForceCellId); return call(this.ObjectAddress, uCellId, ref pError); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats001VTable
	{
		public IntPtr GetNumStats;
		public IntPtr GetStatName;
		public IntPtr GetStatType;
		public IntPtr GetNumAchievements;
		public IntPtr GetAchievementName;
		public IntPtr GetNumGroupAchievements;
		public IntPtr GetGroupAchievementName;
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr GetGroupAchievement;
		public IntPtr SetAchievement;
		public IntPtr SetGroupAchievement;
		public IntPtr StoreStats;
		public IntPtr ClearAchievement;
		public IntPtr ClearGroupAchievement;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
	}
	
	public class ISteamUserStats001 : NativeWrapper<ISteamUserStats001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumStats(IntPtr thisobj, CGameID nGameID);
		public UInt32 GetNumStats(CGameID nGameID) { var call = this.GetFunction<NativeGetNumStats>(this.Functions.GetNumStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetStatName(IntPtr thisobj, CGameID nGameID, UInt32 iStat);
		public string GetStatName(CGameID nGameID, UInt32 iStat) { var call = this.GetFunction<NativeGetStatName>(this.Functions.GetStatName); return call(this.ObjectAddress, nGameID, iStat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamUserStatType NativeGetStatType(IntPtr thisobj, CGameID nGameID, string pchName);
		public ESteamUserStatType GetStatType(CGameID nGameID, string pchName) { var call = this.GetFunction<NativeGetStatType>(this.Functions.GetStatType); return call(this.ObjectAddress, nGameID, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAchievements(IntPtr thisobj, CGameID nGameID);
		public UInt32 GetNumAchievements(CGameID nGameID) { var call = this.GetFunction<NativeGetNumAchievements>(this.Functions.GetNumAchievements); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementName(IntPtr thisobj, CGameID nGameID, UInt32 iAchievement);
		public string GetAchievementName(CGameID nGameID, UInt32 iAchievement) { var call = this.GetFunction<NativeGetAchievementName>(this.Functions.GetAchievementName); return call(this.ObjectAddress, nGameID, iAchievement); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumGroupAchievements(IntPtr thisobj, CGameID arg1);
		public UInt32 GetNumGroupAchievements(CGameID arg1) { var call = this.GetFunction<NativeGetNumGroupAchievements>(this.Functions.GetNumGroupAchievements); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetGroupAchievementName(IntPtr thisobj, CGameID arg1, UInt32 iAchievement);
		public string GetGroupAchievementName(CGameID arg1, UInt32 iAchievement) { var call = this.GetFunction<NativeGetGroupAchievementName>(this.Functions.GetGroupAchievementName); return call(this.ObjectAddress, arg1, iAchievement); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj, CGameID nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats(CGameID nGameID) { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, CGameID nGameID, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(CGameID nGameID, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, nGameID, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, CGameID nGameID, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(CGameID nGameID, string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, nGameID, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, CGameID nGameID, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(CGameID nGameID, string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, nGameID, pchName, nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, CGameID nGameID, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(CGameID nGameID, string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, nGameID, pchName, fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, CGameID nGameID, string pchName, float arg3, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(CGameID nGameID, string pchName, float arg3, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, nGameID, pchName, arg3, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, CGameID nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(CGameID nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, nGameID, pchName, ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGroupAchievement(IntPtr thisobj, CGameID nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGroupAchievement(CGameID nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetGroupAchievement>(this.Functions.GetGroupAchievement); return call(this.ObjectAddress, nGameID, pchName, ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, CGameID nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(CGameID nGameID, string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, nGameID, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetGroupAchievement(IntPtr thisobj, CGameID nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetGroupAchievement(CGameID nGameID, string pchName) { var call = this.GetFunction<NativeSetGroupAchievement>(this.Functions.SetGroupAchievement); return call(this.ObjectAddress, nGameID, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj, CGameID nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats(CGameID nGameID) { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, CGameID nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(CGameID nGameID, string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, nGameID, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearGroupAchievement(IntPtr thisobj, CGameID nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearGroupAchievement(CGameID nGameID, string pchName) { var call = this.GetFunction<NativeClearGroupAchievement>(this.Functions.ClearGroupAchievement); return call(this.ObjectAddress, nGameID, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, CGameID nGameID, string pchName);
		public Int32 GetAchievementIcon(CGameID nGameID, string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, nGameID, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, CGameID nGameID, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(CGameID nGameID, string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return call(this.ObjectAddress, nGameID, pchName, pchKey); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats004VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr ResetAllStats;
	}
	
	public class ISteamUserStats004 : NativeWrapper<ISteamUserStats004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, pchName, nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, pchName, fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float arg2, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float arg2, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, pchName, arg2, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, pchName, ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return call(this.ObjectAddress, pchName, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, pchName, nCurProgress, nMaxProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 RequestUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, pchName, ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeResetAllStats(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);
		[return: MarshalAs(UnmanagedType.I1)] public bool ResetAllStats([MarshalAs(UnmanagedType.I1)] bool bAchievementsToo) { var call = this.GetFunction<NativeResetAllStats>(this.Functions.ResetAllStats); return call(this.ObjectAddress, bAchievementsToo); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats005VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr ResetAllStats;
		public IntPtr FindOrCreateLeaderboard;
		public IntPtr FindLeaderboard;
		public IntPtr GetLeaderboardName;
		public IntPtr GetLeaderboardEntryCount;
		public IntPtr GetLeaderboardSortMethod;
		public IntPtr GetLeaderboardDisplayType;
		public IntPtr DownloadLeaderboardEntries;
		public IntPtr GetDownloadedLeaderboardEntry;
		public IntPtr UploadLeaderboardScore;
	}
	
	public class ISteamUserStats005 : NativeWrapper<ISteamUserStats005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, pchName, nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, pchName, fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float flCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, pchName, flCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, pchName, ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, pchName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return call(this.ObjectAddress, pchName, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, pchName, nCurProgress, nMaxProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 RequestUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, pchName, ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, pchName, ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeResetAllStats(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);
		[return: MarshalAs(UnmanagedType.I1)] public bool ResetAllStats([MarshalAs(UnmanagedType.I1)] bool bAchievementsToo) { var call = this.GetFunction<NativeResetAllStats>(this.Functions.ResetAllStats); return call(this.ObjectAddress, bAchievementsToo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindOrCreateLeaderboard(IntPtr thisobj, string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType);
		public UInt64 FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType) { var call = this.GetFunction<NativeFindOrCreateLeaderboard>(this.Functions.FindOrCreateLeaderboard); return call(this.ObjectAddress, pchLeaderboardName, eLeaderboardSortMethod, eLeaderboardDisplayType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindLeaderboard(IntPtr thisobj, string pchLeaderboardName);
		public UInt64 FindLeaderboard(string pchLeaderboardName) { var call = this.GetFunction<NativeFindLeaderboard>(this.Functions.FindLeaderboard); return call(this.ObjectAddress, pchLeaderboardName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLeaderboardName(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public string GetLeaderboardName(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardName>(this.Functions.GetLeaderboardName); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLeaderboardEntryCount(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public Int32 GetLeaderboardEntryCount(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardEntryCount>(this.Functions.GetLeaderboardEntryCount); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardSortMethod NativeGetLeaderboardSortMethod(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardSortMethod GetLeaderboardSortMethod(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardSortMethod>(this.Functions.GetLeaderboardSortMethod); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardDisplayType NativeGetLeaderboardDisplayType(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardDisplayType GetLeaderboardDisplayType(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardDisplayType>(this.Functions.GetLeaderboardDisplayType); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDownloadLeaderboardEntries(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd);
		public UInt64 DownloadLeaderboardEntries(UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd) { var call = this.GetFunction<NativeDownloadLeaderboardEntries>(this.Functions.DownloadLeaderboardEntries); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardDataRequest, nRangeStart, nRangeEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetDownloadedLeaderboardEntry(IntPtr thisobj, UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetDownloadedLeaderboardEntry(UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax) { var call = this.GetFunction<NativeGetDownloadedLeaderboardEntry>(this.Functions.GetDownloadedLeaderboardEntry); return call(this.ObjectAddress, hSteamLeaderboardEntries, index, ref pLeaderboardEntry, ref pDetails, cDetailsMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUploadLeaderboardScore(IntPtr thisobj, UInt64 hSteamLeaderboard, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount);
		public UInt64 UploadLeaderboardScore(UInt64 hSteamLeaderboard, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount) { var call = this.GetFunction<NativeUploadLeaderboardScore>(this.Functions.UploadLeaderboardScore); return call(this.ObjectAddress, hSteamLeaderboard, nScore, ref pScoreDetails, cScoreDetailsCount); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingPingResponseVTable
	{
		public IntPtr ServerResponded;
		public IntPtr ServerFailedToRespond;
	}
	
	public class ISteamMatchmakingPingResponse : NativeWrapper<ISteamMatchmakingPingResponseVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeServerResponded(IntPtr thisobj, ref gameserveritem_t server);
		public void ServerResponded(ref gameserveritem_t server) { var call = this.GetFunction<NativeServerResponded>(this.Functions.ServerResponded); call(this.ObjectAddress, ref server); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeServerFailedToRespond(IntPtr thisobj);
		public void ServerFailedToRespond() { var call = this.GetFunction<NativeServerFailedToRespond>(this.Functions.ServerFailedToRespond); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking003VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListSlotsAvailableFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr SetLobbyVoiceEnabled;
		public IntPtr RequestFriendsLobbies;
	}
	
	public class ISteamMatchmaking003 : NativeWrapper<ISteamMatchmaking003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch);
		public void AddRequestLobbyListFilter(string pchKeyToMatch, string pchValueToMatch) { var call = this.GetFunction<NativeAddRequestLobbyListFilter>(this.Functions.AddRequestLobbyListFilter); call(this.ObjectAddress, pchKeyToMatch, pchValueToMatch); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, pchKeyToMatch, nValueToMatch, nComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListSlotsAvailableFilter(IntPtr thisobj);
		public void AddRequestLobbyListSlotsAvailableFilter() { var call = this.GetFunction<NativeAddRequestLobbyListSlotsAvailableFilter>(this.Functions.AddRequestLobbyListSlotsAvailableFilter); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyByIndex(IntPtr thisobj, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); return call(this.ObjectAddress, iLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateLobby(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bPrivate);
		public void CreateLobby([MarshalAs(UnmanagedType.I1)] bool bPrivate) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); call(this.ObjectAddress, bPrivate); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetLobbyMemberByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); return call(this.ObjectAddress, steamIDLobby, iMember); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return call(this.ObjectAddress, steamIDLobby, steamIDUser, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, IntPtr pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyVoiceEnabled(IntPtr thisobj, UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bEnabled);
		public Int32 SetLobbyVoiceEnabled(UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bEnabled) { var call = this.GetFunction<NativeSetLobbyVoiceEnabled>(this.Functions.SetLobbyVoiceEnabled); return call(this.ObjectAddress, steamIDLobby, bEnabled); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestFriendsLobbies(IntPtr thisobj);
		public Int32 RequestFriendsLobbies() { var call = this.GetFunction<NativeRequestFriendsLobbies>(this.Functions.RequestFriendsLobbies); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServerItems004VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr CreateNewItemRequest;
		public IntPtr AddNewItemLevel;
		public IntPtr AddNewItemQuality;
		public IntPtr SetNewItemInitialInventoryPos;
		public IntPtr SetNewItemInitialQuantity;
		public IntPtr AddNewItemCriteria;
		public IntPtr AddNewItemCriteria1;
		public IntPtr SendNewItemRequest;
		public IntPtr GrantItemToUser;
		public IntPtr DeleteTemporaryItem;
		public IntPtr DeleteAllTemporaryItems;
		public IntPtr UpdateQuantity;
		public IntPtr GetItemBlob;
		public IntPtr SetItemBlob;
	}
	
	public class ISteamGameServerItems004 : NativeWrapper<ISteamGameServerItems004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj, UInt64 steamid);
		public UInt64 LoadItems(UInt64 steamid) { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj, UInt64 steamid);
		public UInt64 GetItemCount(UInt64 steamid) { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, steamid, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, itemid, ref steamid, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemAttribute(IntPtr thisobj, UInt64 itemid, UInt32 i, ref UInt32 attribIndex, ref float attribValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemAttribute(UInt64 itemid, UInt32 i, ref UInt32 attribIndex, ref float attribValue) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); return call(this.ObjectAddress, itemid, i, ref attribIndex, ref attribValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateNewItemRequest(IntPtr thisobj, UInt64 steamid);
		public Int32 CreateNewItemRequest(UInt64 steamid) { var call = this.GetFunction<NativeCreateNewItemRequest>(this.Functions.CreateNewItemRequest); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemLevel(IntPtr thisobj, Int32 ireq, UInt32 level);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemLevel(Int32 ireq, UInt32 level) { var call = this.GetFunction<NativeAddNewItemLevel>(this.Functions.AddNewItemLevel); return call(this.ObjectAddress, ireq, level); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemQuality(IntPtr thisobj, Int32 ireq, EItemQuality quality);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemQuality(Int32 ireq, EItemQuality quality) { var call = this.GetFunction<NativeAddNewItemQuality>(this.Functions.AddNewItemQuality); return call(this.ObjectAddress, ireq, quality); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetNewItemInitialInventoryPos(IntPtr thisobj, Int32 ireq, UInt32 pos);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetNewItemInitialInventoryPos(Int32 ireq, UInt32 pos) { var call = this.GetFunction<NativeSetNewItemInitialInventoryPos>(this.Functions.SetNewItemInitialInventoryPos); return call(this.ObjectAddress, ireq, pos); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetNewItemInitialQuantity(IntPtr thisobj, Int32 ireq, UInt32 quantity);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetNewItemInitialQuantity(Int32 ireq, UInt32 quantity) { var call = this.GetFunction<NativeSetNewItemInitialQuantity>(this.Functions.SetNewItemInitialQuantity); return call(this.ObjectAddress, ireq, quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria(IntPtr thisobj, Int32 ireq, string key, EItemCriteriaOperator criteria, string value, [MarshalAs(UnmanagedType.I1)] bool unkn);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string key, EItemCriteriaOperator criteria, string value, [MarshalAs(UnmanagedType.I1)] bool unkn) { var call = this.GetFunction<NativeAddNewItemCriteria>(this.Functions.AddNewItemCriteria); return call(this.ObjectAddress, ireq, key, criteria, value, unkn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria1(IntPtr thisobj, Int32 ireq, string key, EItemCriteriaOperator criteria, float value, [MarshalAs(UnmanagedType.I1)] bool unkn);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string key, EItemCriteriaOperator criteria, float value, [MarshalAs(UnmanagedType.I1)] bool unkn) { var call = this.GetFunction<NativeAddNewItemCriteria1>(this.Functions.AddNewItemCriteria1); return call(this.ObjectAddress, ireq, key, criteria, value, unkn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSendNewItemRequest(IntPtr thisobj, Int32 ireq);
		public UInt64 SendNewItemRequest(Int32 ireq) { var call = this.GetFunction<NativeSendNewItemRequest>(this.Functions.SendNewItemRequest); return call(this.ObjectAddress, ireq); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGrantItemToUser(IntPtr thisobj, UInt64 item, UInt64 steamid);
		public UInt64 GrantItemToUser(UInt64 item, UInt64 steamid) { var call = this.GetFunction<NativeGrantItemToUser>(this.Functions.GrantItemToUser); return call(this.ObjectAddress, item, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteTemporaryItem(IntPtr thisobj, UInt64 item);
		public UInt64 DeleteTemporaryItem(UInt64 item) { var call = this.GetFunction<NativeDeleteTemporaryItem>(this.Functions.DeleteTemporaryItem); return call(this.ObjectAddress, item); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteAllTemporaryItems(IntPtr thisobj);
		public UInt64 DeleteAllTemporaryItems() { var call = this.GetFunction<NativeDeleteAllTemporaryItems>(this.Functions.DeleteAllTemporaryItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUpdateQuantity(IntPtr thisobj, UInt64 item, UInt32 quantity);
		public UInt64 UpdateQuantity(UInt64 item, UInt32 quantity) { var call = this.GetFunction<NativeUpdateQuantity>(this.Functions.UpdateQuantity); return call(this.ObjectAddress, item, quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemBlob(IntPtr thisobj, UInt64 item);
		public UInt64 GetItemBlob(UInt64 item) { var call = this.GetFunction<NativeGetItemBlob>(this.Functions.GetItemBlob); return call(this.ObjectAddress, item); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSetItemBlob(IntPtr thisobj, UInt64 item, IntPtr blob, UInt32 size);
		public UInt64 SetItemBlob(UInt64 item, IntPtr blob, UInt32 size) { var call = this.GetFunction<NativeSetItemBlob>(this.Functions.SetItemBlob); return call(this.ObjectAddress, item, blob, size); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientGameServerVTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr GetSteamID;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetLogonState;
		public IntPtr Connected;
		public IntPtr RaiseConnectionPriority;
		public IntPtr ResetConnectionPriority;
		public IntPtr SetCellID;
		public IntPtr TrackSteamUsageEvent;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr SetServerType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr UpdateUserData;
		public IntPtr UpdateStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr SetGameData;
		public IntPtr SetCountOfSimultaneousGuestUsersPerSteamAccount;
		public IntPtr EnumerateConnectedUsers;
		public IntPtr GetGameplayStats;
		public IntPtr RequestUserGroupStatus;
		public IntPtr GetPublicIP;
		public IntPtr GetAuthSessionTicket;
		public IntPtr BeginAuthSession;
		public IntPtr EndAuthSession;
		public IntPtr CancelAuthTicket;
		public IntPtr IsUserSubscribedAppInTicket;
		public IntPtr _GSSetSpawnCount;
		public IntPtr _GSGetSteam2GetEncryptionKeyToSendToNewClient;
		public IntPtr _GSSendSteam2UserConnect;
		public IntPtr _GSSendSteam3UserConnect;
		public IntPtr _GSSendUserConnect;
		public IntPtr _GSRemoveUserConnect;
		public IntPtr _GSSendUserDisconnect;
		public IntPtr _GSUpdateStatus;
		public IntPtr _GSCreateUnauthenticatedUser;
	}
	
	public class IClientGameServer : NativeWrapper<IClientGameServerVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt64 steamID);
		public void LogOn(UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELogonState NativeGetLogonState(IntPtr thisobj);
		public ELogonState GetLogonState() { var call = this.GetFunction<NativeGetLogonState>(this.Functions.GetLogonState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeConnected(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Connected() { var call = this.GetFunction<NativeConnected>(this.Functions.Connected); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRaiseConnectionPriority(IntPtr thisobj, UInt32 arg1);
		public Int32 RaiseConnectionPriority(UInt32 arg1) { var call = this.GetFunction<NativeRaiseConnectionPriority>(this.Functions.RaiseConnectionPriority); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResetConnectionPriority(IntPtr thisobj, Int32 arg1);
		public Int32 ResetConnectionPriority(Int32 arg1) { var call = this.GetFunction<NativeResetConnectionPriority>(this.Functions.ResetConnectionPriority); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCellID(IntPtr thisobj, UInt32 arg1);
		public Int32 SetCellID(UInt32 arg1) { var call = this.GetFunction<NativeSetCellID>(this.Functions.SetCellID); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeTrackSteamUsageEvent(IntPtr thisobj, UInt32 arg1, byte[] arg2, UInt32 arg3);
		public Int32 TrackSteamUsageEvent(UInt32 arg1, byte[] arg2, UInt32 arg3) { var call = this.GetFunction<NativeTrackSteamUsageEvent>(this.Functions.TrackSteamUsageEvent); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateUnauthenticatedUserConnection(IntPtr thisobj);
		public UInt64 CreateUnauthenticatedUserConnection() { var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, pchGameDir, pchVersion, bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, pchAchievementName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, pchPlayerName, uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateStatus>(this.Functions.UpdateStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pSpectatorServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, pchGameType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameData(IntPtr thisobj, string pchGameData);
		public void SetGameData(string pchGameData) { var call = this.GetFunction<NativeSetGameData>(this.Functions.SetGameData); call(this.ObjectAddress, pchGameData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCountOfSimultaneousGuestUsersPerSteamAccount(IntPtr thisobj, Int32 arg1);
		public Int32 SetCountOfSimultaneousGuestUsersPerSteamAccount(Int32 arg1) { var call = this.GetFunction<NativeSetCountOfSimultaneousGuestUsersPerSteamAccount>(this.Functions.SetCountOfSimultaneousGuestUsersPerSteamAccount); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateConnectedUsers(IntPtr thisobj, Int32 arg1, ref ConnectedUserInfo_t arg2);
		public Int32 EnumerateConnectedUsers(Int32 arg1, ref ConnectedUserInfo_t arg2) { var call = this.GetFunction<NativeEnumerateConnectedUsers>(this.Functions.EnumerateConnectedUsers); return call(this.ObjectAddress, arg1, ref arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserGroupStatus(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDGroup);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserGroupStatus(UInt64 steamIDUser, UInt64 steamIDGroup) { var call = this.GetFunction<NativeRequestUserGroupStatus>(this.Functions.RequestUserGroupStatus); return call(this.ObjectAddress, steamIDUser, steamIDGroup); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetPublicIP(IntPtr thisobj);
		public UInt32 GetPublicIP() { var call = this.GetFunction<NativeGetPublicIP>(this.Functions.GetPublicIP); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAuthSessionTicket(IntPtr thisobj, IntPtr pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		public UInt32 GetAuthSessionTicket(IntPtr pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetAuthSessionTicket>(this.Functions.GetAuthSessionTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeBeginAuthSession(IntPtr thisobj, IntPtr pAuthTicket, Int32 cbAuthTicket, UInt64 steamID);
		public Int32 BeginAuthSession(IntPtr pAuthTicket, Int32 cbAuthTicket, UInt64 steamID) { var call = this.GetFunction<NativeBeginAuthSession>(this.Functions.BeginAuthSession); return call(this.ObjectAddress, pAuthTicket, cbAuthTicket, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndAuthSession(IntPtr thisobj, UInt64 steamID);
		public void EndAuthSession(UInt64 steamID) { var call = this.GetFunction<NativeEndAuthSession>(this.Functions.EndAuthSession); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelAuthTicket(IntPtr thisobj, UInt32 hAuthTicket);
		public void CancelAuthTicket(UInt32 hAuthTicket) { var call = this.GetFunction<NativeCancelAuthTicket>(this.Functions.CancelAuthTicket); call(this.ObjectAddress, hAuthTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsUserSubscribedAppInTicket(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public Int32 IsUserSubscribedAppInTicket(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeIsUserSubscribedAppInTicket>(this.Functions.IsUserSubscribedAppInTicket); return call(this.ObjectAddress, steamID, appID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void Native_GSSetSpawnCount(IntPtr thisobj, UInt32 ucSpawn);
		public void _GSSetSpawnCount(UInt32 ucSpawn) { var call = this.GetFunction<Native_GSSetSpawnCount>(this.Functions._GSSetSpawnCount); call(this.ObjectAddress, ucSpawn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_GSGetSteam2GetEncryptionKeyToSendToNewClient(IntPtr thisobj, IntPtr pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool _GSGetSteam2GetEncryptionKeyToSendToNewClient(IntPtr pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey) { var call = this.GetFunction<Native_GSGetSteam2GetEncryptionKeyToSendToNewClient>(this.Functions._GSGetSteam2GetEncryptionKeyToSendToNewClient); return call(this.ObjectAddress, pvEncryptionKey, ref pcbEncryptionKey, cbMaxEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 Native_GSSendSteam2UserConnect(IntPtr thisobj, UInt32 arg1, IntPtr arg2, UInt32 arg3, UInt32 arg4, UInt16 arg5, IntPtr arg6, UInt32 arg7);
		public Int32 _GSSendSteam2UserConnect(UInt32 arg1, IntPtr arg2, UInt32 arg3, UInt32 arg4, UInt16 arg5, IntPtr arg6, UInt32 arg7) { var call = this.GetFunction<Native_GSSendSteam2UserConnect>(this.Functions._GSSendSteam2UserConnect); return call(this.ObjectAddress, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 Native_GSSendSteam3UserConnect(IntPtr thisobj, UInt64 arg1, UInt32 arg2, IntPtr arg3, UInt32 arg4);
		public Int32 _GSSendSteam3UserConnect(UInt64 arg1, UInt32 arg2, IntPtr arg3, UInt32 arg4) { var call = this.GetFunction<Native_GSSendSteam3UserConnect>(this.Functions._GSSendSteam3UserConnect); return call(this.ObjectAddress, arg1, arg2, arg3, arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 Native_GSSendUserConnect(IntPtr thisobj, UInt32 arg1, UInt32 arg2, UInt16 arg3, IntPtr arg4, UInt32 arg5);
		public Int32 _GSSendUserConnect(UInt32 arg1, UInt32 arg2, UInt16 arg3, IntPtr arg4, UInt32 arg5) { var call = this.GetFunction<Native_GSSendUserConnect>(this.Functions._GSSendUserConnect); return call(this.ObjectAddress, arg1, arg2, arg3, arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 Native_GSRemoveUserConnect(IntPtr thisobj, UInt32 arg1);
		public Int32 _GSRemoveUserConnect(UInt32 arg1) { var call = this.GetFunction<Native_GSRemoveUserConnect>(this.Functions._GSRemoveUserConnect); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 Native_GSSendUserDisconnect(IntPtr thisobj, UInt64 arg1, UInt32 arg2);
		public Int32 _GSSendUserDisconnect(UInt64 arg1, UInt32 arg2) { var call = this.GetFunction<Native_GSSendUserDisconnect>(this.Functions._GSSendUserDisconnect); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void Native_GSUpdateStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void _GSUpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<Native_GSUpdateStatus>(this.Functions._GSUpdateStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pSpectatorServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 Native_GSCreateUnauthenticatedUser(IntPtr thisobj, ref UInt64 arg1);
		public Int32 _GSCreateUnauthenticatedUser(ref UInt64 arg1) { var call = this.GetFunction<Native_GSCreateUnauthenticatedUser>(this.Functions._GSCreateUnauthenticatedUser); return call(this.ObjectAddress, ref arg1); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameStats001VTable
	{
		public IntPtr GetNewSession;
		public IntPtr EndSession;
		public IntPtr AddSessionAttributeInt;
		public IntPtr AddSessionAttributeString;
		public IntPtr AddSessionAttributeFloat;
		public IntPtr AddNewRow;
		public IntPtr CommitRow;
		public IntPtr CommitOutstandingRows;
		public IntPtr AddRowAttributeInt;
		public IntPtr AddRowAtributeString;
		public IntPtr AddRowAttributeFloat;
		public IntPtr AddSessionAttributeInt64;
		public IntPtr AddRowAttributeInt64;
	}
	
	public class ISteamGameStats001 : NativeWrapper<ISteamGameStats001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNewSession(IntPtr thisobj, SByte int8, UInt64 uint64, Int32 arg3, UInt32 arg4);
		public Int32 GetNewSession(SByte int8, UInt64 uint64, Int32 arg3, UInt32 arg4) { var call = this.GetFunction<NativeGetNewSession>(this.Functions.GetNewSession); return call(this.ObjectAddress, int8, uint64, arg3, arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEndSession(IntPtr thisobj, UInt64 uint64, UInt32 arg2, Int32 arg3);
		public Int32 EndSession(UInt64 uint64, UInt32 arg2, Int32 arg3) { var call = this.GetFunction<NativeEndSession>(this.Functions.EndSession); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddSessionAttributeInt(IntPtr thisobj, UInt64 uint64, string arg2, Int32 arg3);
		public Int32 AddSessionAttributeInt(UInt64 uint64, string arg2, Int32 arg3) { var call = this.GetFunction<NativeAddSessionAttributeInt>(this.Functions.AddSessionAttributeInt); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddSessionAttributeString(IntPtr thisobj, UInt64 uint64, string arg2, string arg3);
		public Int32 AddSessionAttributeString(UInt64 uint64, string arg2, string arg3) { var call = this.GetFunction<NativeAddSessionAttributeString>(this.Functions.AddSessionAttributeString); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddSessionAttributeFloat(IntPtr thisobj, UInt64 uint64, string arg2, float arg3);
		public Int32 AddSessionAttributeFloat(UInt64 uint64, string arg2, float arg3) { var call = this.GetFunction<NativeAddSessionAttributeFloat>(this.Functions.AddSessionAttributeFloat); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddNewRow(IntPtr thisobj, ref UInt64 arg1, UInt64 uint64, string arg3);
		public Int32 AddNewRow(ref UInt64 arg1, UInt64 uint64, string arg3) { var call = this.GetFunction<NativeAddNewRow>(this.Functions.AddNewRow); return call(this.ObjectAddress, ref arg1, uint64, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCommitRow(IntPtr thisobj, UInt64 uint64);
		public Int32 CommitRow(UInt64 uint64) { var call = this.GetFunction<NativeCommitRow>(this.Functions.CommitRow); return call(this.ObjectAddress, uint64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCommitOutstandingRows(IntPtr thisobj, UInt64 uint64);
		public Int32 CommitOutstandingRows(UInt64 uint64) { var call = this.GetFunction<NativeCommitOutstandingRows>(this.Functions.CommitOutstandingRows); return call(this.ObjectAddress, uint64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRowAttributeInt(IntPtr thisobj, UInt64 uint64, string arg2, Int32 arg3);
		public Int32 AddRowAttributeInt(UInt64 uint64, string arg2, Int32 arg3) { var call = this.GetFunction<NativeAddRowAttributeInt>(this.Functions.AddRowAttributeInt); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRowAtributeString(IntPtr thisobj, UInt64 uint64, string arg2, string arg3);
		public Int32 AddRowAtributeString(UInt64 uint64, string arg2, string arg3) { var call = this.GetFunction<NativeAddRowAtributeString>(this.Functions.AddRowAtributeString); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRowAttributeFloat(IntPtr thisobj, UInt64 uint64, string arg2, float arg3);
		public Int32 AddRowAttributeFloat(UInt64 uint64, string arg2, float arg3) { var call = this.GetFunction<NativeAddRowAttributeFloat>(this.Functions.AddRowAttributeFloat); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddSessionAttributeInt64(IntPtr thisobj, UInt64 uint64, string arg2, Int64 int64);
		public Int32 AddSessionAttributeInt64(UInt64 uint64, string arg2, Int64 int64) { var call = this.GetFunction<NativeAddSessionAttributeInt64>(this.Functions.AddSessionAttributeInt64); return call(this.ObjectAddress, uint64, arg2, int64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRowAttributeInt64(IntPtr thisobj, UInt64 uint64, string arg2, Int64 int64);
		public Int32 AddRowAttributeInt64(UInt64 uint64, string arg2, Int64 int64) { var call = this.GetFunction<NativeAddRowAttributeInt64>(this.Functions.AddRowAttributeInt64); return call(this.ObjectAddress, uint64, arg2, int64); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends001VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr SetPersonaState;
		public IntPtr AddFriend;
		public IntPtr RemoveFriend;
		public IntPtr HasFriend;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr Deprecated_GetFriendGamePlayed;
		public IntPtr GetFriendPersonaName;
		public IntPtr AddFriendByName;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr SendMsgToFriend;
		public IntPtr SetFriendRegValue;
		public IntPtr GetFriendRegValue;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr GetChatMessage;
		public IntPtr SendMsgToFriend1;
		public IntPtr GetChatIDOfChatHistoryStart;
		public IntPtr SetChatHistoryStart;
		public IntPtr ClearChatHistory;
		public IntPtr InviteFriendByEmail;
		public IntPtr GetBlockedFriendCount;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendGamePlayed2;
	}
	
	public class ISteamFriends001 : NativeWrapper<ISteamFriends001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, pchPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaState(IntPtr thisobj, EPersonaState ePersonaState);
		public void SetPersonaState(EPersonaState ePersonaState) { var call = this.GetFunction<NativeSetPersonaState>(this.Functions.SetPersonaState); call(this.ObjectAddress, ePersonaState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddFriend(IntPtr thisobj, UInt64 steamIDFriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddFriend(UInt64 steamIDFriend) { var call = this.GetFunction<NativeAddFriend>(this.Functions.AddFriend); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFriend(IntPtr thisobj, UInt64 steamIDFriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFriend(UInt64 steamIDFriend) { var call = this.GetFunction<NativeRemoveFriend>(this.Functions.RemoveFriend); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDeprecated_GetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref Int32 pnGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort);
		[return: MarshalAs(UnmanagedType.I1)] public bool Deprecated_GetFriendGamePlayed(UInt64 steamIDFriend, ref Int32 pnGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort) { var call = this.GetFunction<NativeDeprecated_GetFriendGamePlayed>(this.Functions.Deprecated_GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pnGameID, ref punGameIP, ref pusGamePort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFriendByName(IntPtr thisobj, string pchEmailOrAccountName);
		public Int32 AddFriendByName(string pchEmailOrAccountName) { var call = this.GetFunction<NativeAddFriendByName>(this.Functions.AddFriendByName); return call(this.ObjectAddress, pchEmailOrAccountName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj);
		public Int32 GetFriendCount() { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetFriendByIndex(IntPtr thisobj, Int32 iFriend);
		public UInt64 GetFriendByIndex(Int32 iFriend) { var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); return call(this.ObjectAddress, iFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendMsgToFriend(IntPtr thisobj, UInt64 steamIDFriend, EFriendMsgType eFriendMsgType, string pchMsgBody);
		public void SendMsgToFriend(UInt64 steamIDFriend, EFriendMsgType eFriendMsgType, string pchMsgBody) { var call = this.GetFunction<NativeSendMsgToFriend>(this.Functions.SendMsgToFriend); call(this.ObjectAddress, steamIDFriend, eFriendMsgType, pchMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey, string pchValue);
		public void SetFriendRegValue(UInt64 steamIDFriend, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetFriendRegValue>(this.Functions.SetFriendRegValue); call(this.ObjectAddress, steamIDFriend, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey);
		public string GetFriendRegValue(UInt64 steamIDFriend, string pchKey) { var call = this.GetFunction<NativeGetFriendRegValue>(this.Functions.GetFriendRegValue); return call(this.ObjectAddress, steamIDFriend, pchKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return call(this.ObjectAddress, steamIDFriend, iPersonaName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatMessage(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID, IntPtr pvData, Int32 cubData, ref EFriendMsgType peFriendMsgType);
		public Int32 GetChatMessage(UInt64 steamIDFriend, Int32 iChatID, IntPtr pvData, Int32 cubData, ref EFriendMsgType peFriendMsgType) { var call = this.GetFunction<NativeGetChatMessage>(this.Functions.GetChatMessage); return call(this.ObjectAddress, steamIDFriend, iChatID, pvData, cubData, ref peFriendMsgType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendMsgToFriend1(IntPtr thisobj, UInt64 steamIDFriend, EFriendMsgType eFriendMsgType, IntPtr pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendMsgToFriend(UInt64 steamIDFriend, EFriendMsgType eFriendMsgType, IntPtr pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendMsgToFriend1>(this.Functions.SendMsgToFriend1); return call(this.ObjectAddress, steamIDFriend, eFriendMsgType, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatIDOfChatHistoryStart(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetChatIDOfChatHistoryStart(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetChatIDOfChatHistoryStart>(this.Functions.GetChatIDOfChatHistoryStart); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetChatHistoryStart(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID);
		public void SetChatHistoryStart(UInt64 steamIDFriend, Int32 iChatID) { var call = this.GetFunction<NativeSetChatHistoryStart>(this.Functions.SetChatHistoryStart); call(this.ObjectAddress, steamIDFriend, iChatID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearChatHistory(IntPtr thisobj, UInt64 steamIDFriend);
		public void ClearChatHistory(UInt64 steamIDFriend) { var call = this.GetFunction<NativeClearChatHistory>(this.Functions.ClearChatHistory); call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInviteFriendByEmail(IntPtr thisobj, string pchEmailOrAccountName);
		public Int32 InviteFriendByEmail(string pchEmailOrAccountName) { var call = this.GetFunction<NativeInviteFriendByEmail>(this.Functions.InviteFriendByEmail); return call(this.ObjectAddress, pchEmailOrAccountName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetBlockedFriendCount(IntPtr thisobj);
		public UInt32 GetBlockedFriendCount() { var call = this.GetFunction<NativeGetBlockedFriendCount>(this.Functions.GetBlockedFriendCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pulGameID, ref punGameIP, ref pusGamePort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed2(IntPtr thisobj, UInt64 steamDIFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed2(UInt64 steamDIFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort) { var call = this.GetFunction<NativeGetFriendGamePlayed2>(this.Functions.GetFriendGamePlayed2); return call(this.ObjectAddress, steamDIFriend, ref pulGameID, ref punGameIP, ref pusGamePort, ref pusQueryPort); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser012VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr GetUserDataFolder;
		public IntPtr StartVoiceRecording;
		public IntPtr StopVoiceRecording;
		public IntPtr GetCompressedVoice;
		public IntPtr DecompressVoice;
		public IntPtr GetAuthSessionTicket;
		public IntPtr BeginAuthSession;
		public IntPtr EndAuthSession;
		public IntPtr CancelAuthTicket;
		public IntPtr UserHasLicenseForApp;
	}
	
	public class ISteamUser012 : NativeWrapper<ISteamUser012VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(IntPtr pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pAuthBlob, cbMaxAuthBlob, steamIDGameServer, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, CGameID gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(CGameID gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserDataFolder(IntPtr thisobj, string pchBuffer, Int32 cubBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserDataFolder(string pchBuffer, Int32 cubBuffer) { var call = this.GetFunction<NativeGetUserDataFolder>(this.Functions.GetUserDataFolder); return call(this.ObjectAddress, pchBuffer, cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartVoiceRecording(IntPtr thisobj);
		public void StartVoiceRecording() { var call = this.GetFunction<NativeStartVoiceRecording>(this.Functions.StartVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStopVoiceRecording(IntPtr thisobj);
		public void StopVoiceRecording() { var call = this.GetFunction<NativeStopVoiceRecording>(this.Functions.StopVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetCompressedVoice(IntPtr thisobj, IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult GetCompressedVoice(IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeGetCompressedVoice>(this.Functions.GetCompressedVoice); return call(this.ObjectAddress, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeDecompressVoice(IntPtr thisobj, IntPtr pCompressed, UInt32 cbCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult DecompressVoice(IntPtr pCompressed, UInt32 cbCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeDecompressVoice>(this.Functions.DecompressVoice); return call(this.ObjectAddress, pCompressed, cbCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAuthSessionTicket(IntPtr thisobj, IntPtr pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		public UInt32 GetAuthSessionTicket(IntPtr pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetAuthSessionTicket>(this.Functions.GetAuthSessionTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EBeginAuthSessionResult NativeBeginAuthSession(IntPtr thisobj, IntPtr pAuthTicket, Int32 cbAuthTicket, UInt64 steamID);
		public EBeginAuthSessionResult BeginAuthSession(IntPtr pAuthTicket, Int32 cbAuthTicket, UInt64 steamID) { var call = this.GetFunction<NativeBeginAuthSession>(this.Functions.BeginAuthSession); return call(this.ObjectAddress, pAuthTicket, cbAuthTicket, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndAuthSession(IntPtr thisobj, UInt64 steamID);
		public void EndAuthSession(UInt64 steamID) { var call = this.GetFunction<NativeEndAuthSession>(this.Functions.EndAuthSession); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelAuthTicket(IntPtr thisobj, UInt32 hAuthTicket);
		public void CancelAuthTicket(UInt32 hAuthTicket) { var call = this.GetFunction<NativeCancelAuthTicket>(this.Functions.CancelAuthTicket); call(this.ObjectAddress, hAuthTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUserHasLicenseForApp(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public UInt32 UserHasLicenseForApp(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeUserHasLicenseForApp>(this.Functions.UserHasLicenseForApp); return call(this.ObjectAddress, steamID, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingServerListResponseVTable
	{
		public IntPtr ServerResponded;
		public IntPtr ServerFailedToRespond;
		public IntPtr RefreshComplete;
	}
	
	public class ISteamMatchmakingServerListResponse : NativeWrapper<ISteamMatchmakingServerListResponseVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeServerResponded(IntPtr thisobj, Int32 iServer);
		public void ServerResponded(Int32 iServer) { var call = this.GetFunction<NativeServerResponded>(this.Functions.ServerResponded); call(this.ObjectAddress, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeServerFailedToRespond(IntPtr thisobj, Int32 iServer);
		public void ServerFailedToRespond(Int32 iServer) { var call = this.GetFunction<NativeServerFailedToRespond>(this.Functions.ServerFailedToRespond); call(this.ObjectAddress, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshComplete(IntPtr thisobj, EMatchMakingServerResponse response);
		public void RefreshComplete(EMatchMakingServerResponse response) { var call = this.GetFunction<NativeRefreshComplete>(this.Functions.RefreshComplete); call(this.ObjectAddress, response); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingRulesResponseVTable
	{
		public IntPtr RulesResponded;
		public IntPtr RulesFailedToRespond;
		public IntPtr RulesRefreshComplete;
	}
	
	public class ISteamMatchmakingRulesResponse : NativeWrapper<ISteamMatchmakingRulesResponseVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRulesResponded(IntPtr thisobj, string pchRule, string pchValue);
		public void RulesResponded(string pchRule, string pchValue) { var call = this.GetFunction<NativeRulesResponded>(this.Functions.RulesResponded); call(this.ObjectAddress, pchRule, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRulesFailedToRespond(IntPtr thisobj);
		public void RulesFailedToRespond() { var call = this.GetFunction<NativeRulesFailedToRespond>(this.Functions.RulesFailedToRespond); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRulesRefreshComplete(IntPtr thisobj);
		public void RulesRefreshComplete() { var call = this.GetFunction<NativeRulesRefreshComplete>(this.Functions.RulesRefreshComplete); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingServers002VTable
	{
		public IntPtr RequestInternetServerList;
		public IntPtr RequestLANServerList;
		public IntPtr RequestFriendsServerList;
		public IntPtr RequestFavoritesServerList;
		public IntPtr RequestHistoryServerList;
		public IntPtr RequestSpectatorServerList;
		public IntPtr ReleaseRequest;
		public IntPtr GetServerDetails;
		public IntPtr CancelQuery;
		public IntPtr RefreshQuery;
		public IntPtr IsRefreshing;
		public IntPtr GetServerCount;
		public IntPtr RefreshServer;
		public IntPtr PingServer;
		public IntPtr PlayerDetails;
		public IntPtr ServerRules;
		public IntPtr CancelServerQuery;
	}
	
	public class ISteamMatchmakingServers002 : NativeWrapper<ISteamMatchmakingServers002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestInternetServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public IntPtr RequestInternetServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestInternetServerList>(this.Functions.RequestInternetServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestLANServerList(IntPtr thisobj, UInt32 iApp, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public IntPtr RequestLANServerList(UInt32 iApp, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestLANServerList>(this.Functions.RequestLANServerList); return call(this.ObjectAddress, iApp, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestFriendsServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public IntPtr RequestFriendsServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestFriendsServerList>(this.Functions.RequestFriendsServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestFavoritesServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public IntPtr RequestFavoritesServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestFavoritesServerList>(this.Functions.RequestFavoritesServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestHistoryServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public IntPtr RequestHistoryServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestHistoryServerList>(this.Functions.RequestHistoryServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestSpectatorServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public IntPtr RequestSpectatorServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestSpectatorServerList>(this.Functions.RequestSpectatorServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeReleaseRequest(IntPtr thisobj, IntPtr pRequest);
		public Int32 ReleaseRequest(IntPtr pRequest) { var call = this.GetFunction<NativeReleaseRequest>(this.Functions.ReleaseRequest); return call(this.ObjectAddress, pRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate gameserveritem_t NativeGetServerDetails(IntPtr thisobj, IntPtr pRequest, Int32 iServer);
		public gameserveritem_t GetServerDetails(IntPtr pRequest, Int32 iServer) { var call = this.GetFunction<NativeGetServerDetails>(this.Functions.GetServerDetails); return call(this.ObjectAddress, pRequest, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelQuery(IntPtr thisobj, IntPtr pRequest);
		public void CancelQuery(IntPtr pRequest) { var call = this.GetFunction<NativeCancelQuery>(this.Functions.CancelQuery); call(this.ObjectAddress, pRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshQuery(IntPtr thisobj, IntPtr pRequest);
		public void RefreshQuery(IntPtr pRequest) { var call = this.GetFunction<NativeRefreshQuery>(this.Functions.RefreshQuery); call(this.ObjectAddress, pRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsRefreshing(IntPtr thisobj, IntPtr pRequest);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsRefreshing(IntPtr pRequest) { var call = this.GetFunction<NativeIsRefreshing>(this.Functions.IsRefreshing); return call(this.ObjectAddress, pRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetServerCount(IntPtr thisobj, IntPtr pRequest);
		public Int32 GetServerCount(IntPtr pRequest) { var call = this.GetFunction<NativeGetServerCount>(this.Functions.GetServerCount); return call(this.ObjectAddress, pRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshServer(IntPtr thisobj, IntPtr pRequest, Int32 iServer);
		public void RefreshServer(IntPtr pRequest, Int32 iServer) { var call = this.GetFunction<NativeRefreshServer>(this.Functions.RefreshServer); call(this.ObjectAddress, pRequest, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePingServer(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse);
		public Int32 PingServer(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse) { var call = this.GetFunction<NativePingServer>(this.Functions.PingServer); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePlayerDetails(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse);
		public Int32 PlayerDetails(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse) { var call = this.GetFunction<NativePlayerDetails>(this.Functions.PlayerDetails); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeServerRules(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse);
		public Int32 ServerRules(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse) { var call = this.GetFunction<NativeServerRules>(this.Functions.ServerRules); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelServerQuery(IntPtr thisobj, Int32 hServerQuery);
		public void CancelServerQuery(Int32 hServerQuery) { var call = this.GetFunction<NativeCancelServerQuery>(this.Functions.CancelServerQuery); call(this.ObjectAddress, hServerQuery); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientAppsVTable
	{
		public IntPtr GetAppData;
		public IntPtr GetInternalAppIDFromGameID;
		public IntPtr RequestAppCallbacks;
		public IntPtr SendUserSpecificAppData;
		public IntPtr GetAppDataSection;
		public IntPtr RequestAppInfoUpdate;
		public IntPtr NotifyAppStateChanged;
		public IntPtr NotifyDlcInstalled;
	}
	
	public class IClientApps : NativeWrapper<IClientAppsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppData(IntPtr thisobj, UInt32 unAppID, string pchKey, string pchValue, Int32 cchValueMax);
		public Int32 GetAppData(UInt32 unAppID, string pchKey, string pchValue, Int32 cchValueMax) { var call = this.GetFunction<NativeGetAppData>(this.Functions.GetAppData); return call(this.ObjectAddress, unAppID, pchKey, pchValue, cchValueMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetInternalAppIDFromGameID(IntPtr thisobj, CGameID gameID);
		public UInt32 GetInternalAppIDFromGameID(CGameID gameID) { var call = this.GetFunction<NativeGetInternalAppIDFromGameID>(this.Functions.GetInternalAppIDFromGameID); return call(this.ObjectAddress, gameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestAppCallbacks(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bOnlyMultiplayerApps);
		public void RequestAppCallbacks([MarshalAs(UnmanagedType.I1)] bool bOnlyMultiplayerApps) { var call = this.GetFunction<NativeRequestAppCallbacks>(this.Functions.RequestAppCallbacks); call(this.ObjectAddress, bOnlyMultiplayerApps); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserSpecificAppData(IntPtr thisobj, UInt32 unAppID, IntPtr pvData, Int32 cbData);
		public void SendUserSpecificAppData(UInt32 unAppID, IntPtr pvData, Int32 cbData) { var call = this.GetFunction<NativeSendUserSpecificAppData>(this.Functions.SendUserSpecificAppData); call(this.ObjectAddress, unAppID, pvData, cbData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDataSection(IntPtr thisobj, UInt32 unAppID, Int32 a, byte[] b, Int32 c);
		public Int32 GetAppDataSection(UInt32 unAppID, Int32 a, byte[] b, Int32 c) { var call = this.GetFunction<NativeGetAppDataSection>(this.Functions.GetAppDataSection); return call(this.ObjectAddress, unAppID, a, b, c); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestAppInfoUpdate(IntPtr thisobj, ref UInt32 pAppIDs, Int32 nNumAppIDs, [MarshalAs(UnmanagedType.I1)] bool bForceUpdate);
		public Int32 RequestAppInfoUpdate(ref UInt32 pAppIDs, Int32 nNumAppIDs, [MarshalAs(UnmanagedType.I1)] bool bForceUpdate) { var call = this.GetFunction<NativeRequestAppInfoUpdate>(this.Functions.RequestAppInfoUpdate); return call(this.ObjectAddress, ref pAppIDs, nNumAppIDs, bForceUpdate); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNotifyAppStateChanged(IntPtr thisobj, UInt32 unAppID, EAppState eAppState);
		public Int32 NotifyAppStateChanged(UInt32 unAppID, EAppState eAppState) { var call = this.GetFunction<NativeNotifyAppStateChanged>(this.Functions.NotifyAppStateChanged); return call(this.ObjectAddress, unAppID, eAppState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNotifyDlcInstalled(IntPtr thisobj, UInt32 unAppID);
		public Int32 NotifyDlcInstalled(UInt32 unAppID) { var call = this.GetFunction<NativeNotifyDlcInstalled>(this.Functions.NotifyDlcInstalled); return call(this.ObjectAddress, unAppID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamContentServer001VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr SendClientContentAuthRequest;
	}
	
	public class ISteamContentServer001 : NativeWrapper<ISteamContentServer001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLogOn(IntPtr thisobj, UInt32 a);
		[return: MarshalAs(UnmanagedType.I1)] public bool LogOn(UInt32 a) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); return call(this.ObjectAddress, a); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLogOff(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendClientContentAuthRequest(IntPtr thisobj, UInt64 steamId, UInt32 a);
		public void SendClientContentAuthRequest(UInt64 steamId, UInt32 a) { var call = this.GetFunction<NativeSendClientContentAuthRequest>(this.Functions.SendClientContentAuthRequest); call(this.ObjectAddress, steamId, a); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamContentServer002VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr SendClientContentAuthRequest;
		public IntPtr CheckTicket;
	}
	
	public class ISteamContentServer002 : NativeWrapper<ISteamContentServer002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLogOn(IntPtr thisobj, UInt32 a);
		[return: MarshalAs(UnmanagedType.I1)] public bool LogOn(UInt32 a) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); return call(this.ObjectAddress, a); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLogOff(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendClientContentAuthRequest(IntPtr thisobj, UInt64 steamId, UInt32 a, UInt64 b, [MarshalAs(UnmanagedType.I1)] bool c);
		public void SendClientContentAuthRequest(UInt64 steamId, UInt32 a, UInt64 b, [MarshalAs(UnmanagedType.I1)] bool c) { var call = this.GetFunction<NativeSendClientContentAuthRequest>(this.Functions.SendClientContentAuthRequest); call(this.ObjectAddress, steamId, a, b, c); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCheckTicket(IntPtr thisobj, UInt64 steamId, UInt32 a, IntPtr b, UInt32 c);
		[return: MarshalAs(UnmanagedType.I1)] public bool CheckTicket(UInt64 steamId, UInt32 a, IntPtr b, UInt32 c) { var call = this.GetFunction<NativeCheckTicket>(this.Functions.CheckTicket); return call(this.ObjectAddress, steamId, a, b, c); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam2Bridge001VTable
	{
		public IntPtr SetSteam2Ticket;
		public IntPtr SetAccountName;
		public IntPtr SetPassword;
		public IntPtr SetAccountCreationTime;
		public IntPtr CreateProcess;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetIPCountry;
		public IntPtr GetNumLicenses;
		public IntPtr GetLicensePackageID;
		public IntPtr GetLicenseTimeCreated;
		public IntPtr GetLicenseTimeNextProcess;
		public IntPtr GetLicenseMinuteLimit;
		public IntPtr GetLicenseMinutesUsed;
		public IntPtr GetLicensePaymentMethod;
		public IntPtr GetLicenseFlags;
		public IntPtr GetLicensePurchaseCountryCode;
		public IntPtr SetOfflineMode;
	}
	
	public class ISteam2Bridge001 : NativeWrapper<ISteam2Bridge001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetSteam2Ticket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public Int32 SetSteam2Ticket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2Ticket>(this.Functions.SetSteam2Ticket); return call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAccountName(IntPtr thisobj, string szName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAccountName(string szName) { var call = this.GetFunction<NativeSetAccountName>(this.Functions.SetAccountName); return call(this.ObjectAddress, szName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetPassword(IntPtr thisobj, string szPassword);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetPassword(string szPassword) { var call = this.GetFunction<NativeSetPassword>(this.Functions.SetPassword); return call(this.ObjectAddress, szPassword); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAccountCreationTime(IntPtr thisobj, UInt32 creationTime);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAccountCreationTime(UInt32 creationTime) { var call = this.GetFunction<NativeSetAccountCreationTime>(this.Functions.SetAccountCreationTime); return call(this.ObjectAddress, creationTime); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateProcess(IntPtr thisobj, IntPtr lpVACBlob, UInt32 cbBlobSize, string arg3, string arg4, UInt32 arg5, IntPtr arg6, string arg7, UInt32 arg8);
		public Int32 CreateProcess(IntPtr lpVACBlob, UInt32 cbBlobSize, string arg3, string arg4, UInt32 arg5, IntPtr arg6, string arg7, UInt32 arg8) { var call = this.GetFunction<NativeCreateProcess>(this.Functions.CreateProcess); return call(this.ObjectAddress, lpVACBlob, cbBlobSize, arg3, arg4, arg5, arg6, arg7, arg8); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumLicenses(IntPtr thisobj);
		public UInt32 GetNumLicenses() { var call = this.GetFunction<NativeGetNumLicenses>(this.Functions.GetNumLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicensePackageID(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicensePackageID(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePackageID>(this.Functions.GetLicensePackageID); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseTimeCreated(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseTimeCreated(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeCreated>(this.Functions.GetLicenseTimeCreated); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseTimeNextProcess(IntPtr thisobj, UInt32 licenseId);
		public Int32 GetLicenseTimeNextProcess(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeNextProcess>(this.Functions.GetLicenseTimeNextProcess); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinuteLimit(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinuteLimit(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinuteLimit>(this.Functions.GetLicenseMinuteLimit); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinutesUsed(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinutesUsed(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinutesUsed>(this.Functions.GetLicenseMinutesUsed); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetLicensePaymentMethod(IntPtr thisobj, UInt32 licenseId);
		public EPaymentMethod GetLicensePaymentMethod(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePaymentMethod>(this.Functions.GetLicensePaymentMethod); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELicenseFlags NativeGetLicenseFlags(IntPtr thisobj, UInt32 licenseId);
		public ELicenseFlags GetLicenseFlags(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseFlags>(this.Functions.GetLicenseFlags); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLicensePurchaseCountryCode(IntPtr thisobj, UInt32 licenseId);
		public string GetLicensePurchaseCountryCode(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePurchaseCountryCode>(this.Functions.GetLicensePurchaseCountryCode); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetOfflineMode(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool offlineMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetOfflineMode([MarshalAs(UnmanagedType.I1)] bool offlineMode) { var call = this.GetFunction<NativeSetOfflineMode>(this.Functions.SetOfflineMode); return call(this.ObjectAddress, offlineMode); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientMatchmakingVTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListStringFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListNearValueFilter;
		public IntPtr AddRequestLobbyListFilterSlotsAvailable;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyDataCount;
		public IntPtr GetLobbyDataByIndex;
		public IntPtr DeleteLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr SetLobbyVoiceEnabled;
		public IntPtr RequestFriendsLobbies;
		public IntPtr SetLobbyType;
		public IntPtr SetLobbyJoinable;
		public IntPtr GetLobbyOwner;
		public IntPtr SetLobbyOwner;
	}
	
	public class IClientMatchmaking : NativeWrapper<IClientMatchmakingVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGame(IntPtr thisobj, Int32 arg1, ref UInt32 arg2, ref UInt32 arg3, ref UInt16 arg4, ref UInt16 arg5, ref UInt32 arg6, ref UInt32 arg7);
		public Int32 GetFavoriteGame(Int32 arg1, ref UInt32 arg2, ref UInt32 arg3, ref UInt16 arg4, ref UInt16 arg5, ref UInt32 arg6, ref UInt32 arg7) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, arg1, ref arg2, ref arg3, ref arg4, ref arg5, ref arg6, ref arg7); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 arg1, UInt32 arg2, UInt16 arg3, UInt16 arg4, UInt32 arg5, UInt32 arg6);
		public Int32 AddFavoriteGame(UInt32 arg1, UInt32 arg2, UInt16 arg3, UInt16 arg4, UInt32 arg5, UInt32 arg6) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, arg1, arg2, arg3, arg4, arg5, arg6); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 arg1, UInt32 arg2, UInt16 arg3, UInt16 arg4, UInt32 arg5);
		public Int32 RemoveFavoriteGame(UInt32 arg1, UInt32 arg2, UInt16 arg3, UInt16 arg4, UInt32 arg5) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, arg1, arg2, arg3, arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestLobbyList(IntPtr thisobj);
		public Int32 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRequestLobbyListStringFilter(IntPtr thisobj, string arg1, string arg2, ELobbyComparison arg3);
		public Int32 AddRequestLobbyListStringFilter(string arg1, string arg2, ELobbyComparison arg3) { var call = this.GetFunction<NativeAddRequestLobbyListStringFilter>(this.Functions.AddRequestLobbyListStringFilter); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string arg1, Int32 arg2, ELobbyComparison arg3);
		public Int32 AddRequestLobbyListNumericalFilter(string arg1, Int32 arg2, ELobbyComparison arg3) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRequestLobbyListNearValueFilter(IntPtr thisobj, string arg1, Int32 arg2);
		public Int32 AddRequestLobbyListNearValueFilter(string arg1, Int32 arg2) { var call = this.GetFunction<NativeAddRequestLobbyListNearValueFilter>(this.Functions.AddRequestLobbyListNearValueFilter); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRequestLobbyListFilterSlotsAvailable(IntPtr thisobj, Int32 arg1);
		public Int32 AddRequestLobbyListFilterSlotsAvailable(Int32 arg1) { var call = this.GetFunction<NativeAddRequestLobbyListFilterSlotsAvailable>(this.Functions.AddRequestLobbyListFilterSlotsAvailable); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyByIndex(IntPtr thisobj, Int32 arg1);
		public Int32 GetLobbyByIndex(Int32 arg1) { var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLobby(IntPtr thisobj, ELobbyType arg1, Int32 arg2);
		public Int32 CreateLobby(ELobbyType arg1, Int32 arg2) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeJoinLobby(IntPtr thisobj, UInt64 arg1);
		public Int32 JoinLobby(UInt64 arg1) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLeaveLobby(IntPtr thisobj, UInt64 arg1);
		public Int32 LeaveLobby(UInt64 arg1) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInviteUserToLobby(IntPtr thisobj, UInt64 arg1, UInt64 arg2);
		public Int32 InviteUserToLobby(UInt64 arg1, UInt64 arg2) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 arg1);
		public Int32 GetNumLobbyMembers(UInt64 arg1) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberByIndex(IntPtr thisobj, UInt64 arg1, Int32 arg2);
		public Int32 GetLobbyMemberByIndex(UInt64 arg1, Int32 arg2) { var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyData(IntPtr thisobj, UInt64 arg1, string arg2);
		public Int32 GetLobbyData(UInt64 arg1, string arg2) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyData(IntPtr thisobj, UInt64 arg1, string arg2, string arg3);
		public Int32 SetLobbyData(UInt64 arg1, string arg2, string arg3) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyDataCount(IntPtr thisobj, UInt64 arg1);
		public Int32 GetLobbyDataCount(UInt64 arg1) { var call = this.GetFunction<NativeGetLobbyDataCount>(this.Functions.GetLobbyDataCount); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyDataByIndex(IntPtr thisobj, UInt64 arg1, Int32 arg2, string arg3, Int32 arg4, string arg5, Int32 arg6);
		public Int32 GetLobbyDataByIndex(UInt64 arg1, Int32 arg2, string arg3, Int32 arg4, string arg5, Int32 arg6) { var call = this.GetFunction<NativeGetLobbyDataByIndex>(this.Functions.GetLobbyDataByIndex); return call(this.ObjectAddress, arg1, arg2, arg3, arg4, arg5, arg6); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDeleteLobbyData(IntPtr thisobj, UInt64 arg1, string arg2);
		public Int32 DeleteLobbyData(UInt64 arg1, string arg2) { var call = this.GetFunction<NativeDeleteLobbyData>(this.Functions.DeleteLobbyData); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberData(IntPtr thisobj, UInt64 arg1, UInt64 arg2, string arg3);
		public Int32 GetLobbyMemberData(UInt64 arg1, UInt64 arg2, string arg3) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyMemberData(IntPtr thisobj, UInt64 arg1, string arg2, string arg3);
		public Int32 SetLobbyMemberData(UInt64 arg1, string arg2, string arg3) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 arg1, IntPtr arg2, Int32 arg3);
		public Int32 SendLobbyChatMsg(UInt64 arg1, IntPtr arg2, Int32 arg3) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 arg1, Int32 arg2, ref UInt64 arg3, IntPtr arg4, Int32 arg5, ref EChatEntryType arg6);
		public Int32 GetLobbyChatEntry(UInt64 arg1, Int32 arg2, ref UInt64 arg3, IntPtr arg4, Int32 arg5, ref EChatEntryType arg6) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, arg1, arg2, ref arg3, arg4, arg5, ref arg6); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestLobbyData(IntPtr thisobj, UInt64 arg1);
		public Int32 RequestLobbyData(UInt64 arg1) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyGameServer(IntPtr thisobj, UInt64 arg1, UInt32 arg2, UInt16 arg3, UInt64 arg4);
		public Int32 SetLobbyGameServer(UInt64 arg1, UInt32 arg2, UInt16 arg3, UInt64 arg4) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); return call(this.ObjectAddress, arg1, arg2, arg3, arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyGameServer(IntPtr thisobj, UInt64 arg1, ref UInt32 arg2, ref UInt16 arg3, ref UInt64 arg4);
		public Int32 GetLobbyGameServer(UInt64 arg1, ref UInt32 arg2, ref UInt16 arg3, ref UInt64 arg4) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, arg1, ref arg2, ref arg3, ref arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 arg1, Int32 arg2);
		public Int32 SetLobbyMemberLimit(UInt64 arg1, Int32 arg2) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 arg1);
		public Int32 GetLobbyMemberLimit(UInt64 arg1) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyVoiceEnabled(IntPtr thisobj, UInt64 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2);
		public Int32 SetLobbyVoiceEnabled(UInt64 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeSetLobbyVoiceEnabled>(this.Functions.SetLobbyVoiceEnabled); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestFriendsLobbies(IntPtr thisobj);
		public Int32 RequestFriendsLobbies() { var call = this.GetFunction<NativeRequestFriendsLobbies>(this.Functions.RequestFriendsLobbies); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyType(IntPtr thisobj, UInt64 arg1, ELobbyType arg2);
		public Int32 SetLobbyType(UInt64 arg1, ELobbyType arg2) { var call = this.GetFunction<NativeSetLobbyType>(this.Functions.SetLobbyType); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyJoinable(IntPtr thisobj, UInt64 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2);
		public Int32 SetLobbyJoinable(UInt64 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeSetLobbyJoinable>(this.Functions.SetLobbyJoinable); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyOwner(IntPtr thisobj, UInt64 arg1);
		public Int32 GetLobbyOwner(UInt64 arg1) { var call = this.GetFunction<NativeGetLobbyOwner>(this.Functions.GetLobbyOwner); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyOwner(IntPtr thisobj, UInt64 arg1, UInt64 arg2);
		public Int32 SetLobbyOwner(UInt64 arg1, UInt64 arg2) { var call = this.GetFunction<NativeSetLobbyOwner>(this.Functions.SetLobbyOwner); return call(this.ObjectAddress, arg1, arg2); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamApps003VTable
	{
		public IntPtr IsSubscribed;
		public IntPtr IsLowViolence;
		public IntPtr IsCybercafe;
		public IntPtr IsVACBanned;
		public IntPtr GetCurrentGameLanguage;
		public IntPtr GetAvailableGameLanguages;
		public IntPtr IsSubscribedApp;
		public IntPtr IsDlcInstalled;
	}
	
	public class ISteamApps003 : NativeWrapper<ISteamApps003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribed(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribed() { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsLowViolence(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsLowViolence() { var call = this.GetFunction<NativeIsLowViolence>(this.Functions.IsLowViolence); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCybercafe(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCybercafe() { var call = this.GetFunction<NativeIsCybercafe>(this.Functions.IsCybercafe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned() { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetCurrentGameLanguage(IntPtr thisobj);
		public string GetCurrentGameLanguage() { var call = this.GetFunction<NativeGetCurrentGameLanguage>(this.Functions.GetCurrentGameLanguage); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAvailableGameLanguages(IntPtr thisobj);
		public string GetAvailableGameLanguages() { var call = this.GetFunction<NativeGetAvailableGameLanguages>(this.Functions.GetAvailableGameLanguages); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribedApp(IntPtr thisobj, UInt32 appID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribedApp(UInt32 appID) { var call = this.GetFunction<NativeIsSubscribedApp>(this.Functions.IsSubscribedApp); return call(this.ObjectAddress, appID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDlcInstalled(IntPtr thisobj, UInt32 appID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDlcInstalled(UInt32 appID) { var call = this.GetFunction<NativeIsDlcInstalled>(this.Functions.IsDlcInstalled); return call(this.ObjectAddress, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientGameStatsVTable
	{
		public IntPtr GetNewSession;
		public IntPtr EndSession;
		public IntPtr AddSessionAttributeInt;
		public IntPtr AddSessionAttributeString;
		public IntPtr AddSessionAttributeFloat;
		public IntPtr AddNewRow;
		public IntPtr CommitRow;
		public IntPtr CommitOutstandingRows;
		public IntPtr AddRowAttributeInt;
		public IntPtr AddRowAtributeString;
		public IntPtr AddRowAttributeFloat;
		public IntPtr AddSessionAttributeInt64;
		public IntPtr AddRowAttributeInt64;
	}
	
	public class IClientGameStats : NativeWrapper<IClientGameStatsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNewSession(IntPtr thisobj, SByte int8, UInt64 uint64, Int32 arg3, UInt32 arg4);
		public Int32 GetNewSession(SByte int8, UInt64 uint64, Int32 arg3, UInt32 arg4) { var call = this.GetFunction<NativeGetNewSession>(this.Functions.GetNewSession); return call(this.ObjectAddress, int8, uint64, arg3, arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEndSession(IntPtr thisobj, UInt64 uint64, UInt32 arg2, Int32 arg3);
		public Int32 EndSession(UInt64 uint64, UInt32 arg2, Int32 arg3) { var call = this.GetFunction<NativeEndSession>(this.Functions.EndSession); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddSessionAttributeInt(IntPtr thisobj, UInt64 uint64, string arg2, Int32 arg3);
		public Int32 AddSessionAttributeInt(UInt64 uint64, string arg2, Int32 arg3) { var call = this.GetFunction<NativeAddSessionAttributeInt>(this.Functions.AddSessionAttributeInt); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddSessionAttributeString(IntPtr thisobj, UInt64 uint64, string arg2, string arg3);
		public Int32 AddSessionAttributeString(UInt64 uint64, string arg2, string arg3) { var call = this.GetFunction<NativeAddSessionAttributeString>(this.Functions.AddSessionAttributeString); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddSessionAttributeFloat(IntPtr thisobj, UInt64 uint64, string arg2, float arg3);
		public Int32 AddSessionAttributeFloat(UInt64 uint64, string arg2, float arg3) { var call = this.GetFunction<NativeAddSessionAttributeFloat>(this.Functions.AddSessionAttributeFloat); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddNewRow(IntPtr thisobj, ref UInt64 arg1, UInt64 uint64, string arg3);
		public Int32 AddNewRow(ref UInt64 arg1, UInt64 uint64, string arg3) { var call = this.GetFunction<NativeAddNewRow>(this.Functions.AddNewRow); return call(this.ObjectAddress, ref arg1, uint64, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCommitRow(IntPtr thisobj, UInt64 uint64);
		public Int32 CommitRow(UInt64 uint64) { var call = this.GetFunction<NativeCommitRow>(this.Functions.CommitRow); return call(this.ObjectAddress, uint64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCommitOutstandingRows(IntPtr thisobj, UInt64 uint64);
		public Int32 CommitOutstandingRows(UInt64 uint64) { var call = this.GetFunction<NativeCommitOutstandingRows>(this.Functions.CommitOutstandingRows); return call(this.ObjectAddress, uint64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRowAttributeInt(IntPtr thisobj, UInt64 uint64, string arg2, Int32 arg3);
		public Int32 AddRowAttributeInt(UInt64 uint64, string arg2, Int32 arg3) { var call = this.GetFunction<NativeAddRowAttributeInt>(this.Functions.AddRowAttributeInt); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRowAtributeString(IntPtr thisobj, UInt64 uint64, string arg2, string arg3);
		public Int32 AddRowAtributeString(UInt64 uint64, string arg2, string arg3) { var call = this.GetFunction<NativeAddRowAtributeString>(this.Functions.AddRowAtributeString); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRowAttributeFloat(IntPtr thisobj, UInt64 uint64, string arg2, float arg3);
		public Int32 AddRowAttributeFloat(UInt64 uint64, string arg2, float arg3) { var call = this.GetFunction<NativeAddRowAttributeFloat>(this.Functions.AddRowAttributeFloat); return call(this.ObjectAddress, uint64, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddSessionAttributeInt64(IntPtr thisobj, UInt64 uint64, string arg2, Int64 int64);
		public Int32 AddSessionAttributeInt64(UInt64 uint64, string arg2, Int64 int64) { var call = this.GetFunction<NativeAddSessionAttributeInt64>(this.Functions.AddSessionAttributeInt64); return call(this.ObjectAddress, uint64, arg2, int64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddRowAttributeInt64(IntPtr thisobj, UInt64 uint64, string arg2, Int64 int64);
		public Int32 AddRowAttributeInt64(UInt64 uint64, string arg2, Int64 int64) { var call = this.GetFunction<NativeAddRowAttributeInt64>(this.Functions.AddRowAttributeInt64); return call(this.ObjectAddress, uint64, arg2, int64); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamBilling002VTable
	{
		public IntPtr InitCreditCardPurchase;
		public IntPtr InitPayPalPurchase;
		public IntPtr GetActivationCodeInfo;
		public IntPtr PurchaseWithActivationCode;
		public IntPtr GetFinalPrice;
		public IntPtr CancelPurchase;
		public IntPtr CompletePurchase;
		public IntPtr UpdateCardInfo;
		public IntPtr DeleteCard;
		public IntPtr GetCardList;
		public IntPtr Obsolete_GetLicenses;
		public IntPtr CancelLicense;
		public IntPtr GetPurchaseReceipts;
		public IntPtr AcknowledgePurchaseReceipt;
		public IntPtr SetBillingAddress;
		public IntPtr GetBillingAddress;
		public IntPtr SetShippingAddress;
		public IntPtr GetShippingAddress;
		public IntPtr SetCardInfo;
		public IntPtr GetCardInfo;
		public IntPtr GetLicensePackageID;
		public IntPtr GetLicenseTimeCreated;
		public IntPtr GetLicenseTimeNextProcess;
		public IntPtr GetLicenseMinuteLimit;
		public IntPtr GetLicenseMinutesUsed;
		public IntPtr GetLicensePaymentMethod;
		public IntPtr GetLicenseFlags;
		public IntPtr GetLicensePurchaseCountryCode;
		public IntPtr GetReceiptPackageID;
		public IntPtr GetReceiptStatus;
		public IntPtr GetReceiptResultDetail;
		public IntPtr GetReceiptTransTime;
		public IntPtr GetReceiptTransID;
		public IntPtr GetReceiptAcknowledged;
		public IntPtr GetReceiptPaymentMethod;
		public IntPtr GetReceiptBaseCost;
		public IntPtr GetReceiptTotalDiscount;
		public IntPtr GetReceiptTax;
		public IntPtr GetReceiptShipping;
		public IntPtr GetReceiptCountryCode;
		public IntPtr GetNumLicenses;
		public IntPtr GetNumReceipts;
		public IntPtr PurchaseWithMachineID;
		public IntPtr InitClickAndBuyPurchase;
		public IntPtr GetPreviousClickAndBuyAccount;
	}
	
	public class ISteamBilling002 : NativeWrapper<ISteamBilling002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitCreditCardPurchase(IntPtr thisobj, Int32 arg1, UInt32 arg2, [MarshalAs(UnmanagedType.I1)] bool arg3);
		public Int32 InitCreditCardPurchase(Int32 arg1, UInt32 arg2, [MarshalAs(UnmanagedType.I1)] bool arg3) { var call = this.GetFunction<NativeInitCreditCardPurchase>(this.Functions.InitCreditCardPurchase); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitPayPalPurchase(IntPtr thisobj, Int32 arg1);
		public Int32 InitPayPalPurchase(Int32 arg1) { var call = this.GetFunction<NativeInitPayPalPurchase>(this.Functions.InitPayPalPurchase); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetActivationCodeInfo(IntPtr thisobj, string arg1);
		public Int32 GetActivationCodeInfo(string arg1) { var call = this.GetFunction<NativeGetActivationCodeInfo>(this.Functions.GetActivationCodeInfo); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePurchaseWithActivationCode(IntPtr thisobj, string arg1);
		public Int32 PurchaseWithActivationCode(string arg1) { var call = this.GetFunction<NativePurchaseWithActivationCode>(this.Functions.PurchaseWithActivationCode); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFinalPrice(IntPtr thisobj);
		public Int32 GetFinalPrice() { var call = this.GetFunction<NativeGetFinalPrice>(this.Functions.GetFinalPrice); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCancelPurchase(IntPtr thisobj);
		public Int32 CancelPurchase() { var call = this.GetFunction<NativeCancelPurchase>(this.Functions.CancelPurchase); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCompletePurchase(IntPtr thisobj);
		public Int32 CompletePurchase() { var call = this.GetFunction<NativeCompletePurchase>(this.Functions.CompletePurchase); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUpdateCardInfo(IntPtr thisobj, UInt32 arg1);
		public Int32 UpdateCardInfo(UInt32 arg1) { var call = this.GetFunction<NativeUpdateCardInfo>(this.Functions.UpdateCardInfo); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDeleteCard(IntPtr thisobj, UInt32 arg1);
		public Int32 DeleteCard(UInt32 arg1) { var call = this.GetFunction<NativeDeleteCard>(this.Functions.DeleteCard); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCardList(IntPtr thisobj);
		public Int32 GetCardList() { var call = this.GetFunction<NativeGetCardList>(this.Functions.GetCardList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeObsolete_GetLicenses(IntPtr thisobj);
		public Int32 Obsolete_GetLicenses() { var call = this.GetFunction<NativeObsolete_GetLicenses>(this.Functions.Obsolete_GetLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCancelLicense(IntPtr thisobj, Int32 arg1, Int32 arg2);
		public Int32 CancelLicense(Int32 arg1, Int32 arg2) { var call = this.GetFunction<NativeCancelLicense>(this.Functions.CancelLicense); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetPurchaseReceipts(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool arg1);
		public Int32 GetPurchaseReceipts([MarshalAs(UnmanagedType.I1)] bool arg1) { var call = this.GetFunction<NativeGetPurchaseReceipts>(this.Functions.GetPurchaseReceipts); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAcknowledgePurchaseReceipt(IntPtr thisobj, UInt32 arg1);
		public Int32 AcknowledgePurchaseReceipt(UInt32 arg1) { var call = this.GetFunction<NativeAcknowledgePurchaseReceipt>(this.Functions.AcknowledgePurchaseReceipt); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetBillingAddress(IntPtr thisobj, UInt32 arg1, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetBillingAddress(UInt32 arg1, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeSetBillingAddress>(this.Functions.SetBillingAddress); return call(this.ObjectAddress, arg1, pchName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetBillingAddress(IntPtr thisobj, UInt32 arg1, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetBillingAddress(UInt32 arg1, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetBillingAddress>(this.Functions.GetBillingAddress); return call(this.ObjectAddress, arg1, pchName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetShippingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone, string arg9);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetShippingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone, string arg9) { var call = this.GetFunction<NativeSetShippingAddress>(this.Functions.SetShippingAddress); return call(this.ObjectAddress, pchName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone, arg9); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetShippingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetShippingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetShippingAddress>(this.Functions.GetShippingAddress); return call(this.ObjectAddress, pchName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetCardInfo(IntPtr thisobj, UInt32 arg1, Int32 eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2, string arg8);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetCardInfo(UInt32 arg1, Int32 eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2, string arg8) { var call = this.GetFunction<NativeSetCardInfo>(this.Functions.SetCardInfo); return call(this.ObjectAddress, arg1, eCreditCardType, pchCardNumber, pchCardHolderName, pchCardExpYear, pchCardExpMonth, pchCardCVV2, arg8); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCardInfo(IntPtr thisobj, UInt32 arg1, ref Int32 eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2, string arg8);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCardInfo(UInt32 arg1, ref Int32 eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2, string arg8) { var call = this.GetFunction<NativeGetCardInfo>(this.Functions.GetCardInfo); return call(this.ObjectAddress, arg1, ref eCreditCardType, pchCardNumber, pchCardHolderName, pchCardExpYear, pchCardExpMonth, pchCardCVV2, arg8); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicensePackageID(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicensePackageID(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePackageID>(this.Functions.GetLicensePackageID); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseTimeCreated(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseTimeCreated(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeCreated>(this.Functions.GetLicenseTimeCreated); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseTimeNextProcess(IntPtr thisobj, UInt32 licenseId);
		public Int32 GetLicenseTimeNextProcess(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeNextProcess>(this.Functions.GetLicenseTimeNextProcess); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinuteLimit(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinuteLimit(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinuteLimit>(this.Functions.GetLicenseMinuteLimit); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinutesUsed(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinutesUsed(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinutesUsed>(this.Functions.GetLicenseMinutesUsed); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetLicensePaymentMethod(IntPtr thisobj, UInt32 licenseId);
		public EPaymentMethod GetLicensePaymentMethod(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePaymentMethod>(this.Functions.GetLicensePaymentMethod); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELicenseFlags NativeGetLicenseFlags(IntPtr thisobj, UInt32 licenseId);
		public ELicenseFlags GetLicenseFlags(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseFlags>(this.Functions.GetLicenseFlags); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLicensePurchaseCountryCode(IntPtr thisobj, UInt32 licenseId);
		public string GetLicensePurchaseCountryCode(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePurchaseCountryCode>(this.Functions.GetLicensePurchaseCountryCode); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetReceiptPackageID(IntPtr thisobj, UInt32 arg1);
		public Int32 GetReceiptPackageID(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptPackageID>(this.Functions.GetReceiptPackageID); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetReceiptStatus(IntPtr thisobj, UInt32 arg1);
		public Int32 GetReceiptStatus(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptStatus>(this.Functions.GetReceiptStatus); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetReceiptResultDetail(IntPtr thisobj, UInt32 arg1);
		public Int32 GetReceiptResultDetail(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptResultDetail>(this.Functions.GetReceiptResultDetail); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTransTime(IntPtr thisobj, UInt32 arg1);
		public UInt32 GetReceiptTransTime(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptTransTime>(this.Functions.GetReceiptTransTime); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetReceiptTransID(IntPtr thisobj, UInt32 arg1);
		public Int32 GetReceiptTransID(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptTransID>(this.Functions.GetReceiptTransID); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetReceiptAcknowledged(IntPtr thisobj, UInt32 arg1);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetReceiptAcknowledged(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptAcknowledged>(this.Functions.GetReceiptAcknowledged); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetReceiptPaymentMethod(IntPtr thisobj, UInt32 arg1);
		public EPaymentMethod GetReceiptPaymentMethod(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptPaymentMethod>(this.Functions.GetReceiptPaymentMethod); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptBaseCost(IntPtr thisobj, UInt32 arg1);
		public UInt32 GetReceiptBaseCost(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptBaseCost>(this.Functions.GetReceiptBaseCost); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTotalDiscount(IntPtr thisobj, UInt32 arg1);
		public UInt32 GetReceiptTotalDiscount(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptTotalDiscount>(this.Functions.GetReceiptTotalDiscount); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTax(IntPtr thisobj, UInt32 arg1);
		public UInt32 GetReceiptTax(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptTax>(this.Functions.GetReceiptTax); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptShipping(IntPtr thisobj, UInt32 arg1);
		public UInt32 GetReceiptShipping(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptShipping>(this.Functions.GetReceiptShipping); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetReceiptCountryCode(IntPtr thisobj, UInt32 arg1);
		public string GetReceiptCountryCode(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptCountryCode>(this.Functions.GetReceiptCountryCode); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumLicenses(IntPtr thisobj);
		public UInt32 GetNumLicenses() { var call = this.GetFunction<NativeGetNumLicenses>(this.Functions.GetNumLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumReceipts(IntPtr thisobj);
		public UInt32 GetNumReceipts() { var call = this.GetFunction<NativeGetNumReceipts>(this.Functions.GetNumReceipts); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePurchaseWithMachineID(IntPtr thisobj, Int32 arg1, string arg2);
		public Int32 PurchaseWithMachineID(Int32 arg1, string arg2) { var call = this.GetFunction<NativePurchaseWithMachineID>(this.Functions.PurchaseWithMachineID); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitClickAndBuyPurchase(IntPtr thisobj, Int32 arg1, Int64 int64, string arg3, string arg4);
		public Int32 InitClickAndBuyPurchase(Int32 arg1, Int64 int64, string arg3, string arg4) { var call = this.GetFunction<NativeInitClickAndBuyPurchase>(this.Functions.InitClickAndBuyPurchase); return call(this.ObjectAddress, arg1, int64, arg3, arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetPreviousClickAndBuyAccount(IntPtr thisobj, ref Int64 arg1, string arg2, string arg3);
		public Int32 GetPreviousClickAndBuyAccount(ref Int64 arg1, string arg2, string arg3) { var call = this.GetFunction<NativeGetPreviousClickAndBuyAccount>(this.Functions.GetPreviousClickAndBuyAccount); return call(this.ObjectAddress, ref arg1, arg2, arg3); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserItems002VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr UpdateInventoryPos;
		public IntPtr DropItem;
		public IntPtr GetItemBlob;
		public IntPtr SetItemBlob;
	}
	
	public class ISteamUserItems002 : NativeWrapper<ISteamUserItems002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj);
		public UInt64 LoadItems() { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj);
		public UInt64 GetItemCount() { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, uniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetItemAttribute(IntPtr thisobj, UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d);
		public void GetItemAttribute(UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); call(this.ObjectAddress, uniqueID, b, ref c, ref d); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateInventoryPos(IntPtr thisobj, UInt64 uniqueID, UInt32 b);
		public void UpdateInventoryPos(UInt64 uniqueID, UInt32 b) { var call = this.GetFunction<NativeUpdateInventoryPos>(this.Functions.UpdateInventoryPos); call(this.ObjectAddress, uniqueID, b); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeDropItem(IntPtr thisobj, UInt64 itemId);
		public void DropItem(UInt64 itemId) { var call = this.GetFunction<NativeDropItem>(this.Functions.DropItem); call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemBlob(IntPtr thisobj, UInt64 itemId);
		public UInt64 GetItemBlob(UInt64 itemId) { var call = this.GetFunction<NativeGetItemBlob>(this.Functions.GetItemBlob); return call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSetItemBlob(IntPtr thisobj, UInt64 itemID, IntPtr blob, UInt32 size);
		public UInt64 SetItemBlob(UInt64 itemID, IntPtr blob, UInt32 size) { var call = this.GetFunction<NativeSetItemBlob>(this.Functions.SetItemBlob); return call(this.ObjectAddress, itemID, blob, size); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserItems004VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr UpdateInventoryPos;
		public IntPtr DeleteItem;
		public IntPtr GetItemBlob;
		public IntPtr SetItemBlob;
		public IntPtr DropItem;
	}
	
	public class ISteamUserItems004 : NativeWrapper<ISteamUserItems004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj);
		public UInt64 LoadItems() { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj);
		public UInt64 GetItemCount() { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, uniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetItemAttribute(IntPtr thisobj, UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d);
		public void GetItemAttribute(UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); call(this.ObjectAddress, uniqueID, b, ref c, ref d); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateInventoryPos(IntPtr thisobj, UInt64 uniqueID, UInt32 b);
		public void UpdateInventoryPos(UInt64 uniqueID, UInt32 b) { var call = this.GetFunction<NativeUpdateInventoryPos>(this.Functions.UpdateInventoryPos); call(this.ObjectAddress, uniqueID, b); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDeleteItem(IntPtr thisobj, UInt64 itemId);
		public Int32 DeleteItem(UInt64 itemId) { var call = this.GetFunction<NativeDeleteItem>(this.Functions.DeleteItem); return call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemBlob(IntPtr thisobj, UInt64 itemId);
		public UInt64 GetItemBlob(UInt64 itemId) { var call = this.GetFunction<NativeGetItemBlob>(this.Functions.GetItemBlob); return call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSetItemBlob(IntPtr thisobj, UInt64 itemID, IntPtr blob, UInt32 arg3);
		public UInt64 SetItemBlob(UInt64 itemID, IntPtr blob, UInt32 arg3) { var call = this.GetFunction<NativeSetItemBlob>(this.Functions.SetItemBlob); return call(this.ObjectAddress, itemID, blob, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeDropItem(IntPtr thisobj, UInt64 itemId);
		public void DropItem(UInt64 itemId) { var call = this.GetFunction<NativeDropItem>(this.Functions.DropItem); call(this.ObjectAddress, itemId); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientBillingVTable
	{
		public IntPtr InitCreditCardPurchase;
		public IntPtr InitPayPalPurchase;
		public IntPtr GetActivationCodeInfo;
		public IntPtr PurchaseWithActivationCode;
		public IntPtr GetFinalPrice;
		public IntPtr CancelPurchase;
		public IntPtr CompletePurchase;
		public IntPtr UpdateCardInfo;
		public IntPtr DeleteCard;
		public IntPtr GetCardList;
		public IntPtr Obsolete_GetLicenses;
		public IntPtr CancelLicense;
		public IntPtr GetPurchaseReceipts;
		public IntPtr AcknowledgePurchaseReceipt;
		public IntPtr GetClickAndBuyVIPStatus;
		public IntPtr SetBillingAddress;
		public IntPtr GetBillingAddress;
		public IntPtr SetShippingAddress;
		public IntPtr GetShippingAddress;
		public IntPtr SetCardInfo;
		public IntPtr GetCardInfo;
		public IntPtr SetGiftInfo;
		public IntPtr GetLicensePackageID;
		public IntPtr GetLicenseTimeCreated;
		public IntPtr GetLicenseTimeNextProcess;
		public IntPtr GetLicenseMinuteLimit;
		public IntPtr GetLicenseMinutesUsed;
		public IntPtr GetLicensePaymentMethod;
		public IntPtr GetLicenseFlags;
		public IntPtr GetLicensePurchaseCountryCode;
		public IntPtr GetReceiptPackageID;
		public IntPtr GetReceiptStatus;
		public IntPtr GetReceiptResultDetail;
		public IntPtr GetReceiptTransTime;
		public IntPtr GetReceiptTransID;
		public IntPtr GetReceiptAcknowledged;
		public IntPtr GetReceiptPaymentMethod;
		public IntPtr GetReceiptBaseCost;
		public IntPtr GetReceiptTotalDiscount;
		public IntPtr GetReceiptTax;
		public IntPtr GetReceiptShipping;
		public IntPtr GetReceiptCurrencyCode;
		public IntPtr GetReceiptCountryCode;
		public IntPtr Unknown;
		public IntPtr GetNumLicenses;
		public IntPtr GetNumReceipts;
		public IntPtr PurchaseWithMachineID;
		public IntPtr InitClickAndBuyPurchase;
		public IntPtr GetPreviousClickAndBuyAccount;
		public IntPtr GetReceiptCardInfo;
		public IntPtr GetReceiptBillingAddress;
		public IntPtr GetReceiptLineItemCount;
		public IntPtr GetReceiptLineItemInfo;
		public IntPtr EnableTestLicense;
		public IntPtr DisableTestLicense;
	}
	
	public class IClientBilling : NativeWrapper<IClientBillingVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInitCreditCardPurchase(IntPtr thisobj, UInt32 nPackageID, UInt32 nCardIndex, [MarshalAs(UnmanagedType.I1)] bool bStoreCardInfo, UInt32 nGiftID);
		[return: MarshalAs(UnmanagedType.I1)] public bool InitCreditCardPurchase(UInt32 nPackageID, UInt32 nCardIndex, [MarshalAs(UnmanagedType.I1)] bool bStoreCardInfo, UInt32 nGiftID) { var call = this.GetFunction<NativeInitCreditCardPurchase>(this.Functions.InitCreditCardPurchase); return call(this.ObjectAddress, nPackageID, nCardIndex, bStoreCardInfo, nGiftID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInitPayPalPurchase(IntPtr thisobj, UInt32 nPackageID, UInt32 nGiftID);
		[return: MarshalAs(UnmanagedType.I1)] public bool InitPayPalPurchase(UInt32 nPackageID, UInt32 nGiftID) { var call = this.GetFunction<NativeInitPayPalPurchase>(this.Functions.InitPayPalPurchase); return call(this.ObjectAddress, nPackageID, nGiftID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetActivationCodeInfo(IntPtr thisobj, string pchActivationCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetActivationCodeInfo(string pchActivationCode) { var call = this.GetFunction<NativeGetActivationCodeInfo>(this.Functions.GetActivationCodeInfo); return call(this.ObjectAddress, pchActivationCode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativePurchaseWithActivationCode(IntPtr thisobj, string pchActivationCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool PurchaseWithActivationCode(string pchActivationCode) { var call = this.GetFunction<NativePurchaseWithActivationCode>(this.Functions.PurchaseWithActivationCode); return call(this.ObjectAddress, pchActivationCode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFinalPrice(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFinalPrice() { var call = this.GetFunction<NativeGetFinalPrice>(this.Functions.GetFinalPrice); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCancelPurchase(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool CancelPurchase() { var call = this.GetFunction<NativeCancelPurchase>(this.Functions.CancelPurchase); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCompletePurchase(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool CompletePurchase() { var call = this.GetFunction<NativeCompletePurchase>(this.Functions.CompletePurchase); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateCardInfo(IntPtr thisobj, UInt32 nCardIndex);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateCardInfo(UInt32 nCardIndex) { var call = this.GetFunction<NativeUpdateCardInfo>(this.Functions.UpdateCardInfo); return call(this.ObjectAddress, nCardIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDeleteCard(IntPtr thisobj, UInt32 nCardIndex);
		[return: MarshalAs(UnmanagedType.I1)] public bool DeleteCard(UInt32 nCardIndex) { var call = this.GetFunction<NativeDeleteCard>(this.Functions.DeleteCard); return call(this.ObjectAddress, nCardIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCardList(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCardList() { var call = this.GetFunction<NativeGetCardList>(this.Functions.GetCardList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeObsolete_GetLicenses(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Obsolete_GetLicenses() { var call = this.GetFunction<NativeObsolete_GetLicenses>(this.Functions.Obsolete_GetLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCancelLicense(IntPtr thisobj, UInt32 packageID, Int32 nCancelReason);
		[return: MarshalAs(UnmanagedType.I1)] public bool CancelLicense(UInt32 packageID, Int32 nCancelReason) { var call = this.GetFunction<NativeCancelLicense>(this.Functions.CancelLicense); return call(this.ObjectAddress, packageID, nCancelReason); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetPurchaseReceipts(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bUnacknowledgedOnly);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetPurchaseReceipts([MarshalAs(UnmanagedType.I1)] bool bUnacknowledgedOnly) { var call = this.GetFunction<NativeGetPurchaseReceipts>(this.Functions.GetPurchaseReceipts); return call(this.ObjectAddress, bUnacknowledgedOnly); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAcknowledgePurchaseReceipt(IntPtr thisobj, UInt32 nReceiptIndex);
		[return: MarshalAs(UnmanagedType.I1)] public bool AcknowledgePurchaseReceipt(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeAcknowledgePurchaseReceipt>(this.Functions.AcknowledgePurchaseReceipt); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetClickAndBuyVIPStatus(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetClickAndBuyVIPStatus() { var call = this.GetFunction<NativeGetClickAndBuyVIPStatus>(this.Functions.GetClickAndBuyVIPStatus); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetBillingAddress(IntPtr thisobj, UInt32 nCardIndex, string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetBillingAddress(UInt32 nCardIndex, string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeSetBillingAddress>(this.Functions.SetBillingAddress); return call(this.ObjectAddress, nCardIndex, pchFirstName, pchLastName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetBillingAddress(IntPtr thisobj, UInt32 nCardIndex, string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetBillingAddress(UInt32 nCardIndex, string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetBillingAddress>(this.Functions.GetBillingAddress); return call(this.ObjectAddress, nCardIndex, pchFirstName, pchLastName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetShippingAddress(IntPtr thisobj, string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetShippingAddress(string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeSetShippingAddress>(this.Functions.SetShippingAddress); return call(this.ObjectAddress, pchFirstName, pchLastName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetShippingAddress(IntPtr thisobj, string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetShippingAddress(string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetShippingAddress>(this.Functions.GetShippingAddress); return call(this.ObjectAddress, pchFirstName, pchLastName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetCardInfo(IntPtr thisobj, UInt32 nCardIndex, Int32 eCreditCardType, string pchCardNumber, string pchCardHolderFirstName, string pchCardHolderLastName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetCardInfo(UInt32 nCardIndex, Int32 eCreditCardType, string pchCardNumber, string pchCardHolderFirstName, string pchCardHolderLastName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2) { var call = this.GetFunction<NativeSetCardInfo>(this.Functions.SetCardInfo); return call(this.ObjectAddress, nCardIndex, eCreditCardType, pchCardNumber, pchCardHolderFirstName, pchCardHolderLastName, pchCardExpYear, pchCardExpMonth, pchCardCVV2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCardInfo(IntPtr thisobj, UInt32 nCardIndex, ref Int32 peCreditCardType, string pchCardNumber, string pchCardHolderFirstName, string pchCardHolderLastName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCardInfo(UInt32 nCardIndex, ref Int32 peCreditCardType, string pchCardNumber, string pchCardHolderFirstName, string pchCardHolderLastName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2) { var call = this.GetFunction<NativeGetCardInfo>(this.Functions.GetCardInfo); return call(this.ObjectAddress, nCardIndex, ref peCreditCardType, pchCardNumber, pchCardHolderFirstName, pchCardHolderLastName, pchCardExpYear, pchCardExpMonth, pchCardCVV2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetGiftInfo(IntPtr thisobj, string pchEmailGiftee, UInt64 steamIDGiftee, string pchGifteeName, string pchGiftMessage, string pchSentiment, string pchGiverSignature);
		public UInt32 SetGiftInfo(string pchEmailGiftee, UInt64 steamIDGiftee, string pchGifteeName, string pchGiftMessage, string pchSentiment, string pchGiverSignature) { var call = this.GetFunction<NativeSetGiftInfo>(this.Functions.SetGiftInfo); return call(this.ObjectAddress, pchEmailGiftee, steamIDGiftee, pchGifteeName, pchGiftMessage, pchSentiment, pchGiverSignature); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicensePackageID(IntPtr thisobj, UInt32 nLicenseIndex);
		public UInt32 GetLicensePackageID(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicensePackageID>(this.Functions.GetLicensePackageID); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseTimeCreated(IntPtr thisobj, UInt32 nLicenseIndex);
		public UInt32 GetLicenseTimeCreated(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseTimeCreated>(this.Functions.GetLicenseTimeCreated); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseTimeNextProcess(IntPtr thisobj, UInt32 nLicenseIndex);
		public UInt32 GetLicenseTimeNextProcess(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseTimeNextProcess>(this.Functions.GetLicenseTimeNextProcess); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseMinuteLimit(IntPtr thisobj, UInt32 nLicenseIndex);
		public Int32 GetLicenseMinuteLimit(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseMinuteLimit>(this.Functions.GetLicenseMinuteLimit); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseMinutesUsed(IntPtr thisobj, UInt32 nLicenseIndex);
		public Int32 GetLicenseMinutesUsed(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseMinutesUsed>(this.Functions.GetLicenseMinutesUsed); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetLicensePaymentMethod(IntPtr thisobj, UInt32 nLicenseIndex);
		public EPaymentMethod GetLicensePaymentMethod(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicensePaymentMethod>(this.Functions.GetLicensePaymentMethod); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELicenseFlags NativeGetLicenseFlags(IntPtr thisobj, UInt32 nLicenseIndex);
		public ELicenseFlags GetLicenseFlags(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseFlags>(this.Functions.GetLicenseFlags); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLicensePurchaseCountryCode(IntPtr thisobj, UInt32 nLicenseIndex);
		public string GetLicensePurchaseCountryCode(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicensePurchaseCountryCode>(this.Functions.GetLicensePurchaseCountryCode); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptPackageID(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptPackageID(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptPackageID>(this.Functions.GetReceiptPackageID); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPurchaseStatus NativeGetReceiptStatus(IntPtr thisobj, UInt32 nReceiptIndex);
		public EPurchaseStatus GetReceiptStatus(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptStatus>(this.Functions.GetReceiptStatus); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPurchaseResultDetail NativeGetReceiptResultDetail(IntPtr thisobj, UInt32 nReceiptIndex);
		public EPurchaseResultDetail GetReceiptResultDetail(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptResultDetail>(this.Functions.GetReceiptResultDetail); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTransTime(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptTransTime(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptTransTime>(this.Functions.GetReceiptTransTime); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetReceiptTransID(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt64 GetReceiptTransID(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptTransID>(this.Functions.GetReceiptTransID); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetReceiptAcknowledged(IntPtr thisobj, UInt32 nReceiptIndex);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetReceiptAcknowledged(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptAcknowledged>(this.Functions.GetReceiptAcknowledged); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetReceiptPaymentMethod(IntPtr thisobj, UInt32 nReceiptIndex);
		public EPaymentMethod GetReceiptPaymentMethod(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptPaymentMethod>(this.Functions.GetReceiptPaymentMethod); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptBaseCost(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptBaseCost(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptBaseCost>(this.Functions.GetReceiptBaseCost); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTotalDiscount(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptTotalDiscount(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptTotalDiscount>(this.Functions.GetReceiptTotalDiscount); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTax(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptTax(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptTax>(this.Functions.GetReceiptTax); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptShipping(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptShipping(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptShipping>(this.Functions.GetReceiptShipping); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ECurrencyCode NativeGetReceiptCurrencyCode(IntPtr thisobj, UInt32 nReceiptIndex);
		public ECurrencyCode GetReceiptCurrencyCode(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptCurrencyCode>(this.Functions.GetReceiptCurrencyCode); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetReceiptCountryCode(IntPtr thisobj, UInt32 nReceiptIndex);
		public string GetReceiptCountryCode(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptCountryCode>(this.Functions.GetReceiptCountryCode); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUnknown(IntPtr thisobj);
		public void Unknown() { var call = this.GetFunction<NativeUnknown>(this.Functions.Unknown); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumLicenses(IntPtr thisobj);
		public UInt32 GetNumLicenses() { var call = this.GetFunction<NativeGetNumLicenses>(this.Functions.GetNumLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumReceipts(IntPtr thisobj);
		public UInt32 GetNumReceipts() { var call = this.GetFunction<NativeGetNumReceipts>(this.Functions.GetNumReceipts); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativePurchaseWithMachineID(IntPtr thisobj, UInt32 nPackageID, string pchCustomData);
		[return: MarshalAs(UnmanagedType.I1)] public bool PurchaseWithMachineID(UInt32 nPackageID, string pchCustomData) { var call = this.GetFunction<NativePurchaseWithMachineID>(this.Functions.PurchaseWithMachineID); return call(this.ObjectAddress, nPackageID, pchCustomData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInitClickAndBuyPurchase(IntPtr thisobj, UInt32 nPackageID, Int64 nAccountNum, string pchState, string pchCountryCode, UInt32 nGiftID);
		[return: MarshalAs(UnmanagedType.I1)] public bool InitClickAndBuyPurchase(UInt32 nPackageID, Int64 nAccountNum, string pchState, string pchCountryCode, UInt32 nGiftID) { var call = this.GetFunction<NativeInitClickAndBuyPurchase>(this.Functions.InitClickAndBuyPurchase); return call(this.ObjectAddress, nPackageID, nAccountNum, pchState, pchCountryCode, nGiftID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetPreviousClickAndBuyAccount(IntPtr thisobj, ref Int64 pnAccountNum, string pchState, string pchCountryCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetPreviousClickAndBuyAccount(ref Int64 pnAccountNum, string pchState, string pchCountryCode) { var call = this.GetFunction<NativeGetPreviousClickAndBuyAccount>(this.Functions.GetPreviousClickAndBuyAccount); return call(this.ObjectAddress, ref pnAccountNum, pchState, pchCountryCode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetReceiptCardInfo(IntPtr thisobj, UInt32 nReceiptIndex, ref Int32 eCreditCardType, string pchCardLast4Digits, string pchCardHolderFirstName, string pchCardHolderLastName, string pchCardExpYear, string pchCardExpMonth);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetReceiptCardInfo(UInt32 nReceiptIndex, ref Int32 eCreditCardType, string pchCardLast4Digits, string pchCardHolderFirstName, string pchCardHolderLastName, string pchCardExpYear, string pchCardExpMonth) { var call = this.GetFunction<NativeGetReceiptCardInfo>(this.Functions.GetReceiptCardInfo); return call(this.ObjectAddress, nReceiptIndex, ref eCreditCardType, pchCardLast4Digits, pchCardHolderFirstName, pchCardHolderLastName, pchCardExpYear, pchCardExpMonth); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetReceiptBillingAddress(IntPtr thisobj, UInt32 nReceiptIndex, string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetReceiptBillingAddress(UInt32 nReceiptIndex, string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetReceiptBillingAddress>(this.Functions.GetReceiptBillingAddress); return call(this.ObjectAddress, nReceiptIndex, pchFirstName, pchLastName, pchAddress1, pchAddress2, pchCity, pchPostcode, pchState, pchCountry, pchPhone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptLineItemCount(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptLineItemCount(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptLineItemCount>(this.Functions.GetReceiptLineItemCount); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetReceiptLineItemInfo(IntPtr thisobj, UInt32 nReceiptIndex, UInt32 nLineItemIndex, ref UInt32 nPackageID, ref UInt32 nBaseCost, ref UInt32 nDiscount, ref UInt32 nTax, ref UInt32 nShipping, ref ECurrencyCode eCurrencyCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetReceiptLineItemInfo(UInt32 nReceiptIndex, UInt32 nLineItemIndex, ref UInt32 nPackageID, ref UInt32 nBaseCost, ref UInt32 nDiscount, ref UInt32 nTax, ref UInt32 nShipping, ref ECurrencyCode eCurrencyCode) { var call = this.GetFunction<NativeGetReceiptLineItemInfo>(this.Functions.GetReceiptLineItemInfo); return call(this.ObjectAddress, nReceiptIndex, nLineItemIndex, ref nPackageID, ref nBaseCost, ref nDiscount, ref nTax, ref nShipping, ref eCurrencyCode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEnableTestLicense(IntPtr thisobj, UInt32 arg1);
		public void EnableTestLicense(UInt32 arg1) { var call = this.GetFunction<NativeEnableTestLicense>(this.Functions.EnableTestLicense); call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeDisableTestLicense(IntPtr thisobj, UInt32 arg1);
		public void DisableTestLicense(UInt32 arg1) { var call = this.GetFunction<NativeDisableTestLicense>(this.Functions.DisableTestLicense); call(this.ObjectAddress, arg1); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IP2PControllerVTable
	{
		public IntPtr Start;
		public IntPtr IsEnabled;
		public IntPtr SetAutoGeneratePerTorrentSteamIDs;
		public IntPtr LoadVST;
		public IntPtr GetActiveHandleCount;
		public IntPtr GetHandle;
		public IntPtr Activate;
		public IntPtr Deactivate;
		public IntPtr Remove;
		public IntPtr GetStatusSnapshot;
		public IntPtr IsCompleted;
		public IntPtr IsActive;
		public IntPtr IsChecking;
		public IntPtr GetValue;
		public IntPtr GetSharingSaveFolder;
		public IntPtr SetSharingSaveFolder;
		public IntPtr GetSharingTemporaryFolder;
		public IntPtr SetSharingTemporaryFolder;
		public IntPtr GetVSTFolder;
		public IntPtr SetVSTFolder;
		public IntPtr SetShareType;
		public IntPtr GetShareType;
		public IntPtr SetUploadBitsPerSecond;
		public IntPtr GetUploadBitsPerSecond;
		public IntPtr GetNumFiles;
		public IntPtr GetFile;
		public IntPtr GetP2PFileInfo;
		public IntPtr GetBlockStates;
		public IntPtr GetAvailBlocks;
		public IntPtr GetPeerInfo;
		public IntPtr GetPeerBlockInfo;
		public IntPtr GetP2PKeyValues;
		public IntPtr GetP2POptions;
		public IntPtr MarkP2POptionsDirty;
		public IntPtr SaveP2POptions;
		public IntPtr GetP2PFileID;
		public IntPtr GetP2PGlobalOptions;
		public IntPtr MarkP2PGlobalOptionsDirty;
		public IntPtr ResetGlobalOptionsToDefaults;
		public IntPtr DeleteLocalContent;
		public IntPtr ResetToMissing;
		public IntPtr Validate;
		public IntPtr OnCopyCompleted;
		public IntPtr GetCopyFileNames;
		public IntPtr IsUserActive;
		public IntPtr GetFileIDFromVST;
		public IntPtr SetHostType;
		public IntPtr SetRegistryHive;
	}
	
	public class IP2PController : NativeWrapper<IP2PControllerVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStart(IntPtr thisobj);
		public Int32 Start() { var call = this.GetFunction<NativeStart>(this.Functions.Start); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsEnabled(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsEnabled() { var call = this.GetFunction<NativeIsEnabled>(this.Functions.IsEnabled); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetAutoGeneratePerTorrentSteamIDs(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool arg1);
		public Int32 SetAutoGeneratePerTorrentSteamIDs([MarshalAs(UnmanagedType.I1)] bool arg1) { var call = this.GetFunction<NativeSetAutoGeneratePerTorrentSteamIDs>(this.Functions.SetAutoGeneratePerTorrentSteamIDs); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLoadVST(IntPtr thisobj, ref UInt64 arg1, string arg2, ref UInt32 arg3);
		public Int32 LoadVST(ref UInt64 arg1, string arg2, ref UInt32 arg3) { var call = this.GetFunction<NativeLoadVST>(this.Functions.LoadVST); return call(this.ObjectAddress, ref arg1, arg2, ref arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetActiveHandleCount(IntPtr thisobj);
		public Int32 GetActiveHandleCount() { var call = this.GetFunction<NativeGetActiveHandleCount>(this.Functions.GetActiveHandleCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHandle(IntPtr thisobj, Int32 arg1);
		public Int32 GetHandle(Int32 arg1) { var call = this.GetFunction<NativeGetHandle>(this.Functions.GetHandle); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeActivate(IntPtr thisobj, UInt32 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2);
		public Int32 Activate(UInt32 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeActivate>(this.Functions.Activate); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDeactivate(IntPtr thisobj, UInt32 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2);
		public Int32 Deactivate(UInt32 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeDeactivate>(this.Functions.Deactivate); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRemove(IntPtr thisobj, UInt32 arg1);
		public Int32 Remove(UInt32 arg1) { var call = this.GetFunction<NativeRemove>(this.Functions.Remove); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetStatusSnapshot(IntPtr thisobj, UInt32 arg1);
		public Int32 GetStatusSnapshot(UInt32 arg1) { var call = this.GetFunction<NativeGetStatusSnapshot>(this.Functions.GetStatusSnapshot); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCompleted(IntPtr thisobj, UInt32 arg1);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCompleted(UInt32 arg1) { var call = this.GetFunction<NativeIsCompleted>(this.Functions.IsCompleted); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsActive(IntPtr thisobj, UInt32 arg1);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsActive(UInt32 arg1) { var call = this.GetFunction<NativeIsActive>(this.Functions.IsActive); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsChecking(IntPtr thisobj, UInt32 arg1);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsChecking(UInt32 arg1) { var call = this.GetFunction<NativeIsChecking>(this.Functions.IsChecking); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetValue(IntPtr thisobj, UInt32 arg1, string arg2);
		public Int32 GetValue(UInt32 arg1, string arg2) { var call = this.GetFunction<NativeGetValue>(this.Functions.GetValue); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSharingSaveFolder(IntPtr thisobj);
		public Int32 GetSharingSaveFolder() { var call = this.GetFunction<NativeGetSharingSaveFolder>(this.Functions.GetSharingSaveFolder); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetSharingSaveFolder(IntPtr thisobj, string arg1);
		public Int32 SetSharingSaveFolder(string arg1) { var call = this.GetFunction<NativeSetSharingSaveFolder>(this.Functions.SetSharingSaveFolder); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSharingTemporaryFolder(IntPtr thisobj);
		public Int32 GetSharingTemporaryFolder() { var call = this.GetFunction<NativeGetSharingTemporaryFolder>(this.Functions.GetSharingTemporaryFolder); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetSharingTemporaryFolder(IntPtr thisobj, string arg1);
		public Int32 SetSharingTemporaryFolder(string arg1) { var call = this.GetFunction<NativeSetSharingTemporaryFolder>(this.Functions.SetSharingTemporaryFolder); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetVSTFolder(IntPtr thisobj);
		public Int32 GetVSTFolder() { var call = this.GetFunction<NativeGetVSTFolder>(this.Functions.GetVSTFolder); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetVSTFolder(IntPtr thisobj, string arg1);
		public Int32 SetVSTFolder(string arg1) { var call = this.GetFunction<NativeSetVSTFolder>(this.Functions.SetVSTFolder); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetShareType(IntPtr thisobj, UInt32 ShareType_t);
		public Int32 SetShareType(UInt32 ShareType_t) { var call = this.GetFunction<NativeSetShareType>(this.Functions.SetShareType); return call(this.ObjectAddress, ShareType_t); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetShareType(IntPtr thisobj);
		public UInt32 GetShareType() { var call = this.GetFunction<NativeGetShareType>(this.Functions.GetShareType); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetUploadBitsPerSecond(IntPtr thisobj, Int32 arg1);
		public Int32 SetUploadBitsPerSecond(Int32 arg1) { var call = this.GetFunction<NativeSetUploadBitsPerSecond>(this.Functions.SetUploadBitsPerSecond); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUploadBitsPerSecond(IntPtr thisobj);
		public Int32 GetUploadBitsPerSecond() { var call = this.GetFunction<NativeGetUploadBitsPerSecond>(this.Functions.GetUploadBitsPerSecond); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumFiles(IntPtr thisobj, UInt32 arg1);
		public Int32 GetNumFiles(UInt32 arg1) { var call = this.GetFunction<NativeGetNumFiles>(this.Functions.GetNumFiles); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFile(IntPtr thisobj, UInt32 arg1, Int32 arg2);
		public Int32 GetFile(UInt32 arg1, Int32 arg2) { var call = this.GetFunction<NativeGetFile>(this.Functions.GetFile); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetP2PFileInfo(IntPtr thisobj, UInt32 arg1, Int32 arg2, ref UInt32 arg3);
		public Int32 GetP2PFileInfo(UInt32 arg1, Int32 arg2, ref UInt32 arg3) { var call = this.GetFunction<NativeGetP2PFileInfo>(this.Functions.GetP2PFileInfo); return call(this.ObjectAddress, arg1, arg2, ref arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetBlockStates(IntPtr thisobj, UInt32 arg1, Int32 arg2, byte[] arg3);
		public Int32 GetBlockStates(UInt32 arg1, Int32 arg2, byte[] arg3) { var call = this.GetFunction<NativeGetBlockStates>(this.Functions.GetBlockStates); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAvailBlocks(IntPtr thisobj, UInt32 arg1, Int32 arg2, ref UInt16 arg3);
		public Int32 GetAvailBlocks(UInt32 arg1, Int32 arg2, ref UInt16 arg3) { var call = this.GetFunction<NativeGetAvailBlocks>(this.Functions.GetAvailBlocks); return call(this.ObjectAddress, arg1, arg2, ref arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetPeerInfo(IntPtr thisobj, UInt32 arg1, Int32 arg2, ref UInt32 arg3);
		public Int32 GetPeerInfo(UInt32 arg1, Int32 arg2, ref UInt32 arg3) { var call = this.GetFunction<NativeGetPeerInfo>(this.Functions.GetPeerInfo); return call(this.ObjectAddress, arg1, arg2, ref arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetPeerBlockInfo(IntPtr thisobj, UInt32 arg1, UInt32 arg2, Int32 arg3, byte[] arg4);
		public Int32 GetPeerBlockInfo(UInt32 arg1, UInt32 arg2, Int32 arg3, byte[] arg4) { var call = this.GetFunction<NativeGetPeerBlockInfo>(this.Functions.GetPeerBlockInfo); return call(this.ObjectAddress, arg1, arg2, arg3, arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetP2PKeyValues(IntPtr thisobj, UInt32 arg1);
		public Int32 GetP2PKeyValues(UInt32 arg1) { var call = this.GetFunction<NativeGetP2PKeyValues>(this.Functions.GetP2PKeyValues); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetP2POptions(IntPtr thisobj, UInt32 arg1);
		public Int32 GetP2POptions(UInt32 arg1) { var call = this.GetFunction<NativeGetP2POptions>(this.Functions.GetP2POptions); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMarkP2POptionsDirty(IntPtr thisobj, UInt32 arg1);
		public Int32 MarkP2POptionsDirty(UInt32 arg1) { var call = this.GetFunction<NativeMarkP2POptionsDirty>(this.Functions.MarkP2POptionsDirty); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSaveP2POptions(IntPtr thisobj, UInt32 arg1);
		public Int32 SaveP2POptions(UInt32 arg1) { var call = this.GetFunction<NativeSaveP2POptions>(this.Functions.SaveP2POptions); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetP2PFileID(IntPtr thisobj, UInt32 arg1, ref UInt32 arg2, UInt32 arg3);
		public Int32 GetP2PFileID(UInt32 arg1, ref UInt32 arg2, UInt32 arg3) { var call = this.GetFunction<NativeGetP2PFileID>(this.Functions.GetP2PFileID); return call(this.ObjectAddress, arg1, ref arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetP2PGlobalOptions(IntPtr thisobj);
		public Int32 GetP2PGlobalOptions() { var call = this.GetFunction<NativeGetP2PGlobalOptions>(this.Functions.GetP2PGlobalOptions); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMarkP2PGlobalOptionsDirty(IntPtr thisobj);
		public Int32 MarkP2PGlobalOptionsDirty() { var call = this.GetFunction<NativeMarkP2PGlobalOptionsDirty>(this.Functions.MarkP2PGlobalOptionsDirty); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResetGlobalOptionsToDefaults(IntPtr thisobj);
		public Int32 ResetGlobalOptionsToDefaults() { var call = this.GetFunction<NativeResetGlobalOptionsToDefaults>(this.Functions.ResetGlobalOptionsToDefaults); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDeleteLocalContent(IntPtr thisobj, UInt32 arg1);
		public Int32 DeleteLocalContent(UInt32 arg1) { var call = this.GetFunction<NativeDeleteLocalContent>(this.Functions.DeleteLocalContent); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResetToMissing(IntPtr thisobj, UInt32 arg1);
		public Int32 ResetToMissing(UInt32 arg1) { var call = this.GetFunction<NativeResetToMissing>(this.Functions.ResetToMissing); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeValidate(IntPtr thisobj, UInt32 arg1);
		public Int32 Validate(UInt32 arg1) { var call = this.GetFunction<NativeValidate>(this.Functions.Validate); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeOnCopyCompleted(IntPtr thisobj, UInt32 arg1);
		public Int32 OnCopyCompleted(UInt32 arg1) { var call = this.GetFunction<NativeOnCopyCompleted>(this.Functions.OnCopyCompleted); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCopyFileNames(IntPtr thisobj, UInt32 arg1, Int32 arg2, string arg3, UInt32 arg4, string arg5, UInt32 arg6);
		public Int32 GetCopyFileNames(UInt32 arg1, Int32 arg2, string arg3, UInt32 arg4, string arg5, UInt32 arg6) { var call = this.GetFunction<NativeGetCopyFileNames>(this.Functions.GetCopyFileNames); return call(this.ObjectAddress, arg1, arg2, arg3, arg4, arg5, arg6); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserActive(IntPtr thisobj, UInt32 arg1);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserActive(UInt32 arg1) { var call = this.GetFunction<NativeIsUserActive>(this.Functions.IsUserActive); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileIDFromVST(IntPtr thisobj, string arg1, ref UInt32 arg2, UInt32 arg3);
		public Int32 GetFileIDFromVST(string arg1, ref UInt32 arg2, UInt32 arg3) { var call = this.GetFunction<NativeGetFileIDFromVST>(this.Functions.GetFileIDFromVST); return call(this.ObjectAddress, arg1, ref arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetHostType(IntPtr thisobj, UInt32 arg1);
		public Int32 SetHostType(UInt32 arg1) { var call = this.GetFunction<NativeSetHostType>(this.Functions.SetHostType); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetRegistryHive(IntPtr thisobj, string arg1);
		public Int32 SetRegistryHive(string arg1) { var call = this.GetFunction<NativeSetRegistryHive>(this.Functions.SetRegistryHive); return call(this.ObjectAddress, arg1); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientEngineVTable
	{
		public IntPtr CreateSteamPipe;
		public IntPtr ReleaseSteamPipe;
		public IntPtr CreateGlobalUser;
		public IntPtr ConnectToGlobalUser;
		public IntPtr CreateLocalUser;
		public IntPtr ReleaseUser;
		public IntPtr IsValidHSteamUserPipe;
		public IntPtr GetIClientUser;
		public IntPtr GetIClientGameServer;
		public IntPtr SetLocalIPBinding;
		public IntPtr GetUniverseName;
		public IntPtr GetIClientFriends;
		public IntPtr GetIClientUtils;
		public IntPtr GetIClientBilling;
		public IntPtr GetIClientMatchmaking;
		public IntPtr GetIClientApps;
		public IntPtr GetIClientContentServer;
		public IntPtr GetIClientMasterServerUpdater;
		public IntPtr GetIClientMatchmakingServers;
		public IntPtr GetIP2PController;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr GetIClientUserStats;
		public IntPtr GetIClientNetworking;
		public IntPtr GetIClientRemoteStorage;
		public IntPtr SetWarningMessageHook;
		public IntPtr GetIClientUserItems;
		public IntPtr GetIClientGameServerItems;
		public IntPtr GetIClientGameCoordinator;
		public IntPtr SetOverlayNotificationPosition;
		public IntPtr IsOverlayEnabled;
		public IntPtr GetAPICallResult;
		public IntPtr GetIClientDepotBuilder;
		public IntPtr ConCommandInit;
		public IntPtr GetIClientAppManager;
		public IntPtr OverlayNeedsPresent;
		public IntPtr GetIClientGameStats;
		public IntPtr GetIPCServerMap;
		public IntPtr OnDebugTextArrived;
		public IntPtr CreateLocalUserInternal;
	}
	
	public class IClientEngine : NativeWrapper<IClientEngineVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateSteamPipe(IntPtr thisobj);
		public Int32 CreateSteamPipe() { var call = this.GetFunction<NativeCreateSteamPipe>(this.Functions.CreateSteamPipe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseSteamPipe(IntPtr thisobj, Int32 hSteamPipe);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseSteamPipe(Int32 hSteamPipe) { var call = this.GetFunction<NativeReleaseSteamPipe>(this.Functions.ReleaseSteamPipe); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateGlobalUser(IntPtr thisobj, ref Int32 phSteamPipe);
		public Int32 CreateGlobalUser(ref Int32 phSteamPipe) { var call = this.GetFunction<NativeCreateGlobalUser>(this.Functions.CreateGlobalUser); return call(this.ObjectAddress, ref phSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeConnectToGlobalUser(IntPtr thisobj, Int32 hSteamPipe);
		public Int32 ConnectToGlobalUser(Int32 hSteamPipe) { var call = this.GetFunction<NativeConnectToGlobalUser>(this.Functions.ConnectToGlobalUser); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUser(IntPtr thisobj, ref Int32 phSteamPipe, EAccountType eAccountType);
		public Int32 CreateLocalUser(ref Int32 phSteamPipe, EAccountType eAccountType) { var call = this.GetFunction<NativeCreateLocalUser>(this.Functions.CreateLocalUser); return call(this.ObjectAddress, ref phSteamPipe, eAccountType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseUser(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		public void ReleaseUser(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeReleaseUser>(this.Functions.ReleaseUser); call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsValidHSteamUserPipe(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsValidHSteamUserPipe(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeIsValidHSteamUserPipe>(this.Functions.IsValidHSteamUserPipe); return call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientUser NativeGetIClientUser(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientUser GetIClientUser(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientUser>(this.Functions.GetIClientUser); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientGameServer NativeGetIClientGameServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientGameServer GetIClientGameServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientGameServer>(this.Functions.GetIClientGameServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLocalIPBinding(IntPtr thisobj, UInt32 unIP, UInt16 usPort);
		public void SetLocalIPBinding(UInt32 unIP, UInt16 usPort) { var call = this.GetFunction<NativeSetLocalIPBinding>(this.Functions.SetLocalIPBinding); call(this.ObjectAddress, unIP, usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetUniverseName(IntPtr thisobj, EUniverse eUniverse);
		public string GetUniverseName(EUniverse eUniverse) { var call = this.GetFunction<NativeGetUniverseName>(this.Functions.GetUniverseName); return call(this.ObjectAddress, eUniverse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientFriends NativeGetIClientFriends(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientFriends GetIClientFriends(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientFriends>(this.Functions.GetIClientFriends); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientUtils NativeGetIClientUtils(IntPtr thisobj, Int32 hSteamPipe, string pchVersion);
		public IClientUtils GetIClientUtils(Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientUtils>(this.Functions.GetIClientUtils); return call(this.ObjectAddress, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientBilling NativeGetIClientBilling(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientBilling GetIClientBilling(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientBilling>(this.Functions.GetIClientBilling); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientMatchmaking NativeGetIClientMatchmaking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientMatchmaking GetIClientMatchmaking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientMatchmaking>(this.Functions.GetIClientMatchmaking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientApps NativeGetIClientApps(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientApps GetIClientApps(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientApps>(this.Functions.GetIClientApps); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientContentServer NativeGetIClientContentServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientContentServer GetIClientContentServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientContentServer>(this.Functions.GetIClientContentServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientMasterServerUpdater NativeGetIClientMasterServerUpdater(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientMasterServerUpdater GetIClientMasterServerUpdater(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientMasterServerUpdater>(this.Functions.GetIClientMasterServerUpdater); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientMatchmakingServers NativeGetIClientMatchmakingServers(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientMatchmakingServers GetIClientMatchmakingServers(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientMatchmakingServers>(this.Functions.GetIClientMatchmakingServers); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IP2PController NativeGetIP2PController(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IP2PController GetIP2PController(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIP2PController>(this.Functions.GetIP2PController); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientUserStats NativeGetIClientUserStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientUserStats GetIClientUserStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientUserStats>(this.Functions.GetIClientUserStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientNetworking NativeGetIClientNetworking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientNetworking GetIClientNetworking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientNetworking>(this.Functions.GetIClientNetworking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientRemoteStorage NativeGetIClientRemoteStorage(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientRemoteStorage GetIClientRemoteStorage(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientRemoteStorage>(this.Functions.GetIClientRemoteStorage); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientUserItems NativeGetIClientUserItems(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientUserItems GetIClientUserItems(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientUserItems>(this.Functions.GetIClientUserItems); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientGameServerItems NativeGetIClientGameServerItems(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientGameServerItems GetIClientGameServerItems(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientGameServerItems>(this.Functions.GetIClientGameServerItems); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientGameCoordinator NativeGetIClientGameCoordinator(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientGameCoordinator GetIClientGameCoordinator(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientGameCoordinator>(this.Functions.GetIClientGameCoordinator); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOverlayNotificationPosition(IntPtr thisobj, ENotificationPosition eNotificationPosition);
		public void SetOverlayNotificationPosition(ENotificationPosition eNotificationPosition) { var call = this.GetFunction<NativeSetOverlayNotificationPosition>(this.Functions.SetOverlayNotificationPosition); call(this.ObjectAddress, eNotificationPosition); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsOverlayEnabled(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsOverlayEnabled() { var call = this.GetFunction<NativeIsOverlayEnabled>(this.Functions.IsOverlayEnabled); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAPICallResult(IntPtr thisobj, Int32 hSteamPipe, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAPICallResult(Int32 hSteamPipe, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeGetAPICallResult>(this.Functions.GetAPICallResult); return call(this.ObjectAddress, hSteamPipe, hSteamAPICall, pCallback, cubCallback, iCallbackExpected, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientDepotBuilder NativeGetIClientDepotBuilder(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientDepotBuilder GetIClientDepotBuilder(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientDepotBuilder>(this.Functions.GetIClientDepotBuilder); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeConCommandInit(IntPtr thisobj, ref IConCommandBaseAccessor arg1);
		public void ConCommandInit(ref IConCommandBaseAccessor arg1) { var call = this.GetFunction<NativeConCommandInit>(this.Functions.ConCommandInit); call(this.ObjectAddress, ref arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientAppManager NativeGetIClientAppManager(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientAppManager GetIClientAppManager(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientAppManager>(this.Functions.GetIClientAppManager); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeOverlayNeedsPresent(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool OverlayNeedsPresent() { var call = this.GetFunction<NativeOverlayNeedsPresent>(this.Functions.OverlayNeedsPresent); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IClientGameStats NativeGetIClientGameStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IClientGameStats GetIClientGameStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientGameStats>(this.Functions.GetIClientGameStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, pchVersion); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetIPCServerMap(IntPtr thisobj);
		public Int32 GetIPCServerMap() { var call = this.GetFunction<NativeGetIPCServerMap>(this.Functions.GetIPCServerMap); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeOnDebugTextArrived(IntPtr thisobj, string text);
		public Int32 OnDebugTextArrived(string text) { var call = this.GetFunction<NativeOnDebugTextArrived>(this.Functions.OnDebugTextArrived); return call(this.ObjectAddress, text); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUserInternal(IntPtr thisobj, Int32 a, EAccountType eAccountType, [MarshalAs(UnmanagedType.I1)] bool c);
		public Int32 CreateLocalUserInternal(Int32 a, EAccountType eAccountType, [MarshalAs(UnmanagedType.I1)] bool c) { var call = this.GetFunction<NativeCreateLocalUserInternal>(this.Functions.CreateLocalUserInternal); return call(this.ObjectAddress, a, eAccountType, c); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameCoordinator001VTable
	{
		public IntPtr SendMessage;
		public IntPtr IsMessageAvailable;
		public IntPtr RetrieveMessage;
	}
	
	public class ISteamGameCoordinator001 : NativeWrapper<ISteamGameCoordinator001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EGCMsgResponse NativeSendMessage(IntPtr thisobj, UInt32 messageId, IntPtr data, UInt32 cbData);
		public EGCMsgResponse SendMessage(UInt32 messageId, IntPtr data, UInt32 cbData) { var call = this.GetFunction<NativeSendMessage>(this.Functions.SendMessage); return call(this.ObjectAddress, messageId, data, cbData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsMessageAvailable(IntPtr thisobj, ref UInt32 cbData);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsMessageAvailable(ref UInt32 cbData) { var call = this.GetFunction<NativeIsMessageAvailable>(this.Functions.IsMessageAvailable); return call(this.ObjectAddress, ref cbData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EGCMsgResponse NativeRetrieveMessage(IntPtr thisobj, ref UInt32 messageId, IntPtr data, UInt32 cbData, ref UInt32 cbDataActual);
		public EGCMsgResponse RetrieveMessage(ref UInt32 messageId, IntPtr data, UInt32 cbData, ref UInt32 cbDataActual) { var call = this.GetFunction<NativeRetrieveMessage>(this.Functions.RetrieveMessage); return call(this.ObjectAddress, ref messageId, data, cbData, ref cbDataActual); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser005VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetLogonState;
		public IntPtr Connected;
		public IntPtr GetSteamID;
		public IntPtr IsVACBanned;
		public IntPtr RequireShowVACBannedMessage;
		public IntPtr AcknowledgeVACBanning;
		public IntPtr SetSteam2Ticket;
		public IntPtr AddServerNetAddress;
		public IntPtr SetEmail;
		public IntPtr SetRegistryString;
		public IntPtr GetRegistryString;
		public IntPtr SetRegistryInt;
		public IntPtr GetRegistryInt;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr SetSelfAsPrimaryChatDestination;
		public IntPtr IsPrimaryChatDestination;
		public IntPtr RequestLegacyCDKey;
		public IntPtr SendGuestPassByEmail;
		public IntPtr SendGuestPassByAccountID;
		public IntPtr AckGuestPass;
		public IntPtr RedeemGuestPass;
		public IntPtr GetGuestPassToGiveCount;
		public IntPtr GetGuestPassToRedeemCount;
		public IntPtr GetGuestPassLastUpdateTime;
		public IntPtr GetGuestPassToGiveInfo;
		public IntPtr GetGuestPassToRedeemInfo;
		public IntPtr GetGuestPassToRedeemSenderAddress;
		public IntPtr GetGuestPassToRedeemSenderName;
		public IntPtr AcknowledgeMessageByGID;
		public IntPtr SetLanguage;
		public IntPtr TrackAppUsageEvent;
		public IntPtr SetAccountName;
		public IntPtr SetPassword;
		public IntPtr SetAccountCreationTime;
	}
	
	public class ISteamUser005 : NativeWrapper<ISteamUser005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt64 steamID);
		public void LogOn(UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELogonState NativeGetLogonState(IntPtr thisobj);
		public ELogonState GetLogonState() { var call = this.GetFunction<NativeGetLogonState>(this.Functions.GetLogonState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeConnected(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Connected() { var call = this.GetFunction<NativeConnected>(this.Functions.Connected); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj, EVACBan eVACBan);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned(EVACBan eVACBan) { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequireShowVACBannedMessage(IntPtr thisobj, EVACBan eVACBan);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequireShowVACBannedMessage(EVACBan eVACBan) { var call = this.GetFunction<NativeRequireShowVACBannedMessage>(this.Functions.RequireShowVACBannedMessage); return call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAcknowledgeVACBanning(IntPtr thisobj, EVACBan eVACBan);
		public void AcknowledgeVACBanning(EVACBan eVACBan) { var call = this.GetFunction<NativeAcknowledgeVACBanning>(this.Functions.AcknowledgeVACBanning); call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSteam2Ticket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public void SetSteam2Ticket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2Ticket>(this.Functions.SetSteam2Ticket); call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddServerNetAddress(IntPtr thisobj, UInt32 unIP, UInt16 unPort);
		public void AddServerNetAddress(UInt32 unIP, UInt16 unPort) { var call = this.GetFunction<NativeAddServerNetAddress>(this.Functions.AddServerNetAddress); call(this.ObjectAddress, unIP, unPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetEmail(IntPtr thisobj, string pchEmail);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetEmail(string pchEmail) { var call = this.GetFunction<NativeSetEmail>(this.Functions.SetEmail); return call(this.ObjectAddress, pchEmail); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetRegistryString>(this.Functions.SetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue) { var call = this.GetFunction<NativeGetRegistryString>(this.Functions.GetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, pchKey, pchValue, cbValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue) { var call = this.GetFunction<NativeSetRegistryInt>(this.Functions.SetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, pchKey, iValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue) { var call = this.GetFunction<NativeGetRegistryInt>(this.Functions.GetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, pchKey, ref piValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, CGameID nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, CGameID nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, nGameAppID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSelfAsPrimaryChatDestination(IntPtr thisobj);
		public void SetSelfAsPrimaryChatDestination() { var call = this.GetFunction<NativeSetSelfAsPrimaryChatDestination>(this.Functions.SetSelfAsPrimaryChatDestination); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPrimaryChatDestination(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPrimaryChatDestination() { var call = this.GetFunction<NativeIsPrimaryChatDestination>(this.Functions.IsPrimaryChatDestination); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestLegacyCDKey(IntPtr thisobj, UInt32 arg1);
		public Int32 RequestLegacyCDKey(UInt32 arg1) { var call = this.GetFunction<NativeRequestLegacyCDKey>(this.Functions.RequestLegacyCDKey); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSendGuestPassByEmail(IntPtr thisobj, string arg1, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] bool arg3);
		public Int32 SendGuestPassByEmail(string arg1, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] bool arg3) { var call = this.GetFunction<NativeSendGuestPassByEmail>(this.Functions.SendGuestPassByEmail); return call(this.ObjectAddress, arg1, uint64, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSendGuestPassByAccountID(IntPtr thisobj, UInt32 arg1, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] bool arg3);
		public Int32 SendGuestPassByAccountID(UInt32 arg1, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] bool arg3) { var call = this.GetFunction<NativeSendGuestPassByAccountID>(this.Functions.SendGuestPassByAccountID); return call(this.ObjectAddress, arg1, uint64, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAckGuestPass(IntPtr thisobj, string arg1);
		public Int32 AckGuestPass(string arg1) { var call = this.GetFunction<NativeAckGuestPass>(this.Functions.AckGuestPass); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRedeemGuestPass(IntPtr thisobj, string arg1);
		public Int32 RedeemGuestPass(string arg1) { var call = this.GetFunction<NativeRedeemGuestPass>(this.Functions.RedeemGuestPass); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToGiveCount(IntPtr thisobj);
		public Int32 GetGuestPassToGiveCount() { var call = this.GetFunction<NativeGetGuestPassToGiveCount>(this.Functions.GetGuestPassToGiveCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToRedeemCount(IntPtr thisobj);
		public Int32 GetGuestPassToRedeemCount() { var call = this.GetFunction<NativeGetGuestPassToRedeemCount>(this.Functions.GetGuestPassToRedeemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassLastUpdateTime(IntPtr thisobj);
		public Int32 GetGuestPassLastUpdateTime() { var call = this.GetFunction<NativeGetGuestPassLastUpdateTime>(this.Functions.GetGuestPassLastUpdateTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToGiveInfo(IntPtr thisobj, UInt32 arg1, ref UInt64 arg2, ref UInt32 arg3, ref UInt32 arg4, ref UInt32 arg5, ref UInt32 arg6, ref UInt32 arg7, string arg8, Int32 arg9);
		public Int32 GetGuestPassToGiveInfo(UInt32 arg1, ref UInt64 arg2, ref UInt32 arg3, ref UInt32 arg4, ref UInt32 arg5, ref UInt32 arg6, ref UInt32 arg7, string arg8, Int32 arg9) { var call = this.GetFunction<NativeGetGuestPassToGiveInfo>(this.Functions.GetGuestPassToGiveInfo); return call(this.ObjectAddress, arg1, ref arg2, ref arg3, ref arg4, ref arg5, ref arg6, ref arg7, arg8, arg9); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToRedeemInfo(IntPtr thisobj, UInt32 arg1, ref UInt64 arg2, ref UInt32 arg3, ref UInt32 arg4, ref UInt32 arg5, ref UInt32 arg6, ref UInt32 arg7);
		public Int32 GetGuestPassToRedeemInfo(UInt32 arg1, ref UInt64 arg2, ref UInt32 arg3, ref UInt32 arg4, ref UInt32 arg5, ref UInt32 arg6, ref UInt32 arg7) { var call = this.GetFunction<NativeGetGuestPassToRedeemInfo>(this.Functions.GetGuestPassToRedeemInfo); return call(this.ObjectAddress, arg1, ref arg2, ref arg3, ref arg4, ref arg5, ref arg6, ref arg7); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToRedeemSenderAddress(IntPtr thisobj, UInt32 arg1, string arg2, Int32 arg3);
		public Int32 GetGuestPassToRedeemSenderAddress(UInt32 arg1, string arg2, Int32 arg3) { var call = this.GetFunction<NativeGetGuestPassToRedeemSenderAddress>(this.Functions.GetGuestPassToRedeemSenderAddress); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToRedeemSenderName(IntPtr thisobj, UInt32 arg1, string arg2, Int32 arg3);
		public Int32 GetGuestPassToRedeemSenderName(UInt32 arg1, string arg2, Int32 arg3) { var call = this.GetFunction<NativeGetGuestPassToRedeemSenderName>(this.Functions.GetGuestPassToRedeemSenderName); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAcknowledgeMessageByGID(IntPtr thisobj, string arg1);
		public Int32 AcknowledgeMessageByGID(string arg1) { var call = this.GetFunction<NativeAcknowledgeMessageByGID>(this.Functions.AcknowledgeMessageByGID); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLanguage(IntPtr thisobj, string arg1);
		public Int32 SetLanguage(string arg1) { var call = this.GetFunction<NativeSetLanguage>(this.Functions.SetLanguage); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, CGameID gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(CGameID gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetAccountName(IntPtr thisobj, string arg1);
		public Int32 SetAccountName(string arg1) { var call = this.GetFunction<NativeSetAccountName>(this.Functions.SetAccountName); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetPassword(IntPtr thisobj, string arg1);
		public Int32 SetPassword(string arg1) { var call = this.GetFunction<NativeSetPassword>(this.Functions.SetPassword); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetAccountCreationTime(IntPtr thisobj, UInt32 arg1);
		public Int32 SetAccountCreationTime(UInt32 arg1) { var call = this.GetFunction<NativeSetAccountCreationTime>(this.Functions.SetAccountCreationTime); return call(this.ObjectAddress, arg1); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServerItems002VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr CreateNewItemRequest;
		public IntPtr AddNewItemCriteria;
		public IntPtr AddNewItemCriteria1;
		public IntPtr SendNewItemRequest;
		public IntPtr GrantItemToUser;
		public IntPtr DeleteTemporaryItem;
		public IntPtr DeleteAllTemporaryItems;
	}
	
	public class ISteamGameServerItems002 : NativeWrapper<ISteamGameServerItems002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj, UInt64 steamid);
		public UInt64 LoadItems(UInt64 steamid) { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj, UInt64 steamid);
		public UInt64 GetItemCount(UInt64 steamid) { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, steamid, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, itemid, ref steamid, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemAttribute(IntPtr thisobj, UInt64 itemid, UInt32 arg2, ref UInt32 arg3, ref float arg4);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemAttribute(UInt64 itemid, UInt32 arg2, ref UInt32 arg3, ref float arg4) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); return call(this.ObjectAddress, itemid, arg2, ref arg3, ref arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateNewItemRequest(IntPtr thisobj, UInt64 steamid, UInt32 arg2, EItemQuality quality);
		public Int32 CreateNewItemRequest(UInt64 steamid, UInt32 arg2, EItemQuality quality) { var call = this.GetFunction<NativeCreateNewItemRequest>(this.Functions.CreateNewItemRequest); return call(this.ObjectAddress, steamid, arg2, quality); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria(IntPtr thisobj, Int32 ireq, string arg2, EItemCriteriaOperator arg3, string arg4, [MarshalAs(UnmanagedType.I1)] bool arg5);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string arg2, EItemCriteriaOperator arg3, string arg4, [MarshalAs(UnmanagedType.I1)] bool arg5) { var call = this.GetFunction<NativeAddNewItemCriteria>(this.Functions.AddNewItemCriteria); return call(this.ObjectAddress, ireq, arg2, arg3, arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria1(IntPtr thisobj, Int32 ireq, string arg2, EItemCriteriaOperator arg3, float arg4, [MarshalAs(UnmanagedType.I1)] bool arg5);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string arg2, EItemCriteriaOperator arg3, float arg4, [MarshalAs(UnmanagedType.I1)] bool arg5) { var call = this.GetFunction<NativeAddNewItemCriteria1>(this.Functions.AddNewItemCriteria1); return call(this.ObjectAddress, ireq, arg2, arg3, arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSendNewItemRequest(IntPtr thisobj, Int32 ireq);
		public UInt64 SendNewItemRequest(Int32 ireq) { var call = this.GetFunction<NativeSendNewItemRequest>(this.Functions.SendNewItemRequest); return call(this.ObjectAddress, ireq); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGrantItemToUser(IntPtr thisobj, UInt64 item, UInt64 steamid);
		public UInt64 GrantItemToUser(UInt64 item, UInt64 steamid) { var call = this.GetFunction<NativeGrantItemToUser>(this.Functions.GrantItemToUser); return call(this.ObjectAddress, item, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteTemporaryItem(IntPtr thisobj, UInt64 item);
		public UInt64 DeleteTemporaryItem(UInt64 item) { var call = this.GetFunction<NativeDeleteTemporaryItem>(this.Functions.DeleteTemporaryItem); return call(this.ObjectAddress, item); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteAllTemporaryItems(IntPtr thisobj);
		public UInt64 DeleteAllTemporaryItems() { var call = this.GetFunction<NativeDeleteAllTemporaryItems>(this.Functions.DeleteAllTemporaryItems); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServerItems003VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr CreateNewItemRequest;
		public IntPtr AddNewItemLevel;
		public IntPtr AddNewItemQuality;
		public IntPtr SetNewItemInitialInventoryPos;
		public IntPtr SetNewItemInitialQuantity;
		public IntPtr AddNewItemCriteria;
		public IntPtr AddNewItemCriteria1;
		public IntPtr SendNewItemRequest;
		public IntPtr GrantItemToUser;
		public IntPtr DeleteTemporaryItem;
		public IntPtr DeleteAllTemporaryItems;
		public IntPtr UpdateQuantity;
		public IntPtr GetItemBlob;
		public IntPtr SetItemBlob;
	}
	
	public class ISteamGameServerItems003 : NativeWrapper<ISteamGameServerItems003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj, UInt64 steamid);
		public UInt64 LoadItems(UInt64 steamid) { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj, UInt64 steamid);
		public UInt64 GetItemCount(UInt64 steamid) { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, steamid, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, itemid, ref steamid, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemAttribute(IntPtr thisobj, UInt64 itemid, UInt32 arg2, ref UInt32 arg3, ref float arg4);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemAttribute(UInt64 itemid, UInt32 arg2, ref UInt32 arg3, ref float arg4) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); return call(this.ObjectAddress, itemid, arg2, ref arg3, ref arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateNewItemRequest(IntPtr thisobj, UInt64 steamid);
		public Int32 CreateNewItemRequest(UInt64 steamid) { var call = this.GetFunction<NativeCreateNewItemRequest>(this.Functions.CreateNewItemRequest); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemLevel(IntPtr thisobj, Int32 ireq, UInt32 level);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemLevel(Int32 ireq, UInt32 level) { var call = this.GetFunction<NativeAddNewItemLevel>(this.Functions.AddNewItemLevel); return call(this.ObjectAddress, ireq, level); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemQuality(IntPtr thisobj, Int32 ireq, EItemQuality quality);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemQuality(Int32 ireq, EItemQuality quality) { var call = this.GetFunction<NativeAddNewItemQuality>(this.Functions.AddNewItemQuality); return call(this.ObjectAddress, ireq, quality); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetNewItemInitialInventoryPos(IntPtr thisobj, Int32 ireq, UInt32 pos);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetNewItemInitialInventoryPos(Int32 ireq, UInt32 pos) { var call = this.GetFunction<NativeSetNewItemInitialInventoryPos>(this.Functions.SetNewItemInitialInventoryPos); return call(this.ObjectAddress, ireq, pos); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetNewItemInitialQuantity(IntPtr thisobj, Int32 ireq, UInt32 quantity);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetNewItemInitialQuantity(Int32 ireq, UInt32 quantity) { var call = this.GetFunction<NativeSetNewItemInitialQuantity>(this.Functions.SetNewItemInitialQuantity); return call(this.ObjectAddress, ireq, quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria(IntPtr thisobj, Int32 ireq, string key, EItemCriteriaOperator criteria, string value, [MarshalAs(UnmanagedType.I1)] bool unkn);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string key, EItemCriteriaOperator criteria, string value, [MarshalAs(UnmanagedType.I1)] bool unkn) { var call = this.GetFunction<NativeAddNewItemCriteria>(this.Functions.AddNewItemCriteria); return call(this.ObjectAddress, ireq, key, criteria, value, unkn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria1(IntPtr thisobj, Int32 ireq, string key, EItemCriteriaOperator criteria, float value, [MarshalAs(UnmanagedType.I1)] bool unkn);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string key, EItemCriteriaOperator criteria, float value, [MarshalAs(UnmanagedType.I1)] bool unkn) { var call = this.GetFunction<NativeAddNewItemCriteria1>(this.Functions.AddNewItemCriteria1); return call(this.ObjectAddress, ireq, key, criteria, value, unkn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSendNewItemRequest(IntPtr thisobj, Int32 ireq);
		public UInt64 SendNewItemRequest(Int32 ireq) { var call = this.GetFunction<NativeSendNewItemRequest>(this.Functions.SendNewItemRequest); return call(this.ObjectAddress, ireq); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGrantItemToUser(IntPtr thisobj, UInt64 item, UInt64 steamid);
		public UInt64 GrantItemToUser(UInt64 item, UInt64 steamid) { var call = this.GetFunction<NativeGrantItemToUser>(this.Functions.GrantItemToUser); return call(this.ObjectAddress, item, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteTemporaryItem(IntPtr thisobj, UInt64 item);
		public UInt64 DeleteTemporaryItem(UInt64 item) { var call = this.GetFunction<NativeDeleteTemporaryItem>(this.Functions.DeleteTemporaryItem); return call(this.ObjectAddress, item); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteAllTemporaryItems(IntPtr thisobj);
		public UInt64 DeleteAllTemporaryItems() { var call = this.GetFunction<NativeDeleteAllTemporaryItems>(this.Functions.DeleteAllTemporaryItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUpdateQuantity(IntPtr thisobj, UInt64 item, UInt32 quantity);
		public UInt64 UpdateQuantity(UInt64 item, UInt32 quantity) { var call = this.GetFunction<NativeUpdateQuantity>(this.Functions.UpdateQuantity); return call(this.ObjectAddress, item, quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemBlob(IntPtr thisobj, UInt64 item);
		public UInt64 GetItemBlob(UInt64 item) { var call = this.GetFunction<NativeGetItemBlob>(this.Functions.GetItemBlob); return call(this.ObjectAddress, item); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSetItemBlob(IntPtr thisobj, UInt64 item, IntPtr blob, UInt32 size);
		public UInt64 SetItemBlob(UInt64 item, IntPtr blob, UInt32 size) { var call = this.GetFunction<NativeSetItemBlob>(this.Functions.SetItemBlob); return call(this.ObjectAddress, item, blob, size); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=128)]
	public struct CDllDemandLoader
	{
		public IntPtr m_pchModuleName;
		public IntPtr m_hModule;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bLoadAttempted;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=4448)]
	public struct CSteamAPILoader
	{
		public CDllDemandLoader steamservice;
		public CDllDemandLoader steamclient;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 260)]
		public SByte[] m_pchSteamDir;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 260)]
		public SByte[] m_pchSteamDirBin;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bFullyInitialized;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUtils002VTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
		public IntPtr GetIPCountry;
		public IntPtr GetImageSize;
		public IntPtr GetImageRGBA;
		public IntPtr GetCSERIPPort;
		public IntPtr GetCurrentBatteryPower;
	}
	
	public class ISteamUtils002 : NativeWrapper<ISteamUtils002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSize(IntPtr thisobj, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageSize(Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight) { var call = this.GetFunction<NativeGetImageSize>(this.Functions.GetImageSize); return call(this.ObjectAddress, iImage, ref pnWidth, ref pnHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBA(IntPtr thisobj, Int32 iImage, byte[] pubDest, Int32 nDestBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageRGBA(Int32 iImage, byte[] pubDest, Int32 nDestBufferSize) { var call = this.GetFunction<NativeGetImageRGBA>(this.Functions.GetImageRGBA); return call(this.ObjectAddress, iImage, pubDest, nDestBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPort(IntPtr thisobj, ref UInt32 unIP, ref UInt16 usPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCSERIPPort(ref UInt32 unIP, ref UInt16 usPort) { var call = this.GetFunction<NativeGetCSERIPPort>(this.Functions.GetCSERIPPort); return call(this.ObjectAddress, ref unIP, ref usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower(IntPtr thisobj);
		public Byte GetCurrentBatteryPower() { var call = this.GetFunction<NativeGetCurrentBatteryPower>(this.Functions.GetCurrentBatteryPower); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser004VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetLogonState;
		public IntPtr Connected;
		public IntPtr GetSteamID;
		public IntPtr IsVACBanned;
		public IntPtr RequireShowVACBannedMessage;
		public IntPtr AcknowledgeVACBanning;
		public IntPtr NClientGameIDAdd;
		public IntPtr RemoveClientGame;
		public IntPtr SetClientGameServer;
		public IntPtr SetSteam2Ticket;
		public IntPtr AddServerNetAddress;
		public IntPtr SetEmail;
		public IntPtr Obsolete_GetSteamGameConnectToken;
		public IntPtr SetRegistryString;
		public IntPtr GetRegistryString;
		public IntPtr SetRegistryInt;
		public IntPtr GetRegistryInt;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr SetSelfAsPrimaryChatDestination;
		public IntPtr IsPrimaryChatDestination;
		public IntPtr RequestLegacyCDKey;
	}
	
	public class ISteamUser004 : NativeWrapper<ISteamUser004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt64 steamID);
		public void LogOn(UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELogonState NativeGetLogonState(IntPtr thisobj);
		public ELogonState GetLogonState() { var call = this.GetFunction<NativeGetLogonState>(this.Functions.GetLogonState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeConnected(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Connected() { var call = this.GetFunction<NativeConnected>(this.Functions.Connected); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj, EVACBan eVACBan);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned(EVACBan eVACBan) { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequireShowVACBannedMessage(IntPtr thisobj, EVACBan eVACBan);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequireShowVACBannedMessage(EVACBan eVACBan) { var call = this.GetFunction<NativeRequireShowVACBannedMessage>(this.Functions.RequireShowVACBannedMessage); return call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAcknowledgeVACBanning(IntPtr thisobj, EVACBan eVACBan);
		public void AcknowledgeVACBanning(EVACBan eVACBan) { var call = this.GetFunction<NativeAcknowledgeVACBanning>(this.Functions.AcknowledgeVACBanning); call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNClientGameIDAdd(IntPtr thisobj, Int32 nGameID);
		public Int32 NClientGameIDAdd(Int32 nGameID) { var call = this.GetFunction<NativeNClientGameIDAdd>(this.Functions.NClientGameIDAdd); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRemoveClientGame(IntPtr thisobj, Int32 nClientGameID);
		public void RemoveClientGame(Int32 nClientGameID) { var call = this.GetFunction<NativeRemoveClientGame>(this.Functions.RemoveClientGame); call(this.ObjectAddress, nClientGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetClientGameServer(IntPtr thisobj, Int32 nClientGameID, UInt32 unIPServer, UInt16 usPortServer);
		public void SetClientGameServer(Int32 nClientGameID, UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeSetClientGameServer>(this.Functions.SetClientGameServer); call(this.ObjectAddress, nClientGameID, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSteam2Ticket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public void SetSteam2Ticket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2Ticket>(this.Functions.SetSteam2Ticket); call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddServerNetAddress(IntPtr thisobj, UInt32 unIP, UInt16 unPort);
		public void AddServerNetAddress(UInt32 unIP, UInt16 unPort) { var call = this.GetFunction<NativeAddServerNetAddress>(this.Functions.AddServerNetAddress); call(this.ObjectAddress, unIP, unPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetEmail(IntPtr thisobj, string pchEmail);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetEmail(string pchEmail) { var call = this.GetFunction<NativeSetEmail>(this.Functions.SetEmail); return call(this.ObjectAddress, pchEmail); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeObsolete_GetSteamGameConnectToken(IntPtr thisobj, IntPtr pBlob, Int32 cbMaxBlob);
		public Int32 Obsolete_GetSteamGameConnectToken(IntPtr pBlob, Int32 cbMaxBlob) { var call = this.GetFunction<NativeObsolete_GetSteamGameConnectToken>(this.Functions.Obsolete_GetSteamGameConnectToken); return call(this.ObjectAddress, pBlob, cbMaxBlob); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetRegistryString>(this.Functions.SetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue) { var call = this.GetFunction<NativeGetRegistryString>(this.Functions.GetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, pchKey, pchValue, cbValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue) { var call = this.GetFunction<NativeSetRegistryInt>(this.Functions.SetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, pchKey, iValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue) { var call = this.GetFunction<NativeGetRegistryInt>(this.Functions.GetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, pchKey, ref piValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, Int32 nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, Int32 nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, nGameAppID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSelfAsPrimaryChatDestination(IntPtr thisobj);
		public void SetSelfAsPrimaryChatDestination() { var call = this.GetFunction<NativeSetSelfAsPrimaryChatDestination>(this.Functions.SetSelfAsPrimaryChatDestination); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPrimaryChatDestination(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPrimaryChatDestination() { var call = this.GetFunction<NativeIsPrimaryChatDestination>(this.Functions.IsPrimaryChatDestination); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestLegacyCDKey(IntPtr thisobj, UInt32 i);
		public Int32 RequestLegacyCDKey(UInt32 i) { var call = this.GetFunction<NativeRequestLegacyCDKey>(this.Functions.RequestLegacyCDKey); return call(this.ObjectAddress, i); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser006VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr SetRegistryString;
		public IntPtr GetRegistryString;
		public IntPtr SetRegistryInt;
		public IntPtr GetRegistryInt;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
	}
	
	public class ISteamUser006 : NativeWrapper<ISteamUser006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt64 steamID);
		public void LogOn(UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetRegistryString>(this.Functions.SetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue) { var call = this.GetFunction<NativeGetRegistryString>(this.Functions.GetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, pchKey, pchValue, cbValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue) { var call = this.GetFunction<NativeSetRegistryInt>(this.Functions.SetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, pchKey, iValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue) { var call = this.GetFunction<NativeGetRegistryInt>(this.Functions.GetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, pchKey, ref piValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, CGameID nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, CGameID nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, nGameAppID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, CGameID gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(CGameID gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, arg3); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser007VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr SetRegistryString;
		public IntPtr GetRegistryString;
		public IntPtr SetRegistryInt;
		public IntPtr GetRegistryInt;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr RefreshSteam2Login;
	}
	
	public class ISteamUser007 : NativeWrapper<ISteamUser007VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt64 steamID);
		public void LogOn(UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetRegistryString>(this.Functions.SetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, pchKey, pchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue) { var call = this.GetFunction<NativeGetRegistryString>(this.Functions.GetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, pchKey, pchValue, cbValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue) { var call = this.GetFunction<NativeSetRegistryInt>(this.Functions.SetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, pchKey, iValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue) { var call = this.GetFunction<NativeGetRegistryInt>(this.Functions.GetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, pchKey, ref piValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, CGameID nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, IntPtr pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey);
		public Int32 InitiateGameConnection(IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, CGameID nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, IntPtr pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, nGameAppID, unIPServer, usPortServer, bSecure, pvSteam2GetEncryptionKey, cbSteam2GetEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, CGameID gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(CGameID gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshSteam2Login(IntPtr thisobj);
		public void RefreshSteam2Login() { var call = this.GetFunction<NativeRefreshSteam2Login>(this.Functions.RefreshSteam2Login); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser008VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr RefreshSteam2Login;
	}
	
	public class ISteamUser008 : NativeWrapper<ISteamUser008VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, CGameID gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, IntPtr pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey);
		public Int32 InitiateGameConnection(IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, CGameID gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, IntPtr pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, gameID, unIPServer, usPortServer, bSecure, pvSteam2GetEncryptionKey, cbSteam2GetEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, CGameID gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(CGameID gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshSteam2Login(IntPtr thisobj);
		public void RefreshSteam2Login() { var call = this.GetFunction<NativeRefreshSteam2Login>(this.Functions.RefreshSteam2Login); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser009VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr RefreshSteam2Login;
	}
	
	public class ISteamUser009 : NativeWrapper<ISteamUser009VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, CGameID gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, CGameID gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, gameID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, CGameID gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(CGameID gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshSteam2Login(IntPtr thisobj);
		public void RefreshSteam2Login() { var call = this.GetFunction<NativeRefreshSteam2Login>(this.Functions.RefreshSteam2Login); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser010VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
	}
	
	public class ISteamUser010 : NativeWrapper<ISteamUser010VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(IntPtr pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, CGameID gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(CGameID gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, arg3); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser011VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr GetUserDataFolder;
		public IntPtr StartVoiceRecording;
		public IntPtr StopVoiceRecording;
		public IntPtr GetCompressedVoice;
		public IntPtr DecompressVoice;
	}
	
	public class ISteamUser011 : NativeWrapper<ISteamUser011VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(IntPtr pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pAuthBlob, cbMaxAuthBlob, steamIDGameServer, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, CGameID gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(CGameID gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserDataFolder(IntPtr thisobj, string pchBuffer, Int32 cubBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserDataFolder(string pchBuffer, Int32 cubBuffer) { var call = this.GetFunction<NativeGetUserDataFolder>(this.Functions.GetUserDataFolder); return call(this.ObjectAddress, pchBuffer, cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartVoiceRecording(IntPtr thisobj);
		public void StartVoiceRecording() { var call = this.GetFunction<NativeStartVoiceRecording>(this.Functions.StartVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStopVoiceRecording(IntPtr thisobj);
		public void StopVoiceRecording() { var call = this.GetFunction<NativeStopVoiceRecording>(this.Functions.StopVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetCompressedVoice(IntPtr thisobj, IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult GetCompressedVoice(IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeGetCompressedVoice>(this.Functions.GetCompressedVoice); return call(this.ObjectAddress, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeDecompressVoice(IntPtr thisobj, IntPtr pCompressed, UInt32 cbCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult DecompressVoice(IntPtr pCompressed, UInt32 cbCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeDecompressVoice>(this.Functions.DecompressVoice); return call(this.ObjectAddress, pCompressed, cbCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser013VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr GetUserDataFolder;
		public IntPtr StartVoiceRecording;
		public IntPtr StopVoiceRecording;
		public IntPtr GetAvailableVoice;
		public IntPtr GetVoice;
		public IntPtr DecompressVoice;
		public IntPtr GetAuthSessionTicket;
		public IntPtr BeginAuthSession;
		public IntPtr EndAuthSession;
		public IntPtr CancelAuthTicket;
		public IntPtr UserHasLicenseForApp;
	}
	
	public class ISteamUser013 : NativeWrapper<ISteamUser013VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, IntPtr pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(IntPtr pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pAuthBlob, cbMaxAuthBlob, steamIDGameServer, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, CGameID gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(CGameID gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserDataFolder(IntPtr thisobj, string pchBuffer, Int32 cubBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserDataFolder(string pchBuffer, Int32 cubBuffer) { var call = this.GetFunction<NativeGetUserDataFolder>(this.Functions.GetUserDataFolder); return call(this.ObjectAddress, pchBuffer, cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartVoiceRecording(IntPtr thisobj);
		public void StartVoiceRecording() { var call = this.GetFunction<NativeStartVoiceRecording>(this.Functions.StartVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStopVoiceRecording(IntPtr thisobj);
		public void StopVoiceRecording() { var call = this.GetFunction<NativeStopVoiceRecording>(this.Functions.StopVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAvailableVoice(IntPtr thisobj, ref UInt32 arg1, ref UInt32 arg2);
		public Int32 GetAvailableVoice(ref UInt32 arg1, ref UInt32 arg2) { var call = this.GetFunction<NativeGetAvailableVoice>(this.Functions.GetAvailableVoice); return call(this.ObjectAddress, ref arg1, ref arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetVoice(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool arg1, IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool arg5, IntPtr arg6, UInt32 arg7, ref UInt32 arg8);
		public Int32 GetVoice([MarshalAs(UnmanagedType.I1)] bool arg1, IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool arg5, IntPtr arg6, UInt32 arg7, ref UInt32 arg8) { var call = this.GetFunction<NativeGetVoice>(this.Functions.GetVoice); return call(this.ObjectAddress, arg1, pDestBuffer, cbDestBufferSize, ref nBytesWritten, arg5, arg6, arg7, ref arg8); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeDecompressVoice(IntPtr thisobj, IntPtr pCompressed, UInt32 cbCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult DecompressVoice(IntPtr pCompressed, UInt32 cbCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeDecompressVoice>(this.Functions.DecompressVoice); return call(this.ObjectAddress, pCompressed, cbCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAuthSessionTicket(IntPtr thisobj, IntPtr pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		public UInt32 GetAuthSessionTicket(IntPtr pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetAuthSessionTicket>(this.Functions.GetAuthSessionTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EBeginAuthSessionResult NativeBeginAuthSession(IntPtr thisobj, IntPtr pAuthTicket, Int32 cbAuthTicket, UInt64 steamID);
		public EBeginAuthSessionResult BeginAuthSession(IntPtr pAuthTicket, Int32 cbAuthTicket, UInt64 steamID) { var call = this.GetFunction<NativeBeginAuthSession>(this.Functions.BeginAuthSession); return call(this.ObjectAddress, pAuthTicket, cbAuthTicket, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndAuthSession(IntPtr thisobj, UInt64 steamID);
		public void EndAuthSession(UInt64 steamID) { var call = this.GetFunction<NativeEndAuthSession>(this.Functions.EndAuthSession); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelAuthTicket(IntPtr thisobj, UInt32 hAuthTicket);
		public void CancelAuthTicket(UInt32 hAuthTicket) { var call = this.GetFunction<NativeCancelAuthTicket>(this.Functions.CancelAuthTicket); call(this.ObjectAddress, hAuthTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUserHasLicenseForApp(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public UInt32 UserHasLicenseForApp(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeUserHasLicenseForApp>(this.Functions.UserHasLicenseForApp); return call(this.ObjectAddress, steamID, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamRemoteStorage001VTable
	{
		public IntPtr FileWrite;
		public IntPtr GetFileSize;
		public IntPtr FileRead;
		public IntPtr FileExists;
		public IntPtr FileDelete;
		public IntPtr GetFileCount;
		public IntPtr GetFileNameAndSize;
		public IntPtr GetQuota;
	}
	
	public class ISteamRemoteStorage001 : NativeWrapper<ISteamRemoteStorage001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileWrite(IntPtr thisobj, string filename, IntPtr data, Int32 arg3);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileWrite(string filename, IntPtr data, Int32 arg3) { var call = this.GetFunction<NativeFileWrite>(this.Functions.FileWrite); return call(this.ObjectAddress, filename, data, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFileSize(IntPtr thisobj, string filename);
		public UInt32 GetFileSize(string filename) { var call = this.GetFunction<NativeGetFileSize>(this.Functions.GetFileSize); return call(this.ObjectAddress, filename); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileRead(IntPtr thisobj, string filename, IntPtr buffer, Int32 size);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileRead(string filename, IntPtr buffer, Int32 size) { var call = this.GetFunction<NativeFileRead>(this.Functions.FileRead); return call(this.ObjectAddress, filename, buffer, size); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileExists(IntPtr thisobj, string filename);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileExists(string filename) { var call = this.GetFunction<NativeFileExists>(this.Functions.FileExists); return call(this.ObjectAddress, filename); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileDelete(IntPtr thisobj, string filename);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileDelete(string filename) { var call = this.GetFunction<NativeFileDelete>(this.Functions.FileDelete); return call(this.ObjectAddress, filename); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFileCount(IntPtr thisobj);
		public UInt32 GetFileCount() { var call = this.GetFunction<NativeGetFileCount>(this.Functions.GetFileCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFileNameAndSize(IntPtr thisobj, Int32 index, ref Int32 size);
		public string GetFileNameAndSize(Int32 index, ref Int32 size) { var call = this.GetFunction<NativeGetFileNameAndSize>(this.Functions.GetFileNameAndSize); return call(this.ObjectAddress, index, ref size); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetQuota(IntPtr thisobj, ref Int32 current, ref Int32 maximum);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetQuota(ref Int32 current, ref Int32 maximum) { var call = this.GetFunction<NativeGetQuota>(this.Functions.GetQuota); return call(this.ObjectAddress, ref current, ref maximum); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamRemoteStorage002VTable
	{
		public IntPtr FileWrite;
		public IntPtr GetFileSize;
		public IntPtr FileRead;
		public IntPtr FileExists;
		public IntPtr GetFileCount;
		public IntPtr GetFileNameAndSize;
		public IntPtr GetQuota;
	}
	
	public class ISteamRemoteStorage002 : NativeWrapper<ISteamRemoteStorage002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileWrite(IntPtr thisobj, string pchFile, IntPtr pvData, Int32 cubData);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileWrite(string pchFile, IntPtr pvData, Int32 cubData) { var call = this.GetFunction<NativeFileWrite>(this.Functions.FileWrite); return call(this.ObjectAddress, pchFile, pvData, cubData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileSize(IntPtr thisobj, string pchFile);
		public Int32 GetFileSize(string pchFile) { var call = this.GetFunction<NativeGetFileSize>(this.Functions.GetFileSize); return call(this.ObjectAddress, pchFile); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFileRead(IntPtr thisobj, string pchFile, IntPtr pvData, Int32 cubDataToRead);
		public Int32 FileRead(string pchFile, IntPtr pvData, Int32 cubDataToRead) { var call = this.GetFunction<NativeFileRead>(this.Functions.FileRead); return call(this.ObjectAddress, pchFile, pvData, cubDataToRead); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileExists(IntPtr thisobj, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileExists(string pchFile) { var call = this.GetFunction<NativeFileExists>(this.Functions.FileExists); return call(this.ObjectAddress, pchFile); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileCount(IntPtr thisobj);
		public Int32 GetFileCount() { var call = this.GetFunction<NativeGetFileCount>(this.Functions.GetFileCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFileNameAndSize(IntPtr thisobj, Int32 iFile, ref Int32 pnFileSizeInBytes);
		public string GetFileNameAndSize(Int32 iFile, ref Int32 pnFileSizeInBytes) { var call = this.GetFunction<NativeGetFileNameAndSize>(this.Functions.GetFileNameAndSize); return call(this.ObjectAddress, iFile, ref pnFileSizeInBytes); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetQuota(IntPtr thisobj, ref Int32 pnTotalBytes, ref Int32 puAvailableBytes);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetQuota(ref Int32 pnTotalBytes, ref Int32 puAvailableBytes) { var call = this.GetFunction<NativeGetQuota>(this.Functions.GetQuota); return call(this.ObjectAddress, ref pnTotalBytes, ref puAvailableBytes); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingServers001VTable
	{
		public IntPtr RequestInternetServerList;
		public IntPtr RequestLANServerList;
		public IntPtr RequestFriendsServerList;
		public IntPtr RequestFavoritesServerList;
		public IntPtr RequestHistoryServerList;
		public IntPtr RequestSpectatorServerList;
		public IntPtr GetServerDetails;
		public IntPtr CancelQuery;
		public IntPtr RefreshQuery;
		public IntPtr IsRefreshing;
		public IntPtr GetServerCount;
		public IntPtr RefreshServer;
		public IntPtr PingServer;
		public IntPtr PlayerDetails;
		public IntPtr ServerRules;
		public IntPtr CancelServerQuery;
	}
	
	public class ISteamMatchmakingServers001 : NativeWrapper<ISteamMatchmakingServers001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestInternetServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public void RequestInternetServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestInternetServerList>(this.Functions.RequestInternetServerList); call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestLANServerList(IntPtr thisobj, UInt32 iApp, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public void RequestLANServerList(UInt32 iApp, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestLANServerList>(this.Functions.RequestLANServerList); call(this.ObjectAddress, iApp, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestFriendsServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public void RequestFriendsServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestFriendsServerList>(this.Functions.RequestFriendsServerList); call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestFavoritesServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public void RequestFavoritesServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestFavoritesServerList>(this.Functions.RequestFavoritesServerList); call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestHistoryServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public void RequestHistoryServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestHistoryServerList>(this.Functions.RequestHistoryServerList); call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestSpectatorServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse);
		public void RequestSpectatorServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse pRequestServersResponse) { var call = this.GetFunction<NativeRequestSpectatorServerList>(this.Functions.RequestSpectatorServerList); call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate gameserveritem_t NativeGetServerDetails(IntPtr thisobj, EMatchMakingType eType, Int32 iServer);
		public gameserveritem_t GetServerDetails(EMatchMakingType eType, Int32 iServer) { var call = this.GetFunction<NativeGetServerDetails>(this.Functions.GetServerDetails); return call(this.ObjectAddress, eType, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelQuery(IntPtr thisobj, EMatchMakingType eType);
		public void CancelQuery(EMatchMakingType eType) { var call = this.GetFunction<NativeCancelQuery>(this.Functions.CancelQuery); call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshQuery(IntPtr thisobj, EMatchMakingType eType);
		public void RefreshQuery(EMatchMakingType eType) { var call = this.GetFunction<NativeRefreshQuery>(this.Functions.RefreshQuery); call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsRefreshing(IntPtr thisobj, EMatchMakingType eType);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsRefreshing(EMatchMakingType eType) { var call = this.GetFunction<NativeIsRefreshing>(this.Functions.IsRefreshing); return call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetServerCount(IntPtr thisobj, EMatchMakingType eType);
		public Int32 GetServerCount(EMatchMakingType eType) { var call = this.GetFunction<NativeGetServerCount>(this.Functions.GetServerCount); return call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshServer(IntPtr thisobj, EMatchMakingType eType, Int32 iServer);
		public void RefreshServer(EMatchMakingType eType, Int32 iServer) { var call = this.GetFunction<NativeRefreshServer>(this.Functions.RefreshServer); call(this.ObjectAddress, eType, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePingServer(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse);
		public Int32 PingServer(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse) { var call = this.GetFunction<NativePingServer>(this.Functions.PingServer); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePlayerDetails(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse);
		public Int32 PlayerDetails(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse) { var call = this.GetFunction<NativePlayerDetails>(this.Functions.PlayerDetails); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeServerRules(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse);
		public Int32 ServerRules(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse) { var call = this.GetFunction<NativeServerRules>(this.Functions.ServerRules); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelServerQuery(IntPtr thisobj, Int32 hServerQuery);
		public void CancelServerQuery(Int32 hServerQuery) { var call = this.GetFunction<NativeCancelServerQuery>(this.Functions.CancelServerQuery); call(this.ObjectAddress, hServerQuery); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer005VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr GetGameplayStats;
	}
	
	public class ISteamGameServer005 : NativeWrapper<ISteamGameServer005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateUnauthenticatedUserConnection(IntPtr thisobj);
		public UInt64 CreateUnauthenticatedUserConnection() { var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, pchPlayerName, uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, pchGameDir, pchVersion, bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pSpectatorServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, pchGameType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, pchAchievementName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer006VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr GetGameplayStats;
	}
	
	public class ISteamGameServer006 : NativeWrapper<ISteamGameServer006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateUnauthenticatedUserConnection(IntPtr thisobj);
		public UInt64 CreateUnauthenticatedUserConnection() { var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, pchPlayerName, uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, pchGameDir, pchVersion, bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pSpectatorServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, pchGameType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, pchAchievementName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer007VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr GetGameplayStats;
		public IntPtr RequestUserGroupStatus;
	}
	
	public class ISteamGameServer007 : NativeWrapper<ISteamGameServer007VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateUnauthenticatedUserConnection(IntPtr thisobj);
		public UInt64 CreateUnauthenticatedUserConnection() { var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, pchPlayerName, uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, pchGameDir, pchVersion, bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pSpectatorServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, pchGameType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, pchAchievementName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserGroupStatus(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDGroup);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserGroupStatus(UInt64 steamIDUser, UInt64 steamIDGroup) { var call = this.GetFunction<NativeRequestUserGroupStatus>(this.Functions.RequestUserGroupStatus); return call(this.ObjectAddress, steamIDUser, steamIDGroup); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer008VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr GetGameplayStats;
		public IntPtr RequestUserGroupStatus;
		public IntPtr GetPublicIP;
	}
	
	public class ISteamGameServer008 : NativeWrapper<ISteamGameServer008VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetSteamID(IntPtr thisobj);
		public UInt64 GetSteamID() { var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateUnauthenticatedUserConnection(IntPtr thisobj);
		public UInt64 CreateUnauthenticatedUserConnection() { var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, pchPlayerName, uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, pchGameDir, pchVersion, bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, pchServerName, pSpectatorServerName, pchMapName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, pchGameType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, pchAchievementName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserGroupStatus(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDGroup);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserGroupStatus(UInt64 steamIDUser, UInt64 steamIDGroup) { var call = this.GetFunction<NativeRequestUserGroupStatus>(this.Functions.RequestUserGroupStatus); return call(this.ObjectAddress, steamIDUser, steamIDGroup); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetPublicIP(IntPtr thisobj);
		public UInt32 GetPublicIP() { var call = this.GetFunction<NativeGetPublicIP>(this.Functions.GetPublicIP); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamNetworking003VTable
	{
		public IntPtr SendP2PPacket;
		public IntPtr IsP2PPacketAvailable;
		public IntPtr ReadP2PPacket;
		public IntPtr AcceptP2PSessionWithUser;
		public IntPtr CloseP2PSessionWithUser;
		public IntPtr GetP2PSessionState;
		public IntPtr CreateListenSocket;
		public IntPtr CreateP2PConnectionSocket;
		public IntPtr CreateConnectionSocket;
		public IntPtr DestroySocket;
		public IntPtr DestroyListenSocket;
		public IntPtr SendDataOnSocket;
		public IntPtr IsDataAvailableOnSocket;
		public IntPtr RetrieveDataFromSocket;
		public IntPtr IsDataAvailable;
		public IntPtr RetrieveData;
		public IntPtr GetSocketInfo;
		public IntPtr GetListenSocketInfo;
		public IntPtr GetSocketConnectionType;
		public IntPtr GetMaxPacketSize;
	}
	
	public class ISteamNetworking003 : NativeWrapper<ISteamNetworking003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSendP2PPacket(IntPtr thisobj, UInt64 arg1, IntPtr arg2, UInt32 arg3, UInt32 arg4);
		public Int32 SendP2PPacket(UInt64 arg1, IntPtr arg2, UInt32 arg3, UInt32 arg4) { var call = this.GetFunction<NativeSendP2PPacket>(this.Functions.SendP2PPacket); return call(this.ObjectAddress, arg1, arg2, arg3, arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsP2PPacketAvailable(IntPtr thisobj, ref UInt32 arg1);
		public Int32 IsP2PPacketAvailable(ref UInt32 arg1) { var call = this.GetFunction<NativeIsP2PPacketAvailable>(this.Functions.IsP2PPacketAvailable); return call(this.ObjectAddress, ref arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeReadP2PPacket(IntPtr thisobj, IntPtr arg1, UInt32 arg2, ref UInt32 arg3, ref UInt64 arg4);
		public Int32 ReadP2PPacket(IntPtr arg1, UInt32 arg2, ref UInt32 arg3, ref UInt64 arg4) { var call = this.GetFunction<NativeReadP2PPacket>(this.Functions.ReadP2PPacket); return call(this.ObjectAddress, arg1, arg2, ref arg3, ref arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAcceptP2PSessionWithUser(IntPtr thisobj, UInt64 arg1);
		public Int32 AcceptP2PSessionWithUser(UInt64 arg1) { var call = this.GetFunction<NativeAcceptP2PSessionWithUser>(this.Functions.AcceptP2PSessionWithUser); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCloseP2PSessionWithUser(IntPtr thisobj, UInt64 arg1);
		public Int32 CloseP2PSessionWithUser(UInt64 arg1) { var call = this.GetFunction<NativeCloseP2PSessionWithUser>(this.Functions.CloseP2PSessionWithUser); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetP2PSessionState(IntPtr thisobj, UInt64 arg1, ref UInt32 arg2);
		public Int32 GetP2PSessionState(UInt64 arg1, ref UInt32 arg2) { var call = this.GetFunction<NativeGetP2PSessionState>(this.Functions.GetP2PSessionState); return call(this.ObjectAddress, arg1, ref arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateListenSocket(IntPtr thisobj, Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateListenSocket(Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateListenSocket>(this.Functions.CreateListenSocket); return call(this.ObjectAddress, nVirtualP2PPort, nIP, nPort, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateP2PConnectionSocket(IntPtr thisobj, UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateP2PConnectionSocket(UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateP2PConnectionSocket>(this.Functions.CreateP2PConnectionSocket); return call(this.ObjectAddress, steamIDTarget, nVirtualPort, nTimeoutSec, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateConnectionSocket(IntPtr thisobj, UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec);
		public UInt32 CreateConnectionSocket(UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateConnectionSocket>(this.Functions.CreateConnectionSocket); return call(this.ObjectAddress, nIP, nPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroySocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroySocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroySocket>(this.Functions.DestroySocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroyListenSocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroyListenSocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroyListenSocket>(this.Functions.DestroyListenSocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendDataOnSocket(IntPtr thisobj, UInt32 hSocket, IntPtr pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendDataOnSocket(UInt32 hSocket, IntPtr pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable) { var call = this.GetFunction<NativeSendDataOnSocket>(this.Functions.SendDataOnSocket); return call(this.ObjectAddress, hSocket, pubData, cubData, bReliable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailableOnSocket(IntPtr thisobj, UInt32 hSocket, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailableOnSocket(UInt32 hSocket, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsDataAvailableOnSocket>(this.Functions.IsDataAvailableOnSocket); return call(this.ObjectAddress, hSocket, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveDataFromSocket(IntPtr thisobj, UInt32 hSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveDataFromSocket(UInt32 hSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveDataFromSocket>(this.Functions.RetrieveDataFromSocket); return call(this.ObjectAddress, hSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailable(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailable(UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeIsDataAvailable>(this.Functions.IsDataAvailable); return call(this.ObjectAddress, hListenSocket, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveData(IntPtr thisobj, UInt32 hListenSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveData(UInt32 hListenSocket, IntPtr pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeRetrieveData>(this.Functions.RetrieveData); return call(this.ObjectAddress, hListenSocket, pubDest, cubDest, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSocketInfo(IntPtr thisobj, UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSocketInfo(UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote) { var call = this.GetFunction<NativeGetSocketInfo>(this.Functions.GetSocketInfo); return call(this.ObjectAddress, hSocket, ref pSteamIDRemote, ref peSocketStatus, ref punIPRemote, ref punPortRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetListenSocketInfo(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetListenSocketInfo(UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort) { var call = this.GetFunction<NativeGetListenSocketInfo>(this.Functions.GetListenSocketInfo); return call(this.ObjectAddress, hListenSocket, ref pnIP, ref pnPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESNetSocketConnectionType NativeGetSocketConnectionType(IntPtr thisobj, UInt32 hSocket);
		public ESNetSocketConnectionType GetSocketConnectionType(UInt32 hSocket) { var call = this.GetFunction<NativeGetSocketConnectionType>(this.Functions.GetSocketConnectionType); return call(this.ObjectAddress, hSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMaxPacketSize(IntPtr thisobj, UInt32 hSocket);
		public Int32 GetMaxPacketSize(UInt32 hSocket) { var call = this.GetFunction<NativeGetMaxPacketSize>(this.Functions.GetMaxPacketSize); return call(this.ObjectAddress, hSocket); }

	}
	
}
