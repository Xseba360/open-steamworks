// This file is automatically generated.
using System;
using System.Text;
using System.Runtime.InteropServices;

namespace Steam4NET
{

	public enum EAvatarSize : int
	{
		k_EAvatarSize32x32 = 0,
		k_EAvatarSize64x64 = 1,
	};
	
	public enum ECallState : int
	{
		k_ECallStateUnknown = 0,
		k_ECallStateWaiting = 1,
		k_ECallStateDialing = 2,
		k_ECallStateRinging = 3,
		k_ECallStateInCall = 4,
	};
	
	public enum EChatEntryType : int
	{
		k_EChatEntryTypeInvalid = 0,
		k_EChatEntryTypeChatMsg = 1,
		k_EChatEntryTypeTyping = 2,
		k_EChatEntryTypeInviteGame = 3,
		k_EChatEntryTypeEmote = 4,
		k_EChatEntryTypeLobbyGameStart = 5,
		k_EChatEntryTypeLeftConversation = 6,
	};
	
	public enum ESystemIMType : int
	{
		k_ESystemIMRawText = 0,
		k_ESystemIMInvalidCard = 1,
		k_ESystemIMRecurringPurchaseFailed = 2,
		k_ESystemIMCardWillExpire = 3,
		k_ESystemIMSubscriptionExpired = 4,
		k_ESystemIMGuestPassReceived = 5,
		k_ESystemIMGuestPassGranted = 6,
		k_ESystemIMGiftRevoked = 7,
		k_ESystemIMTypeMax = 8,
	};
	
	public enum EFriendRelationship : int
	{
		k_EFriendRelationshipNone = 0,
		k_EFriendRelationshipBlocked = 1,
		k_EFriendRelationshipRequestRecipient = 2,
		k_EFriendRelationshipFriend = 3,
		k_EFriendRelationshipRequestInitiator = 4,
		k_EFriendRelationshipIgnored = 5,
		k_EFriendRelationshipIgnoredFriend = 6,
	};
	
	public enum EChatRoomType : int
	{
		k_EChatRoomTypeFriend = 1,
		k_EChatRoomTypeMUC = 2,
		k_EChatRoomTypeLobby = 3,
	};
	
	public enum EChatRoomVoiceStatus : int
	{
		eChatRoomVoiceStatusBad = 0,
		eChatRoomVoiceStatusUnknownRoom = 1,
		eChatRoomVoiceStatusUnknownUser = 2,
		eChatRoomVoiceStatusNotSpeaking = 3,
		eChatRoomVoiceStatusConnectedSpeaking = 4,
		eChatRoomVoiceStatusConnectedSpeakingData = 5,
		eChatRoomVoiceStatusNotConnectedSpeaking = 6,
		eChatRoomVoiceStatusConnecting = 7,
		eChatRoomVoiceStatusUnreachable = 8,
		eChatRoomVoiceStatusDisconnected = 9,
		eChatRoomVoiceStatusCount = 10,
	};
	
	public enum EClanRank : int
	{
		k_EClanRankNone = 0,
		k_EClanRankOwner = 1,
		k_EClanRankOfficer = 2,
		k_EClanRankMember = 3,
	};
	
	public enum EClanRelationship : int
	{
		eClanRelationshipNone = 0,
		eClanRelationshipBlocked = 1,
		eClanRelationshipInvited = 2,
		eClanRelationshipMember = 3,
		eClanRelationshipKicked = 4,
	};
	
	public enum EFriendFlags : int
	{
		k_EFriendFlagNone = 0,
		k_EFriendFlagBlocked = 1,
		k_EFriendFlagFriendshipRequested = 2,
		k_EFriendFlagImmediate = 4,
		k_EFriendFlagClanMember = 8,
		k_EFriendFlagOnGameServer = 16,
		k_EFriendFlagRequestingFriendship = 128,
		k_EFriendFlagRequestingInfo = 256,
		k_EFriendFlagIgnored = 512,
		k_EFriendFlagIgnoredFriend = 1024,
		k_EFriendFlagAll = 65535,
	};
	
	public enum EFriendMsgType : int
	{
		k_EFriendMsgTypeChat = 1,
		k_EFriendMsgTypeTyping = 2,
		k_EFriendMsgTypeInvite = 3,
		k_EFriendMsgTypeChatSent = 4,
	};
	
	public enum EPersonaState : int
	{
		k_EPersonaStateOffline = 0,
		k_EPersonaStateOnline = 1,
		k_EPersonaStateBusy = 2,
		k_EPersonaStateAway = 3,
		k_EPersonaStateSnooze = 4,
		k_EPersonaStateMax = 5,
	};
	
	public enum EPersonaChange : int
	{
		k_EPersonaChangeName = 1,
		k_EPersonaChangeStatus = 2,
		k_EPersonaChangeComeOnline = 4,
		k_EPersonaChangeGoneOffline = 8,
		k_EPersonaChangeGamePlayed = 16,
		k_EPersonaChangeGameServer = 32,
		k_EPersonaChangeAvatar = 64,
		k_EPersonaChangeJoinedSource = 128,
		k_EPersonaChangeLeftSource = 256,
		k_EPersonaChangeRelationshipChanged = 512,
		k_EPersonaChangeNameFirstSet = 1024,
	};
	
	public enum EChatPermission : int
	{
		k_EChatPermissionClose = 1,
		k_EChatPermissionInvite = 2,
		k_EChatPermissionTalk = 8,
		k_EChatPermissionKick = 16,
		k_EChatPermissionMute = 32,
		k_EChatPermissionSetMetadata = 64,
		k_EChatPermissionChangePermissions = 128,
		k_EChatPermissionBan = 256,
		k_EChatPermissionChangeAccess = 512,
		k_EChatPermissionEveryoneNotInClanDefault = 8,
		k_EChatPermissionEveryoneDefault = 10,
		k_EChatPermissionMemberDefault = 282,
		k_EChatPermissionOfficerDefault = 282,
		k_EChatPermissionOwnerDefault = 891,
		k_EChatPermissionMask = 1019,
	};
	
	public enum EChatRoomEnterResponse : int
	{
		k_EChatRoomEnterResponseSuccess = 1,
		k_EChatRoomEnterResponseDoesntExist = 2,
		k_EChatRoomEnterResponseNotAllowed = 3,
		k_EChatRoomEnterResponseFull = 4,
		k_EChatRoomEnterResponseError = 5,
		k_EChatRoomEnterResponseBanned = 6,
	};
	
	public enum EChatAction : int
	{
		k_EChatActionInviteChat = 1,
		k_EChatActionKick = 2,
		k_EChatActionBan = 3,
		k_EChatActionUnBan = 4,
		k_EChatActionStartVoiceSpeak = 5,
		k_EChatActionEndVoiceSpeak = 6,
		k_EChatActionLockChat = 7,
		k_EChatActionUnlockChat = 8,
		k_EChatActionCloseChat = 9,
		k_EChatActionSetJoinable = 10,
		k_EChatActionSetUnjoinable = 11,
		k_EChatActionSetOwner = 12,
		k_EChatActionSetInvisibleToFriends = 13,
		k_EChatActionSetVisibleToFriends = 14,
		k_EChatActionSetModerated = 15,
		k_EChatActionSetUnmoderated = 16,
	};
	
	public enum EChatActionResult : int
	{
		k_EChatActionResultSuccess = 1,
		k_EChatActionResultError = 2,
		k_EChatActionResultNotPermitted = 3,
		k_EChatActionResultNotAllowedOnClanMember = 4,
		k_EChatActionResultNotAllowedOnBannedUser = 5,
		k_EChatActionResultNotAllowedOnChatOwner = 6,
		k_EChatActionResultNotAllowedOnSelf = 7,
		k_EChatActionResultChatDoesntExist = 8,
		k_EChatActionResultChatFull = 9,
		k_EChatActionResultVoiceSlotsFull = 10,
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct FriendAdded_t
	{
		EResult m_eResult;
		UInt64 m_ulSteamID;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct UserRequestingFriendship_t
	{
		UInt64 m_ulSteamID;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct PersonaStateChangeOld_t
	{
		UInt64 m_ulSteamID;
		Int32 m_ePersonaStatePrevious;
		Int32 m_nGameIDPrevious;
		UInt32 m_unGameServerIPPrevious;
		UInt16 m_usGameServerPortPrevious;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct PersonaStateChange_t
	{
		UInt64 m_ulSteamID;
		EPersonaChange m_nChangeFlags;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct SystemIM_t
	{
		ESystemIMType m_ESystemIMType;
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 4096)]
		string m_rgchMsgBody;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct FriendChatMsg_t
	{
		UInt64 m_ulReceiver;
		UInt64 m_ulSender;
		UInt16 m_eChatEntryType;
		Byte m_bLimitedAccount;
		UInt32 m_iChatID;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct FriendInvited_t
	{
		EResult m_eResult;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomInvite_t
	{
		UInt64 m_ulSteamIDChat;
		UInt64 m_ulSteamIDPatron;
		UInt64 m_ulSteamIDFriendChat;
		EChatRoomType m_EChatRoomType;
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
		string m_rgchChatRoomName;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomEnter_t
	{
		UInt64 m_ulSteamIDChat;
		EChatRoomType m_EChatRoomType;
		UInt64 m_ulSteamIDOwner;
		UInt64 m_ulSteamIDClan;
		UInt64 m_ulSteamIDFriendChat;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bLocked;
		Byte m_rgfChatPermissions;
		EChatRoomEnterResponse m_EChatRoomEnterResponse;
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
		string m_rgchChatRoomName;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatMemberStateChange_t
	{
		UInt64 m_ulSteamIDChat;
		UInt64 m_ulSteamIDUserChanged;
		EChatMemberStateChange m_rgfChatMemberStateChange;
		UInt64 m_ulSteamIDMakingChange;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomMsg_t
	{
		UInt64 m_ulSteamIDChat;
		UInt64 m_ulSteamIDUser;
		Byte m_eChatEntryType;
		UInt32 m_iChatID;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomDlgClose_t
	{
		UInt64 m_SteamID;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomClosing_t
	{
		UInt64 m_ulSteamIDChat;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomKicking_t
	{
		UInt64 m_ulSteamIDChat;
		UInt64 m_ulSteamIDAdmin;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomBanning_t
	{
		UInt64 m_ulSteamIDChat;
		UInt64 m_ulSteamIDAdmin;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomCreate_t
	{
		EResult m_eResult;
		UInt64 m_ulSteamIDChat;
		UInt64 m_ulSteamIDFriendChat;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomMetadataUpdate_t
	{
		UInt64 m_ulSteamIDChat;
		UInt64 m_ulSteamIDMember;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct OpenChatDialog_t
	{
		UInt64 m_ulSteamID;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomActionResult_t
	{
		UInt64 m_ulSteamIDChat;
		UInt64 m_ulSteamIDUserActedOn;
		EChatAction m_EChatAction;
		EChatActionResult m_EChatActionResult;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomDlgSerialized_t
	{
		UInt64 m_ulSteamID;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ClanInfoChanged_t
	{
		UInt64 m_GroupID;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bNameChanged;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bAvatarChanged;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bAccountInfoChanged;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatMemberInfoChanged_t
	{
		UInt64 m_ulSteamIDChat;
		UInt64 m_ulSteamIDUser;
		UInt32 m_rgfChatMemberPermissions;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomInfoChanged_t
	{
		UInt64 m_ulSteamIDChat;
		UInt32 m_rgfChatRoomDetails;
		UInt64 m_ulSteamIDMakingChange;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomSpeakChanged_t
	{
		UInt64 m_ulSteamIDChat;
		UInt64 m_ulSteamIDUser;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bSpeaking;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct NotifyIncomingCall_t
	{
		Int32 m_Handle;
		UInt64 m_ulSteamID;
		UInt64 m_ulSteamIDChat;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bIncoming;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct NotifyHangup_t
	{
		Int32 m_Handle;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct NotifyRequestResume_t
	{
		Int32 m_Handle;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct NotifyChatRoomVoiceStateChanged_t
	{
		UInt64 m_steamChatRoom;
		UInt64 m_steamUser;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct ChatRoomDlgUIChange_t
	{
		UInt64 m_SteamIDChat;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bShowAvatars;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bBeepOnNewMsg;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bShowSteamIDs;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bShowTimestampOnNewMsg;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct GameOverlayActivated_t
	{
		Byte m_bActive;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct GameServerChangeRequested_t
	{
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 64)]
		string m_rgchServer;
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 64)]
		string m_rgchPassword;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct GameLobbyJoinRequested_t
	{
		UInt64 m_steamIDLobby;
		UInt64 m_steamIDFriend;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct FriendIgnored_t
	{
		EResult m_eResult;
		UInt64 m_ulSteamID;
		UInt64 m_ulSteamFriendID;
		[MarshalAs(UnmanagedType.I1)]
		bool m_bIgnored;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct RichPresenceJoinRequested_t
	{
		UInt64 m_ulSteamID;
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 512)]
		string szUnk;
	};
	
	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct FriendProfileInfoReceived_t
	{
		UInt64 m_ulSteamID;
	};
	
}
