// Steam4COM.idl : IDL source for Steam4COM
//

// This file will be processed by the MIDL tool to
// produce the type library (Steam4COM.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(E1930C46-5747-4069-8557-91A9F7A5D9C0),
	dual,
	nonextensible,
	helpstring("ISteamworks Interface"),
	pointer_default(unique)
]
interface ISteamworks : IDispatch{
};
[
	object,
	uuid(2C1BFF57-1DFF-486C-83C7-9A5F9C3C5D21),
	dual,
	nonextensible,
	helpstring("ISteamID Interface"),
	pointer_default(unique)
]
interface ISteamID : IDispatch{
};
[
	object,
	uuid(E03512EF-12F4-418C-8E1B-A7052B35BCE4),
	dual,
	nonextensible,
	helpstring("IGameID Interface"),
	pointer_default(unique)
]
interface IGameID : IDispatch{
};
[
	uuid(3019F688-8724-45B8-835B-6D1AC7DBDCAD),
	version(1.0),
	helpstring("Steam4COM 1.0 Type Library")
]
library Steam4COMLib
{
	importlib("stdole2.tlb");
	[
		uuid(1147E492-6F78-4DED-9348-4B898EA49BE4),
		helpstring("Steamworks Class")
	]
	coclass Steamworks
	{
		[default] interface ISteamworks;
	};

	[
		uuid(97BA9E56-E772-4AD9-8E62-FABC24522A24),
		helpstring("SteamID Class")
	]
	coclass SteamID
	{
		[default] interface ISteamID;
	};
	[
		uuid(74F18782-62C7-4C77-8DBA-DBECD107FA4B),
		helpstring("GameID Class")
	]
	coclass GameID
	{
		[default] interface IGameID;
	};

	#define WINSIZE(type)
	#define STEAM4COM_COMPAT
	#define CSTEAMID_H
	#define CGAMEID_H
	#define MATCHMAKINGKEYVALUEPAIR_H
	#define SERVERNETADR_H
	#define GAMESERVERITEM_H
	#define CGameID uint32
	#define CSteamID uint64
	#include "../../Open Steamworks/SteamTypes.h"
};